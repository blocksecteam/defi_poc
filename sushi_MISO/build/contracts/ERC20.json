{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "25": "contracts/OpenZeppelin/math/SafeMath.sol",
    "29": "contracts/OpenZeppelin/utils/Address.sol",
    "31": "contracts/OpenZeppelin/utils/Context.sol",
    "40": "contracts/Tokens/ERC20.sol",
    "78": "contracts/interfaces/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/Tokens/ERC20.sol",
    "exportedSymbols": {
      "ERC20": [
        21889
      ]
    },
    "id": 21890,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 21254,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:40"
      },
      {
        "absolutePath": "contracts/OpenZeppelin/GSN/Context.sol",
        "file": "../OpenZeppelin/GSN/Context.sol",
        "id": 21255,
        "nodeType": "ImportDirective",
        "scope": 21890,
        "sourceUnit": 31234,
        "src": "25:41:40",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OpenZeppelin/math/SafeMath.sol",
        "file": "../OpenZeppelin/math/SafeMath.sol",
        "id": 21256,
        "nodeType": "ImportDirective",
        "scope": 21890,
        "sourceUnit": 18267,
        "src": "67:43:40",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OpenZeppelin/utils/Address.sol",
        "file": "../OpenZeppelin/utils/Address.sol",
        "id": 21257,
        "nodeType": "ImportDirective",
        "scope": 21890,
        "sourceUnit": 19081,
        "src": "111:43:40",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "id": 21258,
        "nodeType": "ImportDirective",
        "scope": 21890,
        "sourceUnit": 30870,
        "src": "155:34:40",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21260,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30869,
              "src": "1373:6:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$30869",
                "typeString": "contract IERC20"
              }
            },
            "id": 21261,
            "nodeType": "InheritanceSpecifier",
            "src": "1373:6:40"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 21262,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19188,
              "src": "1381:7:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$19188",
                "typeString": "contract Context"
              }
            },
            "id": 21263,
            "nodeType": "InheritanceSpecifier",
            "src": "1381:7:40"
          }
        ],
        "contractDependencies": [
          19188,
          30869
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 21259,
          "nodeType": "StructuredDocumentation",
          "src": "191:1162:40",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 21889,
        "linearizedBaseContracts": [
          21889,
          19188,
          30869
        ],
        "name": "ERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 21266,
            "libraryName": {
              "contractScope": null,
              "id": 21264,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18266,
              "src": "1401:8:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$18266",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1395:27:40",
            "typeName": {
              "id": 21265,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1414:7:40",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 21269,
            "libraryName": {
              "contractScope": null,
              "id": 21267,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19080,
              "src": "1433:7:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$19080",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1427:26:40",
            "typeName": {
              "id": 21268,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1445:7:40",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "3644e515",
            "id": 21271,
            "mutability": "mutable",
            "name": "DOMAIN_SEPARATOR",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 21889,
            "src": "1458:31:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 21270,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1458:7:40",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 21275,
            "mutability": "mutable",
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 21889,
            "src": "1496:46:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 21274,
              "keyType": {
                "id": 21272,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1505:7:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1496:28:40",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 21273,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1516:7:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "7ecebe00",
            "id": 21279,
            "mutability": "mutable",
            "name": "nonces",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 21889,
            "src": "1548:41:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 21278,
              "keyType": {
                "id": 21276,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1556:7:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1548:27:40",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 21277,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1567:7:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 21285,
            "mutability": "mutable",
            "name": "_allowances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 21889,
            "src": "1596:69:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 21284,
              "keyType": {
                "id": 21280,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1605:7:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1596:49:40",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 21283,
                "keyType": {
                  "id": 21281,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1625:7:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1616:28:40",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 21282,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1636:7:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 21287,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 21889,
            "src": "1672:28:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21286,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1672:7:40",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 21289,
            "mutability": "mutable",
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 21889,
            "src": "1707:20:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 21288,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1707:6:40",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 21291,
            "mutability": "mutable",
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 21889,
            "src": "1733:22:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 21290,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1733:6:40",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 21293,
            "mutability": "mutable",
            "name": "_decimals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 21889,
            "src": "1761:23:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 21292,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1761:5:40",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 21295,
            "mutability": "mutable",
            "name": "_initialized",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 21889,
            "src": "1790:25:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 21294,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1790:4:40",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 21345,
              "nodeType": "Block",
              "src": "2211:421:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2229:13:40",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 21304,
                          "name": "_initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21295,
                          "src": "2230:12:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a20746f6b656e2068617320616c7265616479206265656e20696e697469616c697a656421",
                        "id": 21306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2244:44:40",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_597d21f8b7097c3410d0e2e5c0e675eb5e6433410e96651832d6b48147af1a8c",
                          "typeString": "literal_string \"ERC20: token has already been initialized!\""
                        },
                        "value": "ERC20: token has already been initialized!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_597d21f8b7097c3410d0e2e5c0e675eb5e6433410e96651832d6b48147af1a8c",
                          "typeString": "literal_string \"ERC20: token has already been initialized!\""
                        }
                      ],
                      "id": 21303,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2221:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2221:68:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21308,
                  "nodeType": "ExpressionStatement",
                  "src": "2221:68:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 21309,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21289,
                      "src": "2299:5:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 21310,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21298,
                      "src": "2307:5:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2299:13:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 21312,
                  "nodeType": "ExpressionStatement",
                  "src": "2299:13:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 21313,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21291,
                      "src": "2322:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 21314,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21300,
                      "src": "2332:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2322:17:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 21316,
                  "nodeType": "ExpressionStatement",
                  "src": "2322:17:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 21317,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21293,
                      "src": "2349:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3138",
                      "id": 21318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2361:2:40",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "2349:14:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 21320,
                  "nodeType": "ExpressionStatement",
                  "src": "2349:14:40"
                },
                {
                  "assignments": [
                    21322
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21322,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 21345,
                      "src": "2373:15:40",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 21321,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2373:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 21323,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2373:15:40"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2407:44:40",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2421:20:40",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "chainid",
                            "nodeType": "YulIdentifier",
                            "src": "2432:7:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2432:9:40"
                        },
                        "variableNames": [
                          {
                            "name": "chainId",
                            "nodeType": "YulIdentifier",
                            "src": "2421:7:40"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 21322,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2421:7:40",
                      "valueSize": 1
                    }
                  ],
                  "id": 21324,
                  "nodeType": "InlineAssembly",
                  "src": "2398:53:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 21325,
                      "name": "DOMAIN_SEPARATOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21271,
                      "src": "2460:16:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "454950373132446f6d61696e2875696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                                  "id": 21330,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2510:57:40",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218",
                                    "typeString": "literal_string \"EIP712Domain(uint256 chainId,address verifyingContract)\""
                                  },
                                  "value": "EIP712Domain(uint256 chainId,address verifyingContract)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218",
                                    "typeString": "literal_string \"EIP712Domain(uint256 chainId,address verifyingContract)\""
                                  }
                                ],
                                "id": 21329,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "2500:9:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 21331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2500:68:40",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 21332,
                              "name": "chainId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21322,
                              "src": "2570:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 21335,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2587:4:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$21889",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$21889",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 21334,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2579:7:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 21333,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2579:7:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 21336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2579:13:40",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 21327,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2489:3:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 21328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2489:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 21337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2489:104:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 21326,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "2479:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 21338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2479:115:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2460:134:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 21340,
                  "nodeType": "ExpressionStatement",
                  "src": "2460:134:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 21341,
                      "name": "_initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21295,
                      "src": "2606:12:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 21342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2621:4:40",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2606:19:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21344,
                  "nodeType": "ExpressionStatement",
                  "src": "2606:19:40"
                }
              ]
            },
            "documentation": {
              "id": 21296,
              "nodeType": "StructuredDocumentation",
              "src": "1822:311:40",
              "text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
            },
            "id": 21346,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initERC20",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21298,
                  "mutability": "mutable",
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21346,
                  "src": "2158:19:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21297,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21300,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21346,
                  "src": "2179:21:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21299,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2179:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2157:44:40"
            },
            "returnParameters": {
              "id": 21302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2211:0:40"
            },
            "scope": 21889,
            "src": "2138:494:40",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              30825
            ],
            "body": {
              "id": 21355,
              "nodeType": "Block",
              "src": "2758:29:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21353,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21289,
                    "src": "2775:5:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 21352,
                  "id": 21354,
                  "nodeType": "Return",
                  "src": "2768:12:40"
                }
              ]
            },
            "documentation": {
              "id": 21347,
              "nodeType": "StructuredDocumentation",
              "src": "2638:54:40",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 21356,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21349,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2725:8:40"
            },
            "parameters": {
              "id": 21348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2710:2:40"
            },
            "returnParameters": {
              "id": 21352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21351,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21356,
                  "src": "2743:13:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21350,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2743:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2742:15:40"
            },
            "scope": 21889,
            "src": "2697:90:40",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              30830
            ],
            "body": {
              "id": 21365,
              "nodeType": "Block",
              "src": "2963:31:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21363,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21291,
                    "src": "2980:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 21362,
                  "id": 21364,
                  "nodeType": "Return",
                  "src": "2973:14:40"
                }
              ]
            },
            "documentation": {
              "id": 21357,
              "nodeType": "StructuredDocumentation",
              "src": "2793:102:40",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 21366,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21359,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2930:8:40"
            },
            "parameters": {
              "id": 21358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2915:2:40"
            },
            "returnParameters": {
              "id": 21362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21361,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21366,
                  "src": "2948:13:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21360,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2948:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2947:15:40"
            },
            "scope": 21889,
            "src": "2900:94:40",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              30835
            ],
            "body": {
              "id": 21375,
              "nodeType": "Block",
              "src": "3674:33:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21373,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21293,
                    "src": "3691:9:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 21372,
                  "id": 21374,
                  "nodeType": "Return",
                  "src": "3684:16:40"
                }
              ]
            },
            "documentation": {
              "id": 21367,
              "nodeType": "StructuredDocumentation",
              "src": "3000:612:40",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 21376,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21369,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3649:8:40"
            },
            "parameters": {
              "id": 21368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3634:2:40"
            },
            "returnParameters": {
              "id": 21372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21371,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21376,
                  "src": "3667:5:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 21370,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3667:5:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3666:7:40"
            },
            "scope": 21889,
            "src": "3617:90:40",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              30795
            ],
            "body": {
              "id": 21385,
              "nodeType": "Block",
              "src": "3829:36:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21383,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21287,
                    "src": "3846:12:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 21382,
                  "id": 21384,
                  "nodeType": "Return",
                  "src": "3839:19:40"
                }
              ]
            },
            "documentation": {
              "id": 21377,
              "nodeType": "StructuredDocumentation",
              "src": "3713:49:40",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 21386,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21379,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3802:8:40"
            },
            "parameters": {
              "id": 21378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3787:2:40"
            },
            "returnParameters": {
              "id": 21382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21381,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21386,
                  "src": "3820:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3820:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3819:9:40"
            },
            "scope": 21889,
            "src": "3767:98:40",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              30802
            ],
            "body": {
              "id": 21399,
              "nodeType": "Block",
              "src": "3998:42:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 21395,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21275,
                      "src": "4015:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 21397,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 21396,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21389,
                      "src": "4025:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4015:18:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 21394,
                  "id": 21398,
                  "nodeType": "Return",
                  "src": "4008:25:40"
                }
              ]
            },
            "documentation": {
              "id": 21387,
              "nodeType": "StructuredDocumentation",
              "src": "3871:47:40",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 21400,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21391,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3971:8:40"
            },
            "parameters": {
              "id": 21390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21389,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21400,
                  "src": "3942:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3942:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3941:17:40"
            },
            "returnParameters": {
              "id": 21394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21393,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21400,
                  "src": "3989:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3989:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3988:9:40"
            },
            "scope": 21889,
            "src": "3923:117:40",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21419,
              "nodeType": "Block",
              "src": "4326:80:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 21411,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19176,
                          "src": "4346:10:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 21412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4346:12:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21413,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21403,
                        "src": "4360:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21414,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21405,
                        "src": "4371:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21410,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21710,
                      "src": "4336:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 21415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4336:42:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21416,
                  "nodeType": "ExpressionStatement",
                  "src": "4336:42:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 21417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4395:4:40",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 21409,
                  "id": 21418,
                  "nodeType": "Return",
                  "src": "4388:11:40"
                }
              ]
            },
            "documentation": {
              "id": 21401,
              "nodeType": "StructuredDocumentation",
              "src": "4046:192:40",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 21420,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21403,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21420,
                  "src": "4261:17:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21402,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4261:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21405,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21420,
                  "src": "4280:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4280:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4260:35:40"
            },
            "returnParameters": {
              "id": 21409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21408,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21420,
                  "src": "4320:4:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21407,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4320:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4319:6:40"
            },
            "scope": 21889,
            "src": "4243:163:40",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              30811
            ],
            "body": {
              "id": 21437,
              "nodeType": "Block",
              "src": "4562:51:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 21431,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21285,
                        "src": "4579:11:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 21433,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 21432,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21423,
                        "src": "4591:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4579:18:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 21435,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 21434,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21425,
                      "src": "4598:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4579:27:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 21430,
                  "id": 21436,
                  "nodeType": "Return",
                  "src": "4572:34:40"
                }
              ]
            },
            "documentation": {
              "id": 21421,
              "nodeType": "StructuredDocumentation",
              "src": "4412:47:40",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 21438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21427,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4535:8:40"
            },
            "parameters": {
              "id": 21426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21423,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21438,
                  "src": "4483:13:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4483:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21425,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21438,
                  "src": "4498:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4498:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4482:32:40"
            },
            "returnParameters": {
              "id": 21430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21429,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21438,
                  "src": "4553:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4553:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4552:9:40"
            },
            "scope": 21889,
            "src": "4464:149:40",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              30820
            ],
            "body": {
              "id": 21458,
              "nodeType": "Block",
              "src": "4840:77:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 21450,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19176,
                          "src": "4859:10:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 21451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4859:12:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21452,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21441,
                        "src": "4873:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21453,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21443,
                        "src": "4882:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21449,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21866,
                      "src": "4850:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 21454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4850:39:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21455,
                  "nodeType": "ExpressionStatement",
                  "src": "4850:39:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 21456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4906:4:40",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 21448,
                  "id": 21457,
                  "nodeType": "Return",
                  "src": "4899:11:40"
                }
              ]
            },
            "documentation": {
              "id": 21439,
              "nodeType": "StructuredDocumentation",
              "src": "4619:127:40",
              "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 21459,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21445,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4816:8:40"
            },
            "parameters": {
              "id": 21444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21441,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21459,
                  "src": "4768:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4768:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21443,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21459,
                  "src": "4785:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4785:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4767:33:40"
            },
            "returnParameters": {
              "id": 21448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21447,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21459,
                  "src": "4834:4:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21446,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4834:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4833:6:40"
            },
            "scope": 21889,
            "src": "4751:166:40",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 21462,
            "mutability": "constant",
            "name": "EIP191_PREFIX_FOR_EIP712_STRUCTURED_DATA",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 21889,
            "src": "4971:77:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 21460,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "4971:6:40",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "1901",
              "id": 21461,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "5038:10:40",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                "typeString": "literal_string \"\u0019\u0001\""
              },
              "value": "\u0019\u0001"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 21465,
            "mutability": "constant",
            "name": "PERMIT_SIGNATURE_HASH",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 21889,
            "src": "5158:115:40",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 21463,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "5158:7:40",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
              "id": 21464,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "5207:66:40",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
                "typeString": "int_const 4995...(69 digits omitted)...3241"
              },
              "value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              30868
            ],
            "body": {
              "id": 21549,
              "nodeType": "Block",
              "src": "5860:654:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 21485,
                          "name": "owner_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21468,
                          "src": "5878:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 21488,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5896:1:40",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 21487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5888:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21486,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5888:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 21489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5888:10:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5878:20:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a204f776e65722063616e6e6f742062652030",
                        "id": 21491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5900:26:40",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d227bf0f09891e8f9d52e82638c5d3adc1c7a648bf155567088e9f930a17863a",
                          "typeString": "literal_string \"ERC20: Owner cannot be 0\""
                        },
                        "value": "ERC20: Owner cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d227bf0f09891e8f9d52e82638c5d3adc1c7a648bf155567088e9f930a17863a",
                          "typeString": "literal_string \"ERC20: Owner cannot be 0\""
                        }
                      ],
                      "id": 21484,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5870:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5870:57:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21493,
                  "nodeType": "ExpressionStatement",
                  "src": "5870:57:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 21498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 21495,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5945:5:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 21496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5945:15:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 21497,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21474,
                          "src": "5963:8:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5945:26:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a2045787069726564",
                        "id": 21499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5973:16:40",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8de0f645c4c75b46fe87a70837d5917699eefc83d9e53d54aa5950eec20d9a99",
                          "typeString": "literal_string \"ERC20: Expired\""
                        },
                        "value": "ERC20: Expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8de0f645c4c75b46fe87a70837d5917699eefc83d9e53d54aa5950eec20d9a99",
                          "typeString": "literal_string \"ERC20: Expired\""
                        }
                      ],
                      "id": 21494,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5937:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5937:53:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21501,
                  "nodeType": "ExpressionStatement",
                  "src": "5937:53:40"
                },
                {
                  "assignments": [
                    21503
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21503,
                      "mutability": "mutable",
                      "name": "digest",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 21549,
                      "src": "6000:14:40",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 21502,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6000:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 21525,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21507,
                            "name": "EIP191_PREFIX_FOR_EIP712_STRUCTURED_DATA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21462,
                            "src": "6094:40:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 21508,
                            "name": "DOMAIN_SEPARATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21271,
                            "src": "6156:16:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 21512,
                                    "name": "PERMIT_SIGNATURE_HASH",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21465,
                                    "src": "6215:21:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 21513,
                                    "name": "owner_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21468,
                                    "src": "6238:6:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 21514,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21470,
                                    "src": "6246:7:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 21515,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21472,
                                    "src": "6255:5:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 21519,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "6262:16:40",
                                    "subExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 21516,
                                        "name": "nonces",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 21279,
                                        "src": "6262:6:40",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 21518,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 21517,
                                        "name": "owner_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 21468,
                                        "src": "6269:6:40",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6262:14:40",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 21520,
                                    "name": "deadline",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21474,
                                    "src": "6280:8:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 21510,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "6204:3:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 21511,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "6204:10:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 21521,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6204:85:40",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 21509,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "6194:9:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 21522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6194:96:40",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 21505,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6056:3:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 21506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6056:16:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 21523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6056:252:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 21504,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6029:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 21524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6029:293:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6000:322:40"
                },
                {
                  "assignments": [
                    21527
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21527,
                      "mutability": "mutable",
                      "name": "recoveredAddress",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 21549,
                      "src": "6332:24:40",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 21526,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6332:7:40",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 21534,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21529,
                        "name": "digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21503,
                        "src": "6369:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21530,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21476,
                        "src": "6377:1:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21531,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21478,
                        "src": "6380:1:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21532,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21480,
                        "src": "6383:1:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 21528,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "6359:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 21533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6359:26:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6332:53:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 21536,
                          "name": "recoveredAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21527,
                          "src": "6403:16:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 21537,
                          "name": "owner_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21468,
                          "src": "6423:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6403:26:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a20496e76616c6964205369676e6174757265",
                        "id": 21539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6431:26:40",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_feb3dbf96cfb7641ce579ad49b78afe793a6caf89893783c03a588ed7340adfe",
                          "typeString": "literal_string \"ERC20: Invalid Signature\""
                        },
                        "value": "ERC20: Invalid Signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_feb3dbf96cfb7641ce579ad49b78afe793a6caf89893783c03a588ed7340adfe",
                          "typeString": "literal_string \"ERC20: Invalid Signature\""
                        }
                      ],
                      "id": 21535,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6395:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6395:63:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21541,
                  "nodeType": "ExpressionStatement",
                  "src": "6395:63:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 21543,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19176,
                          "src": "6477:10:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 21544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6477:12:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21545,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21470,
                        "src": "6491:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21546,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21472,
                        "src": "6500:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21542,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21866,
                      "src": "6468:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 21547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6468:38:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21548,
                  "nodeType": "ExpressionStatement",
                  "src": "6468:38:40"
                }
              ]
            },
            "documentation": {
              "id": 21466,
              "nodeType": "StructuredDocumentation",
              "src": "5280:382:40",
              "text": "@notice Approves `value` from `owner_` to be spend by `spender`.\n @param owner_ Address of the owner.\n @param spender The address of the spender that gets approved to draw from `owner_`.\n @param value The maximum collective amount that `spender` can draw.\n @param deadline This permit must be redeemed before this deadline (UTC timestamp in seconds)."
            },
            "functionSelector": "d505accf",
            "id": 21550,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "permit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21482,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5851:8:40"
            },
            "parameters": {
              "id": 21481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21468,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21550,
                  "src": "5692:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21467,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5692:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21470,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21550,
                  "src": "5716:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5716:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21472,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21550,
                  "src": "5741:13:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5741:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21474,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21550,
                  "src": "5764:16:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5764:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21476,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21550,
                  "src": "5790:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 21475,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5790:5:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21478,
                  "mutability": "mutable",
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21550,
                  "src": "5807:9:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 21477,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5807:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21480,
                  "mutability": "mutable",
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21550,
                  "src": "5826:9:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 21479,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5826:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5682:159:40"
            },
            "returnParameters": {
              "id": 21483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5860:0:40"
            },
            "scope": 21889,
            "src": "5667:847:40",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 21586,
              "nodeType": "Block",
              "src": "7077:205:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21563,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21553,
                        "src": "7097:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21564,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21555,
                        "src": "7105:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21565,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21557,
                        "src": "7116:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21562,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21710,
                      "src": "7087:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 21566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7087:36:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21567,
                  "nodeType": "ExpressionStatement",
                  "src": "7087:36:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21569,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21553,
                        "src": "7142:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 21570,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19176,
                          "src": "7150:10:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 21571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7150:12:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21579,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21557,
                            "src": "7202:6:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                            "id": 21580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7210:42:40",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                              "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                            },
                            "value": "ERC20: transfer amount exceeds allowance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                              "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 21572,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21285,
                                "src": "7164:11:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 21574,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 21573,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21553,
                                "src": "7176:6:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7164:19:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 21577,
                            "indexExpression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 21575,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19176,
                                "src": "7184:10:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 21576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7184:12:40",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7164:33:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 21578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18217,
                          "src": "7164:37:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 21581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7164:89:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21568,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21866,
                      "src": "7133:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 21582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7133:121:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21583,
                  "nodeType": "ExpressionStatement",
                  "src": "7133:121:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 21584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7271:4:40",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 21561,
                  "id": 21585,
                  "nodeType": "Return",
                  "src": "7264:11:40"
                }
              ]
            },
            "documentation": {
              "id": 21551,
              "nodeType": "StructuredDocumentation",
              "src": "6520:449:40",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 21587,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21553,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21587,
                  "src": "6996:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6996:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21555,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21587,
                  "src": "7012:17:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7012:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21557,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21587,
                  "src": "7031:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7031:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6995:51:40"
            },
            "returnParameters": {
              "id": 21561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21560,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21587,
                  "src": "7071:4:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21559,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7071:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7070:6:40"
            },
            "scope": 21889,
            "src": "6974:308:40",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21614,
              "nodeType": "Block",
              "src": "7771:121:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 21598,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19176,
                          "src": "7790:10:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 21599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7790:12:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21600,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21590,
                        "src": "7804:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21608,
                            "name": "addedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21592,
                            "src": "7852:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 21601,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21285,
                                "src": "7813:11:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 21604,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 21602,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19176,
                                  "src": "7825:10:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 21603,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7825:12:40",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7813:25:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 21606,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 21605,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21590,
                              "src": "7839:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7813:34:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 21607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18093,
                          "src": "7813:38:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 21609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7813:50:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21597,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21866,
                      "src": "7781:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 21610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7781:83:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21611,
                  "nodeType": "ExpressionStatement",
                  "src": "7781:83:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 21612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7881:4:40",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 21596,
                  "id": 21613,
                  "nodeType": "Return",
                  "src": "7874:11:40"
                }
              ]
            },
            "documentation": {
              "id": 21588,
              "nodeType": "StructuredDocumentation",
              "src": "7288:384:40",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 21615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21590,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21615,
                  "src": "7704:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7704:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21592,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21615,
                  "src": "7721:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7721:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7703:37:40"
            },
            "returnParameters": {
              "id": 21596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21595,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21615,
                  "src": "7765:4:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21594,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7765:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7764:6:40"
            },
            "scope": 21889,
            "src": "7677:215:40",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21643,
              "nodeType": "Block",
              "src": "8478:167:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 21626,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19176,
                          "src": "8497:10:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 21627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8497:12:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21628,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21618,
                        "src": "8511:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 21636,
                            "name": "subtractedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21620,
                            "src": "8559:15:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                            "id": 21637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8576:39:40",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                              "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                            },
                            "value": "ERC20: decreased allowance below zero"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                              "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 21629,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21285,
                                "src": "8520:11:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 21632,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 21630,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19176,
                                  "src": "8532:10:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 21631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8532:12:40",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8520:25:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 21634,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 21633,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21618,
                              "src": "8546:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8520:34:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 21635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18217,
                          "src": "8520:38:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 21638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8520:96:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21625,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21866,
                      "src": "8488:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 21639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8488:129:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21640,
                  "nodeType": "ExpressionStatement",
                  "src": "8488:129:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 21641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8634:4:40",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 21624,
                  "id": 21642,
                  "nodeType": "Return",
                  "src": "8627:11:40"
                }
              ]
            },
            "documentation": {
              "id": 21616,
              "nodeType": "StructuredDocumentation",
              "src": "7898:476:40",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 21644,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21618,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21644,
                  "src": "8406:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21617,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8406:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21620,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21644,
                  "src": "8423:23:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21619,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8423:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8405:42:40"
            },
            "returnParameters": {
              "id": 21624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21623,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21644,
                  "src": "8472:4:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21622,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8472:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8471:6:40"
            },
            "scope": 21889,
            "src": "8379:266:40",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21709,
              "nodeType": "Block",
              "src": "9206:443:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 21655,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21647,
                          "src": "9224:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 21658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9242:1:40",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 21657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9234:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21656,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9234:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 21659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9234:10:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "9224:20:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 21661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9246:39:40",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 21654,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9216:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9216:70:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21663,
                  "nodeType": "ExpressionStatement",
                  "src": "9216:70:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 21665,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21649,
                          "src": "9304:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 21668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9325:1:40",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 21667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9317:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21666,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9317:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 21669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9317:10:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "9304:23:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 21671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9329:37:40",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 21664,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9296:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9296:71:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21673,
                  "nodeType": "ExpressionStatement",
                  "src": "9296:71:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21675,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21647,
                        "src": "9399:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21676,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21649,
                        "src": "9407:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21677,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21651,
                        "src": "9418:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21674,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21888,
                      "src": "9378:20:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 21678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9378:47:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21679,
                  "nodeType": "ExpressionStatement",
                  "src": "9378:47:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 21680,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21275,
                        "src": "9436:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 21682,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 21681,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21647,
                        "src": "9446:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9436:17:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 21687,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21651,
                          "src": "9478:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                          "id": 21688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9486:40:40",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                            "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                          },
                          "value": "ERC20: transfer amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                            "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 21683,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21275,
                            "src": "9456:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 21685,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 21684,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21647,
                            "src": "9466:6:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9456:17:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 21686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18217,
                        "src": "9456:21:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 21689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9456:71:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9436:91:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21691,
                  "nodeType": "ExpressionStatement",
                  "src": "9436:91:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 21692,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21275,
                        "src": "9537:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 21694,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 21693,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21649,
                        "src": "9547:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9537:20:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 21699,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21651,
                          "src": "9585:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 21695,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21275,
                            "src": "9560:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 21697,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 21696,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21649,
                            "src": "9570:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9560:20:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 21698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18093,
                        "src": "9560:24:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 21700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9560:32:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9537:55:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21702,
                  "nodeType": "ExpressionStatement",
                  "src": "9537:55:40"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21704,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21647,
                        "src": "9616:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21705,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21649,
                        "src": "9624:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21706,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21651,
                        "src": "9635:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21703,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30843,
                      "src": "9607:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 21707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9607:35:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21708,
                  "nodeType": "EmitStatement",
                  "src": "9602:40:40"
                }
              ]
            },
            "documentation": {
              "id": 21645,
              "nodeType": "StructuredDocumentation",
              "src": "8651:463:40",
              "text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 21710,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21647,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21710,
                  "src": "9138:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21646,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9138:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21649,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21710,
                  "src": "9154:17:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21648,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9154:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21651,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21710,
                  "src": "9173:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9173:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9137:51:40"
            },
            "returnParameters": {
              "id": 21653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9206:0:40"
            },
            "scope": 21889,
            "src": "9119:530:40",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 21764,
              "nodeType": "Block",
              "src": "9984:305:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 21719,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21713,
                          "src": "10002:7:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 21722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10021:1:40",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 21721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10013:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21720,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10013:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 21723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10013:10:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "10002:21:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 21725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10025:33:40",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 21718,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9994:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9994:65:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21727,
                  "nodeType": "ExpressionStatement",
                  "src": "9994:65:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 21731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10099:1:40",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 21730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10091:7:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21729,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10091:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 21732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10091:10:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21733,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21713,
                        "src": "10103:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21734,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21715,
                        "src": "10112:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21728,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21888,
                      "src": "10070:20:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 21735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10070:49:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21736,
                  "nodeType": "ExpressionStatement",
                  "src": "10070:49:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 21737,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21287,
                      "src": "10130:12:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 21740,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21715,
                          "src": "10162:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 21738,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21287,
                          "src": "10145:12:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 21739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18093,
                        "src": "10145:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 21741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10145:24:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10130:39:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21743,
                  "nodeType": "ExpressionStatement",
                  "src": "10130:39:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 21744,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21275,
                        "src": "10179:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 21746,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 21745,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21713,
                        "src": "10189:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10179:18:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 21751,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21715,
                          "src": "10223:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 21747,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21275,
                            "src": "10200:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 21749,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 21748,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21713,
                            "src": "10210:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10200:18:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 21750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18093,
                        "src": "10200:22:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 21752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10200:30:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10179:51:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21754,
                  "nodeType": "ExpressionStatement",
                  "src": "10179:51:40"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 21758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10262:1:40",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 21757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10254:7:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21756,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10254:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 21759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10254:10:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21760,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21713,
                        "src": "10266:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21761,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21715,
                        "src": "10275:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21755,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30843,
                      "src": "10245:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 21762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10245:37:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21763,
                  "nodeType": "EmitStatement",
                  "src": "10240:42:40"
                }
              ]
            },
            "documentation": {
              "id": 21711,
              "nodeType": "StructuredDocumentation",
              "src": "9655:259:40",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
            },
            "id": 21765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21713,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21765,
                  "src": "9934:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9934:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21715,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21765,
                  "src": "9951:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21714,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9951:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9933:33:40"
            },
            "returnParameters": {
              "id": 21717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9984:0:40"
            },
            "scope": 21889,
            "src": "9919:370:40",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 21820,
              "nodeType": "Block",
              "src": "10673:345:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 21774,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21768,
                          "src": "10691:7:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 21777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10710:1:40",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 21776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10702:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21775,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10702:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 21778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10702:10:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "10691:21:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 21780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10714:35:40",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 21773,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10683:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10683:67:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21782,
                  "nodeType": "ExpressionStatement",
                  "src": "10683:67:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21784,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21768,
                        "src": "10782:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 21787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10799:1:40",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 21786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10791:7:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21785,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10791:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 21788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10791:10:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21789,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21770,
                        "src": "10803:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21783,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21888,
                      "src": "10761:20:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 21790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10761:49:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21791,
                  "nodeType": "ExpressionStatement",
                  "src": "10761:49:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 21792,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21275,
                        "src": "10821:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 21794,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 21793,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21768,
                        "src": "10831:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10821:18:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 21799,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21770,
                          "src": "10865:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                          "id": 21800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10873:36:40",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                            "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                          },
                          "value": "ERC20: burn amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                            "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 21795,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21275,
                            "src": "10842:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 21797,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 21796,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21768,
                            "src": "10852:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10842:18:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 21798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18217,
                        "src": "10842:22:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 21801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10842:68:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10821:89:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21803,
                  "nodeType": "ExpressionStatement",
                  "src": "10821:89:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 21804,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21287,
                      "src": "10920:12:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 21807,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21770,
                          "src": "10952:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 21805,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21287,
                          "src": "10935:12:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 21806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18115,
                        "src": "10935:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 21808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10935:24:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10920:39:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21810,
                  "nodeType": "ExpressionStatement",
                  "src": "10920:39:40"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21812,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21768,
                        "src": "10983:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 21815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11000:1:40",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 21814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10992:7:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21813,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10992:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 21816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10992:10:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21817,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21770,
                        "src": "11004:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21811,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30843,
                      "src": "10974:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 21818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10974:37:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21819,
                  "nodeType": "EmitStatement",
                  "src": "10969:42:40"
                }
              ]
            },
            "documentation": {
              "id": 21766,
              "nodeType": "StructuredDocumentation",
              "src": "10295:308:40",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 21821,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21768,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21821,
                  "src": "10623:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10623:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21770,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21821,
                  "src": "10640:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10640:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10622:33:40"
            },
            "returnParameters": {
              "id": 21772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10673:0:40"
            },
            "scope": 21889,
            "src": "10608:410:40",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 21865,
              "nodeType": "Block",
              "src": "11524:257:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 21832,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21824,
                          "src": "11542:5:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 21835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11559:1:40",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 21834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11551:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21833,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11551:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 21836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11551:10:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "11542:19:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 21838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11563:38:40",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 21831,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11534:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11534:68:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21840,
                  "nodeType": "ExpressionStatement",
                  "src": "11534:68:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 21842,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21826,
                          "src": "11620:7:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 21845,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11639:1:40",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 21844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11631:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21843,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11631:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 21846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11631:10:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "11620:21:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 21848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11643:36:40",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 21841,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11612:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11612:68:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21850,
                  "nodeType": "ExpressionStatement",
                  "src": "11612:68:40"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 21851,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21285,
                          "src": "11691:11:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 21854,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 21852,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21824,
                          "src": "11703:5:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11691:18:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 21855,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 21853,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21826,
                        "src": "11710:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11691:27:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 21856,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21828,
                      "src": "11721:6:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11691:36:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21858,
                  "nodeType": "ExpressionStatement",
                  "src": "11691:36:40"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 21860,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21824,
                        "src": "11751:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21861,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21826,
                        "src": "11758:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 21862,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21828,
                        "src": "11767:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21859,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30851,
                      "src": "11742:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 21863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11742:32:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21864,
                  "nodeType": "EmitStatement",
                  "src": "11737:37:40"
                }
              ]
            },
            "documentation": {
              "id": 21822,
              "nodeType": "StructuredDocumentation",
              "src": "11024:412:40",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 21866,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21824,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21866,
                  "src": "11459:13:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11459:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21826,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21866,
                  "src": "11474:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11474:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21828,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21866,
                  "src": "11491:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11491:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11458:48:40"
            },
            "returnParameters": {
              "id": 21830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11524:0:40"
            },
            "scope": 21889,
            "src": "11441:340:40",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 21876,
              "nodeType": "Block",
              "src": "12154:38:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 21874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 21872,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21293,
                      "src": "12164:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 21873,
                      "name": "decimals_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21869,
                      "src": "12176:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "12164:21:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 21875,
                  "nodeType": "ExpressionStatement",
                  "src": "12164:21:40"
                }
              ]
            },
            "documentation": {
              "id": 21867,
              "nodeType": "StructuredDocumentation",
              "src": "11787:312:40",
              "text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
            },
            "id": 21877,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setupDecimals",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21869,
                  "mutability": "mutable",
                  "name": "decimals_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21877,
                  "src": "12128:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 21868,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "12128:5:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12127:17:40"
            },
            "returnParameters": {
              "id": 21871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12154:0:40"
            },
            "scope": 21889,
            "src": "12104:88:40",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 21887,
              "nodeType": "Block",
              "src": "12868:3:40",
              "statements": []
            },
            "documentation": {
              "id": 21878,
              "nodeType": "StructuredDocumentation",
              "src": "12198:576:40",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 21888,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21880,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21888,
                  "src": "12809:12:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21879,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12809:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21882,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21888,
                  "src": "12823:10:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21881,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12823:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21884,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21888,
                  "src": "12835:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21883,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12835:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12808:42:40"
            },
            "returnParameters": {
              "id": 21886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12868:0:40"
            },
            "scope": 21889,
            "src": "12779:92:40",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 21890,
        "src": "1355:11518:40"
      }
    ],
    "src": "0:12873:40"
  },
  "bytecode": "608060405234801561001057600080fd5b50610d6d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d7146102a2578063a9059cbb146102ce578063d505accf146102fa578063dd62ed3e1461034d576100ea565b806370a082311461024e5780637ecebe001461027457806395d89b411461029a576100ea565b806323b872dd116100c857806323b872dd146101c6578063313ce567146101fc5780633644e5151461021a5780633950935114610222576100ea565b806306fdde03146100ef578063095ea7b31461016c57806318160ddd146101ac575b600080fd5b6100f761037b565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101986004803603604081101561018257600080fd5b506001600160a01b038135169060200135610411565b604080519115158252519081900360200190f35b6101b461042e565b60408051918252519081900360200190f35b610198600480360360608110156101dc57600080fd5b506001600160a01b03813581169160208101359091169060400135610434565b6102046104bb565b6040805160ff9092168252519081900360200190f35b6101b46104c4565b6101986004803603604081101561023857600080fd5b506001600160a01b0381351690602001356104ca565b6101b46004803603602081101561026457600080fd5b50356001600160a01b0316610518565b6101b46004803603602081101561028a57600080fd5b50356001600160a01b0316610533565b6100f7610545565b610198600480360360408110156102b857600080fd5b506001600160a01b0381351690602001356105a6565b610198600480360360408110156102e457600080fd5b506001600160a01b03813516906020013561060e565b61034b600480360360e081101561031057600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135610622565b005b6101b46004803603604081101561036357600080fd5b506001600160a01b03813581169160200135166108c1565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104075780601f106103dc57610100808354040283529160200191610407565b820191906000526020600020905b8154815290600101906020018083116103ea57829003601f168201915b5050505050905090565b600061042561041e6108ec565b84846108f0565b50600192915050565b60045490565b60006104418484846109dc565b6104b18461044d6108ec565b6104ac85604051806060016040528060288152602001610ca2602891396001600160a01b038a1660009081526003602052604081209061048b6108ec565b6001600160a01b031681526020810191909152604001600020549190610b39565b6108f0565b5060019392505050565b60075460ff1690565b60005481565b60006104256104d76108ec565b846104ac85600360006104e86108ec565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610bd0565b6001600160a01b031660009081526001602052604090205490565b60026020526000908152604090205481565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104075780601f106103dc57610100808354040283529160200191610407565b60006104256105b36108ec565b846104ac85604051806060016040528060258152602001610d1360259139600360006105dd6108ec565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610b39565b600061042561061b6108ec565b84846109dc565b6001600160a01b03871661067d576040805162461bcd60e51b815260206004820152601860248201527f45524332303a204f776e65722063616e6e6f7420626520300000000000000000604482015290519081900360640190fd5b8342106106c2576040805162461bcd60e51b815260206004820152600e60248201526d115490cc8c0e88115e1c1a5c995960921b604482015290519081900360640190fd5b604080518082018252600280825261190160f01b6020808401918252600080546001600160a01b03808f1680845295845287832080546001810190915588517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981870152808a0197909752908e166060870152608086018d905260a086015260c08086018c90528751808703909101815260e0860190975286519690920195909520845191939092610100909101918291908083835b602083106107975780518252601f199092019160209182019101610778565b51815160209384036101000a6000190180199092169116179052920194855250838101929092525060408051808403830181528184018083528151918401919091206000918290526060850180845281905260ff8a16608086015260a0850189905260c085018890529151919550935060019260e08082019392601f1981019281900390910190855afa158015610832573d6000803e3d6000fd5b505050602060405103519050886001600160a01b0316816001600160a01b0316146108a4576040805162461bcd60e51b815260206004820152601860248201527f45524332303a20496e76616c6964205369676e61747572650000000000000000604482015290519081900360640190fd5b6108b66108af6108ec565b89896108f0565b505050505050505050565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166109355760405162461bcd60e51b8152600401808060200182810382526024815260200180610cef6024913960400191505060405180910390fd5b6001600160a01b03821661097a5760405162461bcd60e51b8152600401808060200182810382526022815260200180610c5a6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260036020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a215760405162461bcd60e51b8152600401808060200182810382526025815260200180610cca6025913960400191505060405180910390fd5b6001600160a01b038216610a665760405162461bcd60e51b8152600401808060200182810382526023815260200180610c376023913960400191505060405180910390fd5b610a71838383610c31565b610aae81604051806060016040528060268152602001610c7c602691396001600160a01b0386166000908152600160205260409020549190610b39565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610add9082610bd0565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610bc85760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b8d578181015183820152602001610b75565b50505050905090810190601f168015610bba5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c2a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220aee7cad5b05881ce7b357fc02a416b0e6ca2093d2725da3225f19d96aded1fa364736f6c634300060c0033",
  "bytecodeSha1": "e2cbc4047d91b64de9a137a4187121905afe13b0",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "25": {
        "SafeMath.add": {
          "41": [
            2763,
            2769,
            true
          ]
        },
        "SafeMath.sub": {
          "40": [
            5506,
            5512,
            true
          ]
        }
      },
      "29": {},
      "31": {},
      "40": {
        "ERC20._approve": {
          "36": [
            11542,
            11561,
            true
          ],
          "37": [
            11620,
            11641,
            true
          ]
        },
        "ERC20._transfer": {
          "38": [
            9224,
            9244,
            true
          ],
          "39": [
            9304,
            9327,
            true
          ]
        },
        "ERC20.permit": {
          "33": [
            5878,
            5898,
            true
          ],
          "34": [
            5945,
            5971,
            true
          ],
          "35": [
            6403,
            6429,
            true
          ]
        }
      },
      "78": {}
    },
    "statements": {
      "25": {
        "SafeMath.add": {
          "31": [
            2755,
            2801
          ],
          "32": [
            2811,
            2819
          ]
        },
        "SafeMath.sub": {
          "29": [
            5498,
            5527
          ],
          "30": [
            5537,
            5549
          ]
        }
      },
      "29": {},
      "31": {
        "Context._msgSender": {
          "18": [
            639,
            656
          ]
        }
      },
      "40": {
        "ERC20._approve": {
          "19": [
            11534,
            11602
          ],
          "20": [
            11612,
            11680
          ],
          "21": [
            11691,
            11727
          ],
          "22": [
            11737,
            11774
          ]
        },
        "ERC20._transfer": {
          "23": [
            9216,
            9286
          ],
          "24": [
            9296,
            9367
          ],
          "25": [
            9378,
            9425
          ],
          "26": [
            9436,
            9527
          ],
          "27": [
            9537,
            9592
          ],
          "28": [
            9602,
            9642
          ]
        },
        "ERC20.allowance": {
          "17": [
            4572,
            4606
          ]
        },
        "ERC20.approve": {
          "1": [
            4850,
            4889
          ],
          "2": [
            4899,
            4910
          ]
        },
        "ERC20.balanceOf": {
          "9": [
            4008,
            4033
          ]
        },
        "ERC20.decimals": {
          "7": [
            3684,
            3700
          ]
        },
        "ERC20.decreaseAllowance": {
          "11": [
            8488,
            8617
          ]
        },
        "ERC20.increaseAllowance": {
          "8": [
            7781,
            7864
          ]
        },
        "ERC20.name": {
          "0": [
            2768,
            2780
          ]
        },
        "ERC20.permit": {
          "13": [
            5870,
            5927
          ],
          "14": [
            5937,
            5990
          ],
          "15": [
            6395,
            6458
          ],
          "16": [
            6468,
            6506
          ]
        },
        "ERC20.symbol": {
          "10": [
            2973,
            2987
          ]
        },
        "ERC20.totalSupply": {
          "3": [
            3839,
            3858
          ]
        },
        "ERC20.transfer": {
          "12": [
            4336,
            4378
          ]
        },
        "ERC20.transferFrom": {
          "4": [
            7087,
            7123
          ],
          "5": [
            7133,
            7254
          ],
          "6": [
            7264,
            7275
          ]
        }
      },
      "78": {}
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "IERC20",
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d7146102a2578063a9059cbb146102ce578063d505accf146102fa578063dd62ed3e1461034d576100ea565b806370a082311461024e5780637ecebe001461027457806395d89b411461029a576100ea565b806323b872dd116100c857806323b872dd146101c6578063313ce567146101fc5780633644e5151461021a5780633950935114610222576100ea565b806306fdde03146100ef578063095ea7b31461016c57806318160ddd146101ac575b600080fd5b6100f761037b565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101986004803603604081101561018257600080fd5b506001600160a01b038135169060200135610411565b604080519115158252519081900360200190f35b6101b461042e565b60408051918252519081900360200190f35b610198600480360360608110156101dc57600080fd5b506001600160a01b03813581169160208101359091169060400135610434565b6102046104bb565b6040805160ff9092168252519081900360200190f35b6101b46104c4565b6101986004803603604081101561023857600080fd5b506001600160a01b0381351690602001356104ca565b6101b46004803603602081101561026457600080fd5b50356001600160a01b0316610518565b6101b46004803603602081101561028a57600080fd5b50356001600160a01b0316610533565b6100f7610545565b610198600480360360408110156102b857600080fd5b506001600160a01b0381351690602001356105a6565b610198600480360360408110156102e457600080fd5b506001600160a01b03813516906020013561060e565b61034b600480360360e081101561031057600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135610622565b005b6101b46004803603604081101561036357600080fd5b506001600160a01b03813581169160200135166108c1565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104075780601f106103dc57610100808354040283529160200191610407565b820191906000526020600020905b8154815290600101906020018083116103ea57829003601f168201915b5050505050905090565b600061042561041e6108ec565b84846108f0565b50600192915050565b60045490565b60006104418484846109dc565b6104b18461044d6108ec565b6104ac85604051806060016040528060288152602001610ca2602891396001600160a01b038a1660009081526003602052604081209061048b6108ec565b6001600160a01b031681526020810191909152604001600020549190610b39565b6108f0565b5060019392505050565b60075460ff1690565b60005481565b60006104256104d76108ec565b846104ac85600360006104e86108ec565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610bd0565b6001600160a01b031660009081526001602052604090205490565b60026020526000908152604090205481565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104075780601f106103dc57610100808354040283529160200191610407565b60006104256105b36108ec565b846104ac85604051806060016040528060258152602001610d1360259139600360006105dd6108ec565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610b39565b600061042561061b6108ec565b84846109dc565b6001600160a01b03871661067d576040805162461bcd60e51b815260206004820152601860248201527f45524332303a204f776e65722063616e6e6f7420626520300000000000000000604482015290519081900360640190fd5b8342106106c2576040805162461bcd60e51b815260206004820152600e60248201526d115490cc8c0e88115e1c1a5c995960921b604482015290519081900360640190fd5b604080518082018252600280825261190160f01b6020808401918252600080546001600160a01b03808f1680845295845287832080546001810190915588517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981870152808a0197909752908e166060870152608086018d905260a086015260c08086018c90528751808703909101815260e0860190975286519690920195909520845191939092610100909101918291908083835b602083106107975780518252601f199092019160209182019101610778565b51815160209384036101000a6000190180199092169116179052920194855250838101929092525060408051808403830181528184018083528151918401919091206000918290526060850180845281905260ff8a16608086015260a0850189905260c085018890529151919550935060019260e08082019392601f1981019281900390910190855afa158015610832573d6000803e3d6000fd5b505050602060405103519050886001600160a01b0316816001600160a01b0316146108a4576040805162461bcd60e51b815260206004820152601860248201527f45524332303a20496e76616c6964205369676e61747572650000000000000000604482015290519081900360640190fd5b6108b66108af6108ec565b89896108f0565b505050505050505050565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166109355760405162461bcd60e51b8152600401808060200182810382526024815260200180610cef6024913960400191505060405180910390fd5b6001600160a01b03821661097a5760405162461bcd60e51b8152600401808060200182810382526022815260200180610c5a6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260036020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a215760405162461bcd60e51b8152600401808060200182810382526025815260200180610cca6025913960400191505060405180910390fd5b6001600160a01b038216610a665760405162461bcd60e51b8152600401808060200182810382526023815260200180610c376023913960400191505060405180910390fd5b610a71838383610c31565b610aae81604051806060016040528060268152602001610c7c602691396001600160a01b0386166000908152600160205260409020549190610b39565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610add9082610bd0565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610bc85760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b8d578181015183820152602001610b75565b50505050905090810190601f168015610bba5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c2a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220aee7cad5b05881ce7b357fc02a416b0e6ca2093d2725da3225f19d96aded1fa364736f6c634300060c0033",
  "deployedSourceMap": "1355:11518:40:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4751:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4751:166:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3767:98;;;:::i;:::-;;;;;;;;;;;;;;;;6974:308;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6974:308:40;;;;;;;;;;;;;;;;;:::i;3617:90::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1458:31;;;:::i;7677:215::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7677:215:40;;;;;;;;:::i;3923:117::-;;;;;;;;;;;;;;;;-1:-1:-1;3923:117:40;-1:-1:-1;;;;;3923:117:40;;:::i;1548:41::-;;;;;;;;;;;;;;;;-1:-1:-1;1548:41:40;-1:-1:-1;;;;;1548:41:40;;:::i;2900:94::-;;;:::i;8379:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8379:266:40;;;;;;;;:::i;4243:163::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4243:163:40;;;;;;;;:::i;5667:847::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5667:847:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4464:149;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4464:149:40;;;;;;;;;;:::i;2697:90::-;2775:5;2768:12;;;;;;;;-1:-1:-1;;2768:12:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2743:13;;2768:12;;2775:5;;2768:12;;2775:5;2768:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:90;:::o;4751:166::-;4834:4;4850:39;4859:12;:10;:12::i;:::-;4873:7;4882:6;4850:8;:39::i;:::-;-1:-1:-1;4906:4:40;4751:166;;;;:::o;3767:98::-;3846:12;;3767:98;:::o;6974:308::-;7071:4;7087:36;7097:6;7105:9;7116:6;7087:9;:36::i;:::-;7133:121;7142:6;7150:12;:10;:12::i;:::-;7164:89;7202:6;7164:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7164:19:40;;;;;;:11;:19;;;;;;7184:12;:10;:12::i;:::-;-1:-1:-1;;;;;7164:33:40;;;;;;;;;;;;-1:-1:-1;7164:33:40;;;:89;:37;:89::i;:::-;7133:8;:121::i;:::-;-1:-1:-1;7271:4:40;6974:308;;;;;:::o;3617:90::-;3691:9;;;;3617:90;:::o;1458:31::-;;;;:::o;7677:215::-;7765:4;7781:83;7790:12;:10;:12::i;:::-;7804:7;7813:50;7852:10;7813:11;:25;7825:12;:10;:12::i;:::-;-1:-1:-1;;;;;7813:25:40;;;;;;;;;;;;;;;;;-1:-1:-1;7813:25:40;;;:34;;;;;;;;;;;:38;:50::i;3923:117::-;-1:-1:-1;;;;;4015:18:40;3989:7;4015:18;;;:9;:18;;;;;;;3923:117::o;1548:41::-;;;;;;;;;;;;;:::o;2900:94::-;2980:7;2973:14;;;;;;;;-1:-1:-1;;2973:14:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2948:13;;2973:14;;2980:7;;2973:14;;2980:7;2973:14;;;;;;;;;;;;;;;;;;;;;;;;8379:266;8472:4;8488:129;8497:12;:10;:12::i;:::-;8511:7;8520:96;8559:15;8520:96;;;;;;;;;;;;;;;;;:11;:25;8532:12;:10;:12::i;:::-;-1:-1:-1;;;;;8520:25:40;;;;;;;;;;;;;;;;;-1:-1:-1;8520:25:40;;;:34;;;;;;;;;;;:96;:38;:96::i;4243:163::-;4320:4;4336:42;4346:12;:10;:12::i;:::-;4360:9;4371:6;4336:9;:42::i;5667:847::-;-1:-1:-1;;;;;5878:20:40;;5870:57;;;;;-1:-1:-1;;;5870:57:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;5963:8;5945:15;:26;5937:53;;;;;-1:-1:-1;;;5937:53:40;;;;;;;;;;;;-1:-1:-1;;;5937:53:40;;;;;;;;;;;;;;;6094:40;;;;;;;;;;;;-1:-1:-1;;;6094:40:40;;;;;;;6000:14;6156:16;;-1:-1:-1;;;;;6262:14:40;;;;;;;;;;;;:16;;;;;;;;6204:85;;5207:66;6204:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6194:96;;;;;;;;;;6056:252;;6156:16;;6194:96;;6056:252;;;;;;;6094:40;6056:252;;6094:40;6056:252;;;;;;;;;;-1:-1:-1;;6056:252:40;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6056:252:40;;;;;;;;;;;;;;;;-1:-1:-1;6056:252:40;;;;;;;-1:-1:-1;6056:252:40;;;;;;;;;;;;;;;;6029:293;;;;;;;;;-1:-1:-1;6359:26:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6029:293;;-1:-1:-1;;;6056:252:40;;6359:26;;;;;6056:252;-1:-1:-1;;6359:26:40;;;;;;;;;;6056:252;6359:26;;;;;;;;;;;;;;;;;;;;;;;6332:53;;6423:6;-1:-1:-1;;;;;6403:26:40;:16;-1:-1:-1;;;;;6403:26:40;;6395:63;;;;;-1:-1:-1;;;6395:63:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;6468:38;6477:12;:10;:12::i;:::-;6491:7;6500:5;6468:8;:38::i;:::-;5667:847;;;;;;;;;:::o;4464:149::-;-1:-1:-1;;;;;4579:18:40;;;4553:7;4579:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4464:149::o;559:104:31:-;646:10;559:104;:::o;11441:340:40:-;-1:-1:-1;;;;;11542:19:40;;11534:68;;;;-1:-1:-1;;;11534:68:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11620:21:40;;11612:68;;;;-1:-1:-1;;;11612:68:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11691:18:40;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11742:32;;;;;;;;;;;;;;;;;11441:340;;;:::o;9119:530::-;-1:-1:-1;;;;;9224:20:40;;9216:70;;;;-1:-1:-1;;;9216:70:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9304:23:40;;9296:71;;;;-1:-1:-1;;;9296:71:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9378:47;9399:6;9407:9;9418:6;9378:20;:47::i;:::-;9456:71;9478:6;9456:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9456:17:40;;;;;;:9;:17;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;9436:17:40;;;;;;;:9;:17;;;;;;:91;;;;9560:20;;;;;;;:32;;9585:6;9560:24;:32::i;:::-;-1:-1:-1;;;;;9537:20:40;;;;;;;:9;:20;;;;;;;;;:55;;;;9607:35;;;;;;;9537:20;;9607:35;;;;;;;;;;;;;9119:530;;;:::o;5393:163:25:-;5479:7;5514:12;5506:6;;;;5498:29;;;;-1:-1:-1;;;5498:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5544:5:25;;;5393:163::o;2651:175::-;2709:7;2740:5;;;2763:6;;;;2755:46;;;;;-1:-1:-1;;;2755:46:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;2818:1;2651:175;-1:-1:-1;;;2651:175:25:o;12779:92:40:-;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Approves `value` from `owner_` to be spend by `spender`.",
        "params": {
          "deadline": "This permit must be redeemed before this deadline (UTC timestamp in seconds).",
          "owner_": "Address of the owner.",
          "spender": "The address of the spender that gets approved to draw from `owner_`.",
          "value": "The maximum collective amount that `spender` can draw."
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    1355,
    12873
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x34D JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29A JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x222 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x131 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x119 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x15E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x434 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x4C4 JUMP JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x518 JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x533 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x545 JUMP JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5A6 JUMP JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x60E JUMP JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x622 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x8C1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x407 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x407 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3EA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x425 PUSH2 0x41E PUSH2 0x8EC JUMP JUMPDEST DUP5 DUP5 PUSH2 0x8F0 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x441 DUP5 DUP5 DUP5 PUSH2 0x9DC JUMP JUMPDEST PUSH2 0x4B1 DUP5 PUSH2 0x44D PUSH2 0x8EC JUMP JUMPDEST PUSH2 0x4AC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA2 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x48B PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x8F0 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x425 PUSH2 0x4D7 PUSH2 0x8EC JUMP JUMPDEST DUP5 PUSH2 0x4AC DUP6 PUSH1 0x3 PUSH1 0x0 PUSH2 0x4E8 PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x407 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x407 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x425 PUSH2 0x5B3 PUSH2 0x8EC JUMP JUMPDEST DUP5 PUSH2 0x4AC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD13 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 PUSH2 0x5DD PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x425 PUSH2 0x61B PUSH2 0x8EC JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x67D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A204F776E65722063616E6E6F7420626520300000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 TIMESTAMP LT PUSH2 0x6C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x115490CC8C0E88115E1C1A5C9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x2 DUP1 DUP3 MSTORE PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP16 AND DUP1 DUP5 MSTORE SWAP6 DUP5 MSTORE DUP8 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP9 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP8 ADD MSTORE DUP1 DUP11 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP1 DUP15 AND PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD DUP14 SWAP1 MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP1 DUP7 ADD DUP13 SWAP1 MSTORE DUP8 MLOAD DUP1 DUP8 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP7 ADD SWAP1 SWAP8 MSTORE DUP7 MLOAD SWAP7 SWAP1 SWAP3 ADD SWAP6 SWAP1 SWAP6 KECCAK256 DUP5 MLOAD SWAP2 SWAP4 SWAP1 SWAP3 PUSH2 0x100 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x797 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x778 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP5 DUP6 MSTORE POP DUP4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP5 SUB DUP4 ADD DUP2 MSTORE DUP2 DUP5 ADD DUP1 DUP4 MSTORE DUP2 MLOAD SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x60 DUP6 ADD DUP1 DUP5 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP11 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0xC0 DUP6 ADD DUP9 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP6 POP SWAP4 POP PUSH1 0x1 SWAP3 PUSH1 0xE0 DUP1 DUP3 ADD SWAP4 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x832 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8A4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20496E76616C6964205369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8B6 PUSH2 0x8AF PUSH2 0x8EC JUMP JUMPDEST DUP10 DUP10 PUSH2 0x8F0 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCEF PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x97A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC5A PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCCA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC37 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA71 DUP4 DUP4 DUP4 PUSH2 0xC31 JUMP JUMPDEST PUSH2 0xAAE DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC7C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xADD SWAP1 DUP3 PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xBC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB8D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB75 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xBBA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xC2A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220AEE7 0xCA 0xD5 0xB0 PC DUP2 0xCE PUSH28 0x357FC02A416B0E6CA2093D2725DA3225F19D96ADED1FA364736F6C63 NUMBER STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "5": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "CALLVALUE",
      "path": "40"
    },
    "6": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "DUP1",
      "path": "40"
    },
    "7": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "8": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "12": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "DUP1",
      "path": "40"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "REVERT",
      "path": "40"
    },
    "16": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "17": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "POP",
      "path": "40"
    },
    "18": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "CALLDATASIZE",
      "path": "40"
    },
    "21": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "LT",
      "path": "40"
    },
    "22": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xEA"
    },
    "25": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "26": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "29": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "SHR",
      "path": "40"
    },
    "32": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "DUP1",
      "path": "40"
    },
    "33": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH4",
      "path": "40",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "GT",
      "path": "40"
    },
    "39": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "43": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "DUP1",
      "path": "40"
    },
    "44": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH4",
      "path": "40",
      "value": "0xA457C2D7"
    },
    "49": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "GT",
      "path": "40"
    },
    "50": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "54": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "DUP1",
      "path": "40"
    },
    "55": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH4",
      "path": "40",
      "value": "0xA457C2D7"
    },
    "60": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "EQ",
      "path": "40"
    },
    "61": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2A2"
    },
    "64": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "65": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "DUP1",
      "path": "40"
    },
    "66": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH4",
      "path": "40",
      "value": "0xA9059CBB"
    },
    "71": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "EQ",
      "path": "40"
    },
    "72": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2CE"
    },
    "75": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "76": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "DUP1",
      "path": "40"
    },
    "77": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH4",
      "path": "40",
      "value": "0xD505ACCF"
    },
    "82": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "EQ",
      "path": "40"
    },
    "83": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2FA"
    },
    "86": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "87": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "DUP1",
      "path": "40"
    },
    "88": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH4",
      "path": "40",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "EQ",
      "path": "40"
    },
    "94": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x34D"
    },
    "97": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "98": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xEA"
    },
    "101": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMP",
      "path": "40"
    },
    "102": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "103": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "DUP1",
      "path": "40"
    },
    "104": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH4",
      "path": "40",
      "value": "0x70A08231"
    },
    "109": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "EQ",
      "path": "40"
    },
    "110": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x24E"
    },
    "113": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "114": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "DUP1",
      "path": "40"
    },
    "115": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH4",
      "path": "40",
      "value": "0x7ECEBE00"
    },
    "120": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "EQ",
      "path": "40"
    },
    "121": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x274"
    },
    "124": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "125": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "DUP1",
      "path": "40"
    },
    "126": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH4",
      "path": "40",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "EQ",
      "path": "40"
    },
    "132": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x29A"
    },
    "135": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "136": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xEA"
    },
    "139": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMP",
      "path": "40"
    },
    "140": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "141": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "DUP1",
      "path": "40"
    },
    "142": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH4",
      "path": "40",
      "value": "0x23B872DD"
    },
    "147": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "GT",
      "path": "40"
    },
    "148": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xC8"
    },
    "151": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "152": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "DUP1",
      "path": "40"
    },
    "153": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH4",
      "path": "40",
      "value": "0x23B872DD"
    },
    "158": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "EQ",
      "path": "40"
    },
    "159": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1C6"
    },
    "162": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "163": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "DUP1",
      "path": "40"
    },
    "164": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH4",
      "path": "40",
      "value": "0x313CE567"
    },
    "169": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "EQ",
      "path": "40"
    },
    "170": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1FC"
    },
    "173": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "174": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "DUP1",
      "path": "40"
    },
    "175": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH4",
      "path": "40",
      "value": "0x3644E515"
    },
    "180": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "EQ",
      "path": "40"
    },
    "181": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x21A"
    },
    "184": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "185": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "DUP1",
      "path": "40"
    },
    "186": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH4",
      "path": "40",
      "value": "0x39509351"
    },
    "191": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "EQ",
      "path": "40"
    },
    "192": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x222"
    },
    "195": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "196": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xEA"
    },
    "199": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMP",
      "path": "40"
    },
    "200": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "201": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "DUP1",
      "path": "40"
    },
    "202": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH4",
      "path": "40",
      "value": "0x6FDDE03"
    },
    "207": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "EQ",
      "path": "40"
    },
    "208": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xEF"
    },
    "211": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "212": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "DUP1",
      "path": "40"
    },
    "213": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH4",
      "path": "40",
      "value": "0x95EA7B3"
    },
    "218": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "EQ",
      "path": "40"
    },
    "219": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x16C"
    },
    "222": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "223": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "DUP1",
      "path": "40"
    },
    "224": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH4",
      "path": "40",
      "value": "0x18160DDD"
    },
    "229": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "EQ",
      "path": "40"
    },
    "230": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1AC"
    },
    "233": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "234": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "235": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "237": {
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "DUP1",
      "path": "40"
    },
    "238": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1355,
        12873
      ],
      "op": "REVERT",
      "path": "40"
    },
    "239": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "240": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xF7"
    },
    "243": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x37B"
    },
    "246": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2697,
        2787
      ],
      "op": "JUMP",
      "path": "40"
    },
    "247": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "248": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "250": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP1",
      "path": "40"
    },
    "251": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "252": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "254": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP1",
      "path": "40"
    },
    "255": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP3",
      "path": "40"
    },
    "256": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "257": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP4",
      "path": "40"
    },
    "258": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "259": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP2",
      "path": "40"
    },
    "260": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP4",
      "path": "40"
    },
    "261": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "ADD",
      "path": "40"
    },
    "262": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "263": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP4",
      "path": "40"
    },
    "264": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "265": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "266": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "267": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP4",
      "path": "40"
    },
    "268": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "269": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "270": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP4",
      "path": "40"
    },
    "271": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "ADD",
      "path": "40"
    },
    "272": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "273": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP6",
      "path": "40"
    },
    "274": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "ADD",
      "path": "40"
    },
    "275": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "276": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP1",
      "path": "40"
    },
    "277": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP4",
      "path": "40"
    },
    "278": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP4",
      "path": "40"
    },
    "279": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "281": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "282": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP4",
      "path": "40"
    },
    "283": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP2",
      "path": "40"
    },
    "284": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "LT",
      "path": "40"
    },
    "285": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "286": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x131"
    },
    "289": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "290": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP2",
      "path": "40"
    },
    "291": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP2",
      "path": "40"
    },
    "292": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "ADD",
      "path": "40"
    },
    "293": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "294": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP4",
      "path": "40"
    },
    "295": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP3",
      "path": "40"
    },
    "296": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "ADD",
      "path": "40"
    },
    "297": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "298": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "300": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "ADD",
      "path": "40"
    },
    "301": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x119"
    },
    "304": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "JUMP",
      "path": "40"
    },
    "305": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "306": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "POP",
      "path": "40"
    },
    "307": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "POP",
      "path": "40"
    },
    "308": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "POP",
      "path": "40"
    },
    "309": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "POP",
      "path": "40"
    },
    "310": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "311": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "POP",
      "path": "40"
    },
    "312": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "313": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP2",
      "path": "40"
    },
    "314": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "ADD",
      "path": "40"
    },
    "315": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "316": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1F"
    },
    "318": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "AND",
      "path": "40"
    },
    "319": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP1",
      "path": "40"
    },
    "320": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "321": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x15E"
    },
    "324": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "325": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP1",
      "path": "40"
    },
    "326": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP3",
      "path": "40"
    },
    "327": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "SUB",
      "path": "40"
    },
    "328": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP1",
      "path": "40"
    },
    "329": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "330": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1"
    },
    "332": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP4",
      "path": "40"
    },
    "333": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "335": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "SUB",
      "path": "40"
    },
    "336": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x100"
    },
    "339": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "EXP",
      "path": "40"
    },
    "340": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "SUB",
      "path": "40"
    },
    "341": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "NOT",
      "path": "40"
    },
    "342": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "AND",
      "path": "40"
    },
    "343": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP2",
      "path": "40"
    },
    "344": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "345": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "347": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "ADD",
      "path": "40"
    },
    "348": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "349": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "POP",
      "path": "40"
    },
    "350": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "351": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "POP",
      "path": "40"
    },
    "352": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "353": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "POP",
      "path": "40"
    },
    "354": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "POP",
      "path": "40"
    },
    "355": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "POP",
      "path": "40"
    },
    "356": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "358": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "359": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "DUP1",
      "path": "40"
    },
    "360": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "361": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "SUB",
      "path": "40"
    },
    "362": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "363": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "RETURN",
      "path": "40"
    },
    "364": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "365": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x198"
    },
    "368": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "370": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "DUP1",
      "path": "40"
    },
    "371": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "CALLDATASIZE",
      "path": "40"
    },
    "372": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "SUB",
      "path": "40"
    },
    "373": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "375": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "DUP2",
      "path": "40"
    },
    "376": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "LT",
      "path": "40"
    },
    "377": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "378": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x182"
    },
    "381": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "382": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "384": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "DUP1",
      "path": "40"
    },
    "385": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "REVERT",
      "path": "40"
    },
    "386": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "387": {
      "op": "POP"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "394": {
      "op": "SHL"
    },
    "395": {
      "op": "SUB"
    },
    "396": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "DUP2",
      "path": "40"
    },
    "397": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "398": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "AND",
      "path": "40"
    },
    "399": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "400": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "402": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "ADD",
      "path": "40"
    },
    "403": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "404": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x411"
    },
    "407": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4751,
        4917
      ],
      "op": "JUMP",
      "path": "40"
    },
    "408": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "409": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "411": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "DUP1",
      "path": "40"
    },
    "412": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "413": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "414": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "415": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "416": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "DUP3",
      "path": "40"
    },
    "417": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "418": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "419": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "420": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "DUP2",
      "path": "40"
    },
    "421": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "422": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "SUB",
      "path": "40"
    },
    "423": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "425": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "ADD",
      "path": "40"
    },
    "426": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "427": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "RETURN",
      "path": "40"
    },
    "428": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3767,
        3865
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "429": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3767,
        3865
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1B4"
    },
    "432": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3767,
        3865
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x42E"
    },
    "435": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3767,
        3865
      ],
      "op": "JUMP",
      "path": "40"
    },
    "436": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3767,
        3865
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "437": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3767,
        3865
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "439": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3767,
        3865
      ],
      "op": "DUP1",
      "path": "40"
    },
    "440": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3767,
        3865
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "441": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3767,
        3865
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "442": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3767,
        3865
      ],
      "op": "DUP3",
      "path": "40"
    },
    "443": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3767,
        3865
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "444": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3767,
        3865
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "445": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3767,
        3865
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "446": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3767,
        3865
      ],
      "op": "DUP2",
      "path": "40"
    },
    "447": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3767,
        3865
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "448": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3767,
        3865
      ],
      "op": "SUB",
      "path": "40"
    },
    "449": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3767,
        3865
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "451": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3767,
        3865
      ],
      "op": "ADD",
      "path": "40"
    },
    "452": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3767,
        3865
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "453": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3767,
        3865
      ],
      "op": "RETURN",
      "path": "40"
    },
    "454": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "455": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x198"
    },
    "458": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "460": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "DUP1",
      "path": "40"
    },
    "461": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "CALLDATASIZE",
      "path": "40"
    },
    "462": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "SUB",
      "path": "40"
    },
    "463": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "465": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "DUP2",
      "path": "40"
    },
    "466": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "LT",
      "path": "40"
    },
    "467": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "468": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1DC"
    },
    "471": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "472": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "474": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "DUP1",
      "path": "40"
    },
    "475": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "REVERT",
      "path": "40"
    },
    "476": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "477": {
      "op": "POP"
    },
    "478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "484": {
      "op": "SHL"
    },
    "485": {
      "op": "SUB"
    },
    "486": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "DUP2",
      "path": "40"
    },
    "487": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "488": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "DUP2",
      "path": "40"
    },
    "489": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "AND",
      "path": "40"
    },
    "490": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "491": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "493": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "DUP2",
      "path": "40"
    },
    "494": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "ADD",
      "path": "40"
    },
    "495": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "496": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "497": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "498": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "AND",
      "path": "40"
    },
    "499": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "500": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "502": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "ADD",
      "path": "40"
    },
    "503": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "504": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x434"
    },
    "507": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        6974,
        7282
      ],
      "op": "JUMP",
      "path": "40"
    },
    "508": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "509": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x204"
    },
    "512": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x4BB"
    },
    "515": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        3617,
        3707
      ],
      "op": "JUMP",
      "path": "40"
    },
    "516": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "517": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "519": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "DUP1",
      "path": "40"
    },
    "520": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "521": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xFF"
    },
    "523": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "524": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "525": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "AND",
      "path": "40"
    },
    "526": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "DUP3",
      "path": "40"
    },
    "527": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "528": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "529": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "530": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "DUP2",
      "path": "40"
    },
    "531": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "532": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "SUB",
      "path": "40"
    },
    "533": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "535": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "ADD",
      "path": "40"
    },
    "536": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "537": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "RETURN",
      "path": "40"
    },
    "538": {
      "offset": [
        1458,
        1489
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "539": {
      "fn": "ERC20.decimals",
      "offset": [
        1458,
        1489
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1B4"
    },
    "542": {
      "fn": "ERC20.decimals",
      "offset": [
        1458,
        1489
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x4C4"
    },
    "545": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        1458,
        1489
      ],
      "op": "JUMP",
      "path": "40"
    },
    "546": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "547": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x198"
    },
    "550": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "552": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "DUP1",
      "path": "40"
    },
    "553": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "CALLDATASIZE",
      "path": "40"
    },
    "554": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "SUB",
      "path": "40"
    },
    "555": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "557": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "DUP2",
      "path": "40"
    },
    "558": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "LT",
      "path": "40"
    },
    "559": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "560": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x238"
    },
    "563": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "564": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "566": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "DUP1",
      "path": "40"
    },
    "567": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "REVERT",
      "path": "40"
    },
    "568": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "569": {
      "op": "POP"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "576": {
      "op": "SHL"
    },
    "577": {
      "op": "SUB"
    },
    "578": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "DUP2",
      "path": "40"
    },
    "579": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "580": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "AND",
      "path": "40"
    },
    "581": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "582": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "584": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "ADD",
      "path": "40"
    },
    "585": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "586": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x4CA"
    },
    "589": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        7677,
        7892
      ],
      "op": "JUMP",
      "path": "40"
    },
    "590": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3923,
        4040
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "591": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3923,
        4040
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1B4"
    },
    "594": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3923,
        4040
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "596": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3923,
        4040
      ],
      "op": "DUP1",
      "path": "40"
    },
    "597": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3923,
        4040
      ],
      "op": "CALLDATASIZE",
      "path": "40"
    },
    "598": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3923,
        4040
      ],
      "op": "SUB",
      "path": "40"
    },
    "599": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3923,
        4040
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "601": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3923,
        4040
      ],
      "op": "DUP2",
      "path": "40"
    },
    "602": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3923,
        4040
      ],
      "op": "LT",
      "path": "40"
    },
    "603": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3923,
        4040
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "604": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3923,
        4040
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x264"
    },
    "607": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3923,
        4040
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "608": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3923,
        4040
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "610": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3923,
        4040
      ],
      "op": "DUP1",
      "path": "40"
    },
    "611": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3923,
        4040
      ],
      "op": "REVERT",
      "path": "40"
    },
    "612": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3923,
        4040
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "613": {
      "op": "POP"
    },
    "614": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3923,
        4040
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "621": {
      "op": "SHL"
    },
    "622": {
      "op": "SUB"
    },
    "623": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3923,
        4040
      ],
      "op": "AND",
      "path": "40"
    },
    "624": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3923,
        4040
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x518"
    },
    "627": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3923,
        4040
      ],
      "op": "JUMP",
      "path": "40"
    },
    "628": {
      "offset": [
        1548,
        1589
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "629": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1B4"
    },
    "632": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "634": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "DUP1",
      "path": "40"
    },
    "635": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "CALLDATASIZE",
      "path": "40"
    },
    "636": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "SUB",
      "path": "40"
    },
    "637": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "639": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "DUP2",
      "path": "40"
    },
    "640": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "LT",
      "path": "40"
    },
    "641": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "642": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x28A"
    },
    "645": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "646": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "648": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "DUP1",
      "path": "40"
    },
    "649": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "REVERT",
      "path": "40"
    },
    "650": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "651": {
      "op": "POP"
    },
    "652": {
      "offset": [
        1548,
        1589
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "659": {
      "op": "SHL"
    },
    "660": {
      "op": "SUB"
    },
    "661": {
      "offset": [
        1548,
        1589
      ],
      "op": "AND",
      "path": "40"
    },
    "662": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x533"
    },
    "665": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        1548,
        1589
      ],
      "op": "JUMP",
      "path": "40"
    },
    "666": {
      "fn": "ERC20.symbol",
      "offset": [
        2900,
        2994
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "667": {
      "fn": "ERC20.symbol",
      "offset": [
        2900,
        2994
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xF7"
    },
    "670": {
      "fn": "ERC20.symbol",
      "offset": [
        2900,
        2994
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x545"
    },
    "673": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2900,
        2994
      ],
      "op": "JUMP",
      "path": "40"
    },
    "674": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "675": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x198"
    },
    "678": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "680": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "DUP1",
      "path": "40"
    },
    "681": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "CALLDATASIZE",
      "path": "40"
    },
    "682": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "SUB",
      "path": "40"
    },
    "683": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "685": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "DUP2",
      "path": "40"
    },
    "686": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "LT",
      "path": "40"
    },
    "687": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "688": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2B8"
    },
    "691": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "692": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "694": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "DUP1",
      "path": "40"
    },
    "695": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "REVERT",
      "path": "40"
    },
    "696": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "697": {
      "op": "POP"
    },
    "698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "704": {
      "op": "SHL"
    },
    "705": {
      "op": "SUB"
    },
    "706": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "DUP2",
      "path": "40"
    },
    "707": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "708": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "AND",
      "path": "40"
    },
    "709": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "710": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "712": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "ADD",
      "path": "40"
    },
    "713": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "714": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x5A6"
    },
    "717": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        8379,
        8645
      ],
      "op": "JUMP",
      "path": "40"
    },
    "718": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "719": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x198"
    },
    "722": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "724": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "DUP1",
      "path": "40"
    },
    "725": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "CALLDATASIZE",
      "path": "40"
    },
    "726": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "SUB",
      "path": "40"
    },
    "727": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "729": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "DUP2",
      "path": "40"
    },
    "730": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "LT",
      "path": "40"
    },
    "731": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "732": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2E4"
    },
    "735": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "736": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "738": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "DUP1",
      "path": "40"
    },
    "739": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "REVERT",
      "path": "40"
    },
    "740": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "741": {
      "op": "POP"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "748": {
      "op": "SHL"
    },
    "749": {
      "op": "SUB"
    },
    "750": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "DUP2",
      "path": "40"
    },
    "751": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "752": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "AND",
      "path": "40"
    },
    "753": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "754": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "756": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "ADD",
      "path": "40"
    },
    "757": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "758": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x60E"
    },
    "761": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        4243,
        4406
      ],
      "op": "JUMP",
      "path": "40"
    },
    "762": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "763": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x34B"
    },
    "766": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "768": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "DUP1",
      "path": "40"
    },
    "769": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "CALLDATASIZE",
      "path": "40"
    },
    "770": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "SUB",
      "path": "40"
    },
    "771": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xE0"
    },
    "773": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "DUP2",
      "path": "40"
    },
    "774": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "LT",
      "path": "40"
    },
    "775": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "776": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x310"
    },
    "779": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "780": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "782": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "DUP1",
      "path": "40"
    },
    "783": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "REVERT",
      "path": "40"
    },
    "784": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "785": {
      "op": "POP"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "792": {
      "op": "SHL"
    },
    "793": {
      "op": "SUB"
    },
    "794": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "DUP2",
      "path": "40"
    },
    "795": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "796": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "DUP2",
      "path": "40"
    },
    "797": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "AND",
      "path": "40"
    },
    "798": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "799": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "801": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "DUP2",
      "path": "40"
    },
    "802": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "ADD",
      "path": "40"
    },
    "803": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "804": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "805": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "806": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "AND",
      "path": "40"
    },
    "807": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "808": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "810": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "DUP2",
      "path": "40"
    },
    "811": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "ADD",
      "path": "40"
    },
    "812": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "813": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "814": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "816": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "DUP2",
      "path": "40"
    },
    "817": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "ADD",
      "path": "40"
    },
    "818": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "819": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "820": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xFF"
    },
    "822": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x80"
    },
    "824": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "DUP3",
      "path": "40"
    },
    "825": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "ADD",
      "path": "40"
    },
    "826": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "827": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "AND",
      "path": "40"
    },
    "828": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "829": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xA0"
    },
    "831": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "DUP2",
      "path": "40"
    },
    "832": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "ADD",
      "path": "40"
    },
    "833": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "834": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "835": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xC0"
    },
    "837": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "ADD",
      "path": "40"
    },
    "838": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "839": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x622"
    },
    "842": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        5667,
        6514
      ],
      "op": "JUMP",
      "path": "40"
    },
    "843": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "844": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "STOP",
      "path": "40"
    },
    "845": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "846": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1B4"
    },
    "849": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "851": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "DUP1",
      "path": "40"
    },
    "852": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "CALLDATASIZE",
      "path": "40"
    },
    "853": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "SUB",
      "path": "40"
    },
    "854": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "856": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "DUP2",
      "path": "40"
    },
    "857": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "LT",
      "path": "40"
    },
    "858": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "859": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x363"
    },
    "862": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "863": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "865": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "DUP1",
      "path": "40"
    },
    "866": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "REVERT",
      "path": "40"
    },
    "867": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "868": {
      "op": "POP"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "875": {
      "op": "SHL"
    },
    "876": {
      "op": "SUB"
    },
    "877": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "DUP2",
      "path": "40"
    },
    "878": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "879": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "DUP2",
      "path": "40"
    },
    "880": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "AND",
      "path": "40"
    },
    "881": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "882": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "884": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "ADD",
      "path": "40"
    },
    "885": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "CALLDATALOAD",
      "path": "40"
    },
    "886": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "AND",
      "path": "40"
    },
    "887": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x8C1"
    },
    "890": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        4464,
        4613
      ],
      "op": "JUMP",
      "path": "40"
    },
    "891": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "892": {
      "fn": "ERC20.name",
      "offset": [
        2775,
        2780
      ],
      "op": "PUSH1",
      "path": "40",
      "statement": 0,
      "value": "0x5"
    },
    "894": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP1",
      "path": "40"
    },
    "895": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "896": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "898": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP1",
      "path": "40"
    },
    "899": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "900": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "902": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1F"
    },
    "904": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x2"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "908": {
      "op": "NOT"
    },
    "909": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x100"
    },
    "912": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1"
    },
    "914": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP9",
      "path": "40"
    },
    "915": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "AND",
      "path": "40"
    },
    "916": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "917": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "MUL",
      "path": "40"
    },
    "918": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "ADD",
      "path": "40"
    },
    "919": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "920": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SWAP6",
      "path": "40"
    },
    "921": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "AND",
      "path": "40"
    },
    "922": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "923": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "924": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "925": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DIV",
      "path": "40"
    },
    "926": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "927": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP5",
      "path": "40"
    },
    "928": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "ADD",
      "path": "40"
    },
    "929": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP2",
      "path": "40"
    },
    "930": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "931": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DIV",
      "path": "40"
    },
    "932": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP2",
      "path": "40"
    },
    "933": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "MUL",
      "path": "40"
    },
    "934": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP3",
      "path": "40"
    },
    "935": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "ADD",
      "path": "40"
    },
    "936": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP2",
      "path": "40"
    },
    "937": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "ADD",
      "path": "40"
    },
    "938": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "939": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "940": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "941": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP3",
      "path": "40"
    },
    "942": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP2",
      "path": "40"
    },
    "943": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "944": {
      "fn": "ERC20.name",
      "offset": [
        2743,
        2756
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "946": {
      "fn": "ERC20.name",
      "offset": [
        2743,
        2756
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "947": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "948": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "949": {
      "fn": "ERC20.name",
      "offset": [
        2775,
        2780
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "950": {
      "fn": "ERC20.name",
      "offset": [
        2775,
        2780
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "951": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP4",
      "path": "40"
    },
    "952": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "ADD",
      "path": "40"
    },
    "953": {
      "fn": "ERC20.name",
      "offset": [
        2775,
        2780
      ],
      "op": "DUP3",
      "path": "40"
    },
    "954": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP3",
      "path": "40"
    },
    "955": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP1",
      "path": "40"
    },
    "956": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "957": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x407"
    },
    "960": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "961": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP1",
      "path": "40"
    },
    "962": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1F"
    },
    "964": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "LT",
      "path": "40"
    },
    "965": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x3DC"
    },
    "968": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "969": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x100"
    },
    "972": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP1",
      "path": "40"
    },
    "973": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP4",
      "path": "40"
    },
    "974": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "975": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DIV",
      "path": "40"
    },
    "976": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "MUL",
      "path": "40"
    },
    "977": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP4",
      "path": "40"
    },
    "978": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "979": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "980": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "982": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "ADD",
      "path": "40"
    },
    "983": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "984": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x407"
    },
    "987": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "JUMP",
      "path": "40"
    },
    "988": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "989": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP3",
      "path": "40"
    },
    "990": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "ADD",
      "path": "40"
    },
    "991": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "992": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "993": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "995": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "996": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "998": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1000": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "1001": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1002": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1003": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1004": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "1005": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1006": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1007": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1008": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1"
    },
    "1010": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "ADD",
      "path": "40"
    },
    "1011": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1012": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "1014": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "ADD",
      "path": "40"
    },
    "1015": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1016": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP4",
      "path": "40"
    },
    "1017": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "GT",
      "path": "40"
    },
    "1018": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x3EA"
    },
    "1021": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "1022": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1023": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1024": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SUB",
      "path": "40"
    },
    "1025": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1F"
    },
    "1027": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "AND",
      "path": "40"
    },
    "1028": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1029": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "ADD",
      "path": "40"
    },
    "1030": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1031": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1032": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "POP",
      "path": "40"
    },
    "1033": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "POP",
      "path": "40"
    },
    "1034": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "POP",
      "path": "40"
    },
    "1035": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "POP",
      "path": "40"
    },
    "1036": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "POP",
      "path": "40"
    },
    "1037": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1038": {
      "fn": "ERC20.name",
      "offset": [
        2768,
        2780
      ],
      "op": "POP",
      "path": "40"
    },
    "1039": {
      "fn": "ERC20.name",
      "offset": [
        2697,
        2787
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1040": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2697,
        2787
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1041": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1042": {
      "fn": "ERC20.approve",
      "offset": [
        4834,
        4838
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1044": {
      "fn": "ERC20.approve",
      "offset": [
        4850,
        4889
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 1,
      "value": "0x425"
    },
    "1047": {
      "fn": "ERC20.approve",
      "offset": [
        4859,
        4871
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x41E"
    },
    "1050": {
      "fn": "ERC20.approve",
      "offset": [
        4859,
        4869
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x8EC"
    },
    "1053": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4859,
        4871
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1054": {
      "fn": "ERC20.approve",
      "offset": [
        4859,
        4871
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1055": {
      "fn": "ERC20.approve",
      "offset": [
        4873,
        4880
      ],
      "op": "DUP5",
      "path": "40"
    },
    "1056": {
      "fn": "ERC20.approve",
      "offset": [
        4882,
        4888
      ],
      "op": "DUP5",
      "path": "40"
    },
    "1057": {
      "fn": "ERC20.approve",
      "offset": [
        4850,
        4858
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x8F0"
    },
    "1060": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4850,
        4889
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1061": {
      "fn": "ERC20.approve",
      "offset": [
        4850,
        4889
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1062": {
      "op": "POP"
    },
    "1063": {
      "fn": "ERC20.approve",
      "offset": [
        4906,
        4910
      ],
      "op": "PUSH1",
      "path": "40",
      "statement": 2,
      "value": "0x1"
    },
    "1065": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "1066": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1067": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "POP",
      "path": "40"
    },
    "1068": {
      "fn": "ERC20.approve",
      "offset": [
        4751,
        4917
      ],
      "op": "POP",
      "path": "40"
    },
    "1069": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4751,
        4917
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1070": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3767,
        3865
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1071": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3846,
        3858
      ],
      "op": "PUSH1",
      "path": "40",
      "statement": 3,
      "value": "0x4"
    },
    "1073": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3846,
        3858
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "1074": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3767,
        3865
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1075": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        3767,
        3865
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1076": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1077": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7071,
        7075
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1079": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7087,
        7123
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 4,
      "value": "0x441"
    },
    "1082": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7097,
        7103
      ],
      "op": "DUP5",
      "path": "40"
    },
    "1083": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7105,
        7114
      ],
      "op": "DUP5",
      "path": "40"
    },
    "1084": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7116,
        7122
      ],
      "op": "DUP5",
      "path": "40"
    },
    "1085": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7087,
        7096
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x9DC"
    },
    "1088": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        7087,
        7123
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1089": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7087,
        7123
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1090": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7133,
        7254
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 5,
      "value": "0x4B1"
    },
    "1093": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7142,
        7148
      ],
      "op": "DUP5",
      "path": "40"
    },
    "1094": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7150,
        7162
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x44D"
    },
    "1097": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7150,
        7160
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x8EC"
    },
    "1100": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        7150,
        7162
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1101": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7150,
        7162
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1102": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7253
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x4AC"
    },
    "1105": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7202,
        7208
      ],
      "op": "DUP6",
      "path": "40"
    },
    "1106": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7253
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "1108": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7253
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "1109": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7253
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1110": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7253
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "1112": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7253
      ],
      "op": "ADD",
      "path": "40"
    },
    "1113": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7253
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "1115": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7253
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1116": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7253
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1117": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7253
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x28"
    },
    "1119": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7253
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1120": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7253
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1121": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7253
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "1123": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7253
      ],
      "op": "ADD",
      "path": "40"
    },
    "1124": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7253
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xCA2"
    },
    "1127": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7253
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x28"
    },
    "1129": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7253
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1130": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7253
      ],
      "op": "CODECOPY",
      "path": "40"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1137": {
      "op": "SHL"
    },
    "1138": {
      "op": "SUB"
    },
    "1139": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7183
      ],
      "op": "DUP11",
      "path": "40"
    },
    "1140": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7183
      ],
      "op": "AND",
      "path": "40"
    },
    "1141": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7183
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1143": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7183
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1144": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7183
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1145": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7183
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1146": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7175
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x3"
    },
    "1148": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7183
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "1150": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7183
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1151": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7183
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "1153": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7183
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1154": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7183
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "1155": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7183
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1156": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7184,
        7196
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x48B"
    },
    "1159": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7184,
        7194
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x8EC"
    },
    "1162": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        7184,
        7196
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1163": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7184,
        7196
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1170": {
      "op": "SHL"
    },
    "1171": {
      "op": "SUB"
    },
    "1172": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7197
      ],
      "op": "AND",
      "path": "40"
    },
    "1173": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7197
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1174": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7197
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1175": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7197
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "1177": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7197
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1178": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7197
      ],
      "op": "ADD",
      "path": "40"
    },
    "1179": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7197
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1180": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7197
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1181": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7197
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1182": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7197
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1183": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7197
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "1185": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7197
      ],
      "op": "ADD",
      "path": "40"
    },
    "1186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1188": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7197
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "1189": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7197
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "1190": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7197
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1191": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7253
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1192": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7201
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xB39"
    },
    "1195": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        7164,
        7253
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1196": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7164,
        7253
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1197": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7133,
        7141
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x8F0"
    },
    "1200": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        7133,
        7254
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1201": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7133,
        7254
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1202": {
      "op": "POP"
    },
    "1203": {
      "fn": "ERC20.transferFrom",
      "offset": [
        7271,
        7275
      ],
      "op": "PUSH1",
      "path": "40",
      "statement": 6,
      "value": "0x1"
    },
    "1205": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "1206": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "1207": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "POP",
      "path": "40"
    },
    "1208": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "POP",
      "path": "40"
    },
    "1209": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6974,
        7282
      ],
      "op": "POP",
      "path": "40"
    },
    "1210": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        6974,
        7282
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1211": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1212": {
      "fn": "ERC20.decimals",
      "offset": [
        3691,
        3700
      ],
      "op": "PUSH1",
      "path": "40",
      "statement": 7,
      "value": "0x7"
    },
    "1214": {
      "fn": "ERC20.decimals",
      "offset": [
        3691,
        3700
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "1215": {
      "fn": "ERC20.decimals",
      "offset": [
        3691,
        3700
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xFF"
    },
    "1217": {
      "fn": "ERC20.decimals",
      "offset": [
        3691,
        3700
      ],
      "op": "AND",
      "path": "40"
    },
    "1218": {
      "fn": "ERC20.decimals",
      "offset": [
        3617,
        3707
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1219": {
      "fn": "ERC20.decimals",
      "jump": "o",
      "offset": [
        3617,
        3707
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1220": {
      "offset": [
        1458,
        1489
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1221": {
      "fn": "ERC20.decimals",
      "offset": [
        1458,
        1489
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1223": {
      "fn": "ERC20.decimals",
      "offset": [
        1458,
        1489
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "1224": {
      "fn": "ERC20.decimals",
      "offset": [
        1458,
        1489
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1225": {
      "fn": "ERC20.decimals",
      "jump": "o",
      "offset": [
        1458,
        1489
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1226": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7677,
        7892
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1227": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7765,
        7769
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1229": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7781,
        7864
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 8,
      "value": "0x425"
    },
    "1232": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7790,
        7802
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x4D7"
    },
    "1235": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7790,
        7800
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x8EC"
    },
    "1238": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        7790,
        7802
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1239": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7790,
        7802
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1240": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7804,
        7811
      ],
      "op": "DUP5",
      "path": "40"
    },
    "1241": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7863
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x4AC"
    },
    "1244": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7852,
        7862
      ],
      "op": "DUP6",
      "path": "40"
    },
    "1245": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7824
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x3"
    },
    "1247": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7838
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1249": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7825,
        7837
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x4E8"
    },
    "1252": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7825,
        7835
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x8EC"
    },
    "1255": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        7825,
        7837
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1256": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7825,
        7837
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1263": {
      "op": "SHL"
    },
    "1264": {
      "op": "SUB"
    },
    "1265": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7838
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1266": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7838
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1267": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7838
      ],
      "op": "AND",
      "path": "40"
    },
    "1268": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7838
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1269": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7838
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1270": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7838
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "1272": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7838
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1273": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7838
      ],
      "op": "DUP4",
      "path": "40"
    },
    "1274": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7838
      ],
      "op": "ADD",
      "path": "40"
    },
    "1275": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7838
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "1276": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7838
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1277": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7838
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "1278": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7838
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1279": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7838
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "1281": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7838
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1282": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7838
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1283": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7838
      ],
      "op": "ADD",
      "path": "40"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1286": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7838
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1287": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7838
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1288": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7838
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "1289": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7847
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1290": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7847
      ],
      "op": "DUP13",
      "path": "40"
    },
    "1291": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7847
      ],
      "op": "AND",
      "path": "40"
    },
    "1292": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7847
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1293": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7847
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1294": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7847
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "1295": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7847
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1296": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7847
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1297": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7847
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "1298": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7847
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "1299": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7847
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1300": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        7813,
        7851
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xBD0"
    },
    "1303": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        7813,
        7863
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1304": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3923,
        4040
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1311": {
      "op": "SHL"
    },
    "1312": {
      "op": "SUB"
    },
    "1313": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4015,
        4033
      ],
      "op": "AND",
      "path": "40",
      "statement": 9
    },
    "1314": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3989,
        3996
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1316": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4015,
        4033
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1317": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4015,
        4033
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1318": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4015,
        4033
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1319": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4015,
        4024
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1"
    },
    "1321": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4015,
        4033
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "1323": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4015,
        4033
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1324": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4015,
        4033
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "1326": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4015,
        4033
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1327": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4015,
        4033
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "1328": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4015,
        4033
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "1329": {
      "fn": "ERC20.balanceOf",
      "offset": [
        4015,
        4033
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1330": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3923,
        4040
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1331": {
      "offset": [
        1548,
        1589
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1332": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x2"
    },
    "1334": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "1336": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1337": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1339": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1340": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1341": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1342": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "1344": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1345": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "1346": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "1347": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1548,
        1589
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1348": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        1548,
        1589
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1349": {
      "fn": "ERC20.symbol",
      "offset": [
        2900,
        2994
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1350": {
      "fn": "ERC20.symbol",
      "offset": [
        2980,
        2987
      ],
      "op": "PUSH1",
      "path": "40",
      "statement": 10,
      "value": "0x6"
    },
    "1352": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1353": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "1354": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "1356": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1357": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "1358": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "1360": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1F"
    },
    "1362": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x2"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1366": {
      "op": "NOT"
    },
    "1367": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x100"
    },
    "1370": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1"
    },
    "1372": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "DUP9",
      "path": "40"
    },
    "1373": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "AND",
      "path": "40"
    },
    "1374": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "1375": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "MUL",
      "path": "40"
    },
    "1376": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "ADD",
      "path": "40"
    },
    "1377": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1378": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "SWAP6",
      "path": "40"
    },
    "1379": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "AND",
      "path": "40"
    },
    "1380": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "1381": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1382": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "1383": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "DIV",
      "path": "40"
    },
    "1384": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "1385": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "DUP5",
      "path": "40"
    },
    "1386": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "ADD",
      "path": "40"
    },
    "1387": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1388": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1389": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "DIV",
      "path": "40"
    },
    "1390": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1391": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "MUL",
      "path": "40"
    },
    "1392": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1393": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "ADD",
      "path": "40"
    },
    "1394": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1395": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "ADD",
      "path": "40"
    },
    "1396": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1397": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "1398": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1399": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1400": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1401": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1402": {
      "fn": "ERC20.symbol",
      "offset": [
        2948,
        2961
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "1404": {
      "fn": "ERC20.symbol",
      "offset": [
        2948,
        2961
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "1405": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1406": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "1407": {
      "fn": "ERC20.symbol",
      "offset": [
        2980,
        2987
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1408": {
      "fn": "ERC20.symbol",
      "offset": [
        2980,
        2987
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1409": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "DUP4",
      "path": "40"
    },
    "1410": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "ADD",
      "path": "40"
    },
    "1411": {
      "fn": "ERC20.symbol",
      "offset": [
        2980,
        2987
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1412": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1413": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1414": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "1415": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x407"
    },
    "1418": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "1419": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1420": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1F"
    },
    "1422": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "LT",
      "path": "40"
    },
    "1423": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x3DC"
    },
    "1426": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "1427": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x100"
    },
    "1430": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1431": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "DUP4",
      "path": "40"
    },
    "1432": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "1433": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "DIV",
      "path": "40"
    },
    "1434": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "MUL",
      "path": "40"
    },
    "1435": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "DUP4",
      "path": "40"
    },
    "1436": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1437": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1438": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "1440": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "ADD",
      "path": "40"
    },
    "1441": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1442": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x407"
    },
    "1445": {
      "fn": "ERC20.symbol",
      "offset": [
        2973,
        2987
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1446": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8379,
        8645
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1447": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8472,
        8476
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1449": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8488,
        8617
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 11,
      "value": "0x425"
    },
    "1452": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8497,
        8509
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x5B3"
    },
    "1455": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8497,
        8507
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x8EC"
    },
    "1458": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        8497,
        8509
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1459": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8497,
        8509
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1460": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8511,
        8518
      ],
      "op": "DUP5",
      "path": "40"
    },
    "1461": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8616
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x4AC"
    },
    "1464": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8559,
        8574
      ],
      "op": "DUP6",
      "path": "40"
    },
    "1465": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8616
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "1467": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8616
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "1468": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8616
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1469": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8616
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "1471": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8616
      ],
      "op": "ADD",
      "path": "40"
    },
    "1472": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8616
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "1474": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8616
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1475": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8616
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1476": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8616
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x25"
    },
    "1478": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8616
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1479": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8616
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1480": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8616
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "1482": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8616
      ],
      "op": "ADD",
      "path": "40"
    },
    "1483": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8616
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xD13"
    },
    "1486": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8616
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x25"
    },
    "1488": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8616
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1489": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8616
      ],
      "op": "CODECOPY",
      "path": "40"
    },
    "1490": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8531
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x3"
    },
    "1492": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8545
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1494": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8532,
        8544
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x5DD"
    },
    "1497": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8532,
        8542
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x8EC"
    },
    "1500": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        8532,
        8544
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1501": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8532,
        8544
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1508": {
      "op": "SHL"
    },
    "1509": {
      "op": "SUB"
    },
    "1510": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8545
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1511": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8545
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1512": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8545
      ],
      "op": "AND",
      "path": "40"
    },
    "1513": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8545
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1514": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8545
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1515": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8545
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "1517": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8545
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1518": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8545
      ],
      "op": "DUP4",
      "path": "40"
    },
    "1519": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8545
      ],
      "op": "ADD",
      "path": "40"
    },
    "1520": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8545
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "1521": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8545
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1522": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8545
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "1523": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8545
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1524": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8545
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "1526": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8545
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1527": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8545
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1528": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8545
      ],
      "op": "ADD",
      "path": "40"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1531": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8545
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1532": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8545
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1533": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8545
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "1534": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8554
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1535": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8554
      ],
      "op": "DUP14",
      "path": "40"
    },
    "1536": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8554
      ],
      "op": "AND",
      "path": "40"
    },
    "1537": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8554
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1538": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8554
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1539": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8554
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "1540": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8554
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1541": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8554
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1542": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8554
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "1543": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8554
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "1544": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8554
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1545": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8616
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1546": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        8520,
        8558
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xB39"
    },
    "1549": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        8520,
        8616
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1550": {
      "fn": "ERC20.transfer",
      "offset": [
        4243,
        4406
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1551": {
      "fn": "ERC20.transfer",
      "offset": [
        4320,
        4324
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1553": {
      "fn": "ERC20.transfer",
      "offset": [
        4336,
        4378
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 12,
      "value": "0x425"
    },
    "1556": {
      "fn": "ERC20.transfer",
      "offset": [
        4346,
        4358
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x61B"
    },
    "1559": {
      "fn": "ERC20.transfer",
      "offset": [
        4346,
        4356
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x8EC"
    },
    "1562": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        4346,
        4358
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1563": {
      "fn": "ERC20.transfer",
      "offset": [
        4346,
        4358
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1564": {
      "fn": "ERC20.transfer",
      "offset": [
        4360,
        4369
      ],
      "op": "DUP5",
      "path": "40"
    },
    "1565": {
      "fn": "ERC20.transfer",
      "offset": [
        4371,
        4377
      ],
      "op": "DUP5",
      "path": "40"
    },
    "1566": {
      "fn": "ERC20.transfer",
      "offset": [
        4336,
        4345
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x9DC"
    },
    "1569": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        4336,
        4378
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1570": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1577": {
      "op": "SHL"
    },
    "1578": {
      "op": "SUB"
    },
    "1579": {
      "fn": "ERC20.permit",
      "offset": [
        5878,
        5898
      ],
      "op": "DUP8",
      "path": "40",
      "statement": 13
    },
    "1580": {
      "branch": 33,
      "fn": "ERC20.permit",
      "offset": [
        5878,
        5898
      ],
      "op": "AND",
      "path": "40"
    },
    "1581": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x67D"
    },
    "1584": {
      "branch": 33,
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "1585": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "1587": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1588": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "1589": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1595": {
      "op": "SHL"
    },
    "1596": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1597": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1598": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "1600": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "1602": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1603": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "ADD",
      "path": "40"
    },
    "1604": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1605": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x18"
    },
    "1607": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x24"
    },
    "1609": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1610": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "ADD",
      "path": "40"
    },
    "1611": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1612": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "PUSH32",
      "path": "40",
      "value": "0x45524332303A204F776E65722063616E6E6F7420626520300000000000000000"
    },
    "1645": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x44"
    },
    "1647": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1648": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "ADD",
      "path": "40"
    },
    "1649": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1650": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1651": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "1652": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1653": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1654": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1655": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "SUB",
      "path": "40"
    },
    "1656": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x64"
    },
    "1658": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "ADD",
      "path": "40"
    },
    "1659": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1660": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "REVERT",
      "path": "40"
    },
    "1661": {
      "fn": "ERC20.permit",
      "offset": [
        5870,
        5927
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1662": {
      "fn": "ERC20.permit",
      "offset": [
        5963,
        5971
      ],
      "op": "DUP4",
      "path": "40",
      "statement": 14
    },
    "1663": {
      "fn": "ERC20.permit",
      "offset": [
        5945,
        5960
      ],
      "op": "TIMESTAMP",
      "path": "40"
    },
    "1664": {
      "branch": 34,
      "fn": "ERC20.permit",
      "offset": [
        5945,
        5971
      ],
      "op": "LT",
      "path": "40"
    },
    "1665": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x6C2"
    },
    "1668": {
      "branch": 34,
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "1669": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "1671": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1672": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "1673": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1679": {
      "op": "SHL"
    },
    "1680": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1681": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1682": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "1684": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "1686": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1687": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "ADD",
      "path": "40"
    },
    "1688": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1689": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xE"
    },
    "1691": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x24"
    },
    "1693": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1694": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "ADD",
      "path": "40"
    },
    "1695": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1696": {
      "op": "PUSH14",
      "value": "0x115490CC8C0E88115E1C1A5C9959"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "1713": {
      "op": "SHL"
    },
    "1714": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x44"
    },
    "1716": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1717": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "ADD",
      "path": "40"
    },
    "1718": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1719": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1720": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "1721": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1722": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1723": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1724": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "SUB",
      "path": "40"
    },
    "1725": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x64"
    },
    "1727": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "ADD",
      "path": "40"
    },
    "1728": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1729": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "REVERT",
      "path": "40"
    },
    "1730": {
      "fn": "ERC20.permit",
      "offset": [
        5937,
        5990
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1731": {
      "fn": "ERC20.permit",
      "offset": [
        6094,
        6134
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "1733": {
      "fn": "ERC20.permit",
      "offset": [
        6094,
        6134
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1734": {
      "fn": "ERC20.permit",
      "offset": [
        6094,
        6134
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "1735": {
      "fn": "ERC20.permit",
      "offset": [
        6094,
        6134
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1736": {
      "fn": "ERC20.permit",
      "offset": [
        6094,
        6134
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1737": {
      "fn": "ERC20.permit",
      "offset": [
        6094,
        6134
      ],
      "op": "ADD",
      "path": "40"
    },
    "1738": {
      "fn": "ERC20.permit",
      "offset": [
        6094,
        6134
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1739": {
      "fn": "ERC20.permit",
      "offset": [
        6094,
        6134
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1740": {
      "fn": "ERC20.permit",
      "offset": [
        6094,
        6134
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x2"
    },
    "1742": {
      "fn": "ERC20.permit",
      "offset": [
        6094,
        6134
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1743": {
      "fn": "ERC20.permit",
      "offset": [
        6094,
        6134
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1744": {
      "fn": "ERC20.permit",
      "offset": [
        6094,
        6134
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1745": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1750": {
      "op": "SHL"
    },
    "1751": {
      "fn": "ERC20.permit",
      "offset": [
        6094,
        6134
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "1753": {
      "fn": "ERC20.permit",
      "offset": [
        6094,
        6134
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1754": {
      "fn": "ERC20.permit",
      "offset": [
        6094,
        6134
      ],
      "op": "DUP5",
      "path": "40"
    },
    "1755": {
      "fn": "ERC20.permit",
      "offset": [
        6094,
        6134
      ],
      "op": "ADD",
      "path": "40"
    },
    "1756": {
      "fn": "ERC20.permit",
      "offset": [
        6094,
        6134
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1757": {
      "fn": "ERC20.permit",
      "offset": [
        6094,
        6134
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1758": {
      "fn": "ERC20.permit",
      "offset": [
        6094,
        6134
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1759": {
      "fn": "ERC20.permit",
      "offset": [
        6000,
        6014
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1761": {
      "fn": "ERC20.permit",
      "offset": [
        6156,
        6172
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1762": {
      "fn": "ERC20.permit",
      "offset": [
        6156,
        6172
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1769": {
      "op": "SHL"
    },
    "1770": {
      "op": "SUB"
    },
    "1771": {
      "fn": "ERC20.permit",
      "offset": [
        6262,
        6276
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1772": {
      "fn": "ERC20.permit",
      "offset": [
        6262,
        6276
      ],
      "op": "DUP16",
      "path": "40"
    },
    "1773": {
      "fn": "ERC20.permit",
      "offset": [
        6262,
        6276
      ],
      "op": "AND",
      "path": "40"
    },
    "1774": {
      "fn": "ERC20.permit",
      "offset": [
        6262,
        6276
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1775": {
      "fn": "ERC20.permit",
      "offset": [
        6262,
        6276
      ],
      "op": "DUP5",
      "path": "40"
    },
    "1776": {
      "fn": "ERC20.permit",
      "offset": [
        6262,
        6276
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1777": {
      "fn": "ERC20.permit",
      "offset": [
        6262,
        6276
      ],
      "op": "SWAP6",
      "path": "40"
    },
    "1778": {
      "fn": "ERC20.permit",
      "offset": [
        6262,
        6276
      ],
      "op": "DUP5",
      "path": "40"
    },
    "1779": {
      "fn": "ERC20.permit",
      "offset": [
        6262,
        6276
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1780": {
      "fn": "ERC20.permit",
      "offset": [
        6262,
        6276
      ],
      "op": "DUP8",
      "path": "40"
    },
    "1781": {
      "fn": "ERC20.permit",
      "offset": [
        6262,
        6276
      ],
      "op": "DUP4",
      "path": "40"
    },
    "1782": {
      "fn": "ERC20.permit",
      "offset": [
        6262,
        6276
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "1783": {
      "fn": "ERC20.permit",
      "offset": [
        6262,
        6278
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1784": {
      "fn": "ERC20.permit",
      "offset": [
        6262,
        6278
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "1785": {
      "fn": "ERC20.permit",
      "offset": [
        6262,
        6278
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1"
    },
    "1787": {
      "fn": "ERC20.permit",
      "offset": [
        6262,
        6278
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1788": {
      "fn": "ERC20.permit",
      "offset": [
        6262,
        6278
      ],
      "op": "ADD",
      "path": "40"
    },
    "1789": {
      "fn": "ERC20.permit",
      "offset": [
        6262,
        6278
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1790": {
      "fn": "ERC20.permit",
      "offset": [
        6262,
        6278
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1791": {
      "fn": "ERC20.permit",
      "offset": [
        6262,
        6278
      ],
      "op": "SSTORE",
      "path": "40"
    },
    "1792": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "DUP9",
      "path": "40"
    },
    "1793": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "1794": {
      "offset": [
        5207,
        5273
      ],
      "op": "PUSH32",
      "path": "40",
      "value": "0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
    },
    "1827": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1828": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "DUP8",
      "path": "40"
    },
    "1829": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "ADD",
      "path": "40"
    },
    "1830": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1831": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1832": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "DUP11",
      "path": "40"
    },
    "1833": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "ADD",
      "path": "40"
    },
    "1834": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "SWAP8",
      "path": "40"
    },
    "1835": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1836": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "SWAP8",
      "path": "40"
    },
    "1837": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1838": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1839": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "DUP15",
      "path": "40"
    },
    "1840": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "AND",
      "path": "40"
    },
    "1841": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "1843": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "DUP8",
      "path": "40"
    },
    "1844": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "ADD",
      "path": "40"
    },
    "1845": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1846": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x80"
    },
    "1848": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "DUP7",
      "path": "40"
    },
    "1849": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "ADD",
      "path": "40"
    },
    "1850": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "DUP14",
      "path": "40"
    },
    "1851": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1852": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1853": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xA0"
    },
    "1855": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "DUP7",
      "path": "40"
    },
    "1856": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "ADD",
      "path": "40"
    },
    "1857": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1858": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xC0"
    },
    "1860": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1861": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "DUP7",
      "path": "40"
    },
    "1862": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "ADD",
      "path": "40"
    },
    "1863": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "DUP13",
      "path": "40"
    },
    "1864": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1865": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1866": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "DUP8",
      "path": "40"
    },
    "1867": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "1868": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1869": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "DUP8",
      "path": "40"
    },
    "1870": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "SUB",
      "path": "40"
    },
    "1871": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1872": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1873": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "ADD",
      "path": "40"
    },
    "1874": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1875": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1876": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xE0"
    },
    "1878": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "DUP7",
      "path": "40"
    },
    "1879": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "ADD",
      "path": "40"
    },
    "1880": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1881": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "SWAP8",
      "path": "40"
    },
    "1882": {
      "fn": "ERC20.permit",
      "offset": [
        6204,
        6289
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1883": {
      "fn": "ERC20.permit",
      "offset": [
        6194,
        6290
      ],
      "op": "DUP7",
      "path": "40"
    },
    "1884": {
      "fn": "ERC20.permit",
      "offset": [
        6194,
        6290
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "1885": {
      "fn": "ERC20.permit",
      "offset": [
        6194,
        6290
      ],
      "op": "SWAP7",
      "path": "40"
    },
    "1886": {
      "fn": "ERC20.permit",
      "offset": [
        6194,
        6290
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1887": {
      "fn": "ERC20.permit",
      "offset": [
        6194,
        6290
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "1888": {
      "fn": "ERC20.permit",
      "offset": [
        6194,
        6290
      ],
      "op": "ADD",
      "path": "40"
    },
    "1889": {
      "fn": "ERC20.permit",
      "offset": [
        6194,
        6290
      ],
      "op": "SWAP6",
      "path": "40"
    },
    "1890": {
      "fn": "ERC20.permit",
      "offset": [
        6194,
        6290
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1891": {
      "fn": "ERC20.permit",
      "offset": [
        6194,
        6290
      ],
      "op": "SWAP6",
      "path": "40"
    },
    "1892": {
      "fn": "ERC20.permit",
      "offset": [
        6194,
        6290
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "1893": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP5",
      "path": "40"
    },
    "1894": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "1895": {
      "fn": "ERC20.permit",
      "offset": [
        6156,
        6172
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1896": {
      "fn": "ERC20.permit",
      "offset": [
        6156,
        6172
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "1897": {
      "fn": "ERC20.permit",
      "offset": [
        6194,
        6290
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1898": {
      "fn": "ERC20.permit",
      "offset": [
        6194,
        6290
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "1899": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x100"
    },
    "1902": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1903": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1904": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "ADD",
      "path": "40"
    },
    "1905": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1906": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1907": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1908": {
      "fn": "ERC20.permit",
      "offset": [
        6094,
        6134
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1909": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1910": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP4",
      "path": "40"
    },
    "1911": {
      "fn": "ERC20.permit",
      "offset": [
        6094,
        6134
      ],
      "op": "DUP4",
      "path": "40"
    },
    "1912": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1913": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "1915": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP4",
      "path": "40"
    },
    "1916": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "LT",
      "path": "40"
    },
    "1917": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x797"
    },
    "1920": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "1921": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1922": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "1923": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1924": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1927": {
      "op": "NOT"
    },
    "1928": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1929": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "1930": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "ADD",
      "path": "40"
    },
    "1931": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1932": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "1934": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1935": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP3",
      "path": "40"
    },
    "1936": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "ADD",
      "path": "40"
    },
    "1937": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1938": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "ADD",
      "path": "40"
    },
    "1939": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x778"
    },
    "1942": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1943": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1944": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "1945": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1946": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "1947": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "1949": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "1950": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP5",
      "path": "40"
    },
    "1951": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SUB",
      "path": "40"
    },
    "1952": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x100"
    },
    "1955": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "EXP",
      "path": "40"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1958": {
      "op": "NOT"
    },
    "1959": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "ADD",
      "path": "40"
    },
    "1960": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1961": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "NOT",
      "path": "40"
    },
    "1962": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1963": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "1964": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "AND",
      "path": "40"
    },
    "1965": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "1966": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "AND",
      "path": "40"
    },
    "1967": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "OR",
      "path": "40"
    },
    "1968": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1969": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1970": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "1971": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "ADD",
      "path": "40"
    },
    "1972": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "1973": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP6",
      "path": "40"
    },
    "1974": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1975": {
      "op": "POP"
    },
    "1976": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP4",
      "path": "40"
    },
    "1977": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1978": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "ADD",
      "path": "40"
    },
    "1979": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "1980": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "1981": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "1982": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1983": {
      "op": "POP"
    },
    "1984": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "1986": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1987": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "1988": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1989": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP5",
      "path": "40"
    },
    "1990": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SUB",
      "path": "40"
    },
    "1991": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP4",
      "path": "40"
    },
    "1992": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "ADD",
      "path": "40"
    },
    "1993": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1994": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "1995": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP2",
      "path": "40"
    },
    "1996": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP5",
      "path": "40"
    },
    "1997": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "ADD",
      "path": "40"
    },
    "1998": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1999": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP4",
      "path": "40"
    },
    "2000": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2001": {
      "fn": "ERC20.permit",
      "offset": [
        6029,
        6322
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2002": {
      "fn": "ERC20.permit",
      "offset": [
        6029,
        6322
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "2003": {
      "fn": "ERC20.permit",
      "offset": [
        6029,
        6322
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2004": {
      "fn": "ERC20.permit",
      "offset": [
        6029,
        6322
      ],
      "op": "DUP5",
      "path": "40"
    },
    "2005": {
      "fn": "ERC20.permit",
      "offset": [
        6029,
        6322
      ],
      "op": "ADD",
      "path": "40"
    },
    "2006": {
      "fn": "ERC20.permit",
      "offset": [
        6029,
        6322
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2007": {
      "fn": "ERC20.permit",
      "offset": [
        6029,
        6322
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2008": {
      "fn": "ERC20.permit",
      "offset": [
        6029,
        6322
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2009": {
      "fn": "ERC20.permit",
      "offset": [
        6029,
        6322
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2012": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2013": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2014": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2015": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2016": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "2018": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "DUP6",
      "path": "40"
    },
    "2019": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "ADD",
      "path": "40"
    },
    "2020": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2021": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "DUP5",
      "path": "40"
    },
    "2022": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2023": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2024": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2025": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2026": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xFF"
    },
    "2028": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "DUP11",
      "path": "40"
    },
    "2029": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "AND",
      "path": "40"
    },
    "2030": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x80"
    },
    "2032": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "DUP7",
      "path": "40"
    },
    "2033": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "ADD",
      "path": "40"
    },
    "2034": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2035": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xA0"
    },
    "2037": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "DUP6",
      "path": "40"
    },
    "2038": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "ADD",
      "path": "40"
    },
    "2039": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "DUP10",
      "path": "40"
    },
    "2040": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2041": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2042": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xC0"
    },
    "2044": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "DUP6",
      "path": "40"
    },
    "2045": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "ADD",
      "path": "40"
    },
    "2046": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "DUP9",
      "path": "40"
    },
    "2047": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2048": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2049": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2050": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "2051": {
      "fn": "ERC20.permit",
      "offset": [
        6029,
        6322
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2052": {
      "fn": "ERC20.permit",
      "offset": [
        6029,
        6322
      ],
      "op": "SWAP6",
      "path": "40"
    },
    "2053": {
      "op": "POP"
    },
    "2054": {
      "op": "SWAP4"
    },
    "2055": {
      "op": "POP"
    },
    "2056": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1"
    },
    "2058": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "2059": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xE0"
    },
    "2061": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2062": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2063": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "ADD",
      "path": "40"
    },
    "2064": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "2065": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2068": {
      "op": "NOT"
    },
    "2069": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2070": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "ADD",
      "path": "40"
    },
    "2071": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "2072": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2073": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2074": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "SUB",
      "path": "40"
    },
    "2075": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2076": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2077": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "ADD",
      "path": "40"
    },
    "2078": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2079": {
      "fn": "ERC20.permit",
      "offset": [
        6056,
        6308
      ],
      "op": "DUP6",
      "path": "40"
    },
    "2080": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "GAS",
      "path": "40"
    },
    "2081": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "STATICCALL",
      "path": "40"
    },
    "2082": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "2083": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2084": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "2085": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x832"
    },
    "2088": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "2089": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "2090": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "2092": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2093": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "RETURNDATACOPY",
      "path": "40"
    },
    "2094": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "RETURNDATASIZE",
      "path": "40"
    },
    "2095": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "2097": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "REVERT",
      "path": "40"
    },
    "2098": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2099": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "POP",
      "path": "40"
    },
    "2100": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "POP",
      "path": "40"
    },
    "2101": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "POP",
      "path": "40"
    },
    "2102": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "2104": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2106": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "2107": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "SUB",
      "path": "40"
    },
    "2108": {
      "fn": "ERC20.permit",
      "offset": [
        6359,
        6385
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "2109": {
      "fn": "ERC20.permit",
      "offset": [
        6332,
        6385
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2110": {
      "fn": "ERC20.permit",
      "offset": [
        6332,
        6385
      ],
      "op": "POP",
      "path": "40"
    },
    "2111": {
      "fn": "ERC20.permit",
      "offset": [
        6423,
        6429
      ],
      "op": "DUP9",
      "path": "40",
      "statement": 15
    },
    "2112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2118": {
      "op": "SHL"
    },
    "2119": {
      "op": "SUB"
    },
    "2120": {
      "fn": "ERC20.permit",
      "offset": [
        6403,
        6429
      ],
      "op": "AND",
      "path": "40"
    },
    "2121": {
      "fn": "ERC20.permit",
      "offset": [
        6403,
        6419
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2128": {
      "op": "SHL"
    },
    "2129": {
      "op": "SUB"
    },
    "2130": {
      "fn": "ERC20.permit",
      "offset": [
        6403,
        6429
      ],
      "op": "AND",
      "path": "40"
    },
    "2131": {
      "branch": 35,
      "fn": "ERC20.permit",
      "offset": [
        6403,
        6429
      ],
      "op": "EQ",
      "path": "40"
    },
    "2132": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x8A4"
    },
    "2135": {
      "branch": 35,
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "2136": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2138": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2139": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "2140": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2146": {
      "op": "SHL"
    },
    "2147": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2148": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2149": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "2151": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "2153": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2154": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "ADD",
      "path": "40"
    },
    "2155": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2156": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x18"
    },
    "2158": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x24"
    },
    "2160": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2161": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "ADD",
      "path": "40"
    },
    "2162": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2163": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "PUSH32",
      "path": "40",
      "value": "0x45524332303A20496E76616C6964205369676E61747572650000000000000000"
    },
    "2196": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x44"
    },
    "2198": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2199": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "ADD",
      "path": "40"
    },
    "2200": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2201": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2202": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "2203": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2204": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2205": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2206": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "SUB",
      "path": "40"
    },
    "2207": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x64"
    },
    "2209": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "ADD",
      "path": "40"
    },
    "2210": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2211": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "REVERT",
      "path": "40"
    },
    "2212": {
      "fn": "ERC20.permit",
      "offset": [
        6395,
        6458
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2213": {
      "fn": "ERC20.permit",
      "offset": [
        6468,
        6506
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 16,
      "value": "0x8B6"
    },
    "2216": {
      "fn": "ERC20.permit",
      "offset": [
        6477,
        6489
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x8AF"
    },
    "2219": {
      "fn": "ERC20.permit",
      "offset": [
        6477,
        6487
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x8EC"
    },
    "2222": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        6477,
        6489
      ],
      "op": "JUMP",
      "path": "40"
    },
    "2223": {
      "fn": "ERC20.permit",
      "offset": [
        6477,
        6489
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2224": {
      "fn": "ERC20.permit",
      "offset": [
        6491,
        6498
      ],
      "op": "DUP10",
      "path": "40"
    },
    "2225": {
      "fn": "ERC20.permit",
      "offset": [
        6500,
        6505
      ],
      "op": "DUP10",
      "path": "40"
    },
    "2226": {
      "fn": "ERC20.permit",
      "offset": [
        6468,
        6476
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x8F0"
    },
    "2229": {
      "fn": "ERC20.permit",
      "jump": "i",
      "offset": [
        6468,
        6506
      ],
      "op": "JUMP",
      "path": "40"
    },
    "2230": {
      "fn": "ERC20.permit",
      "offset": [
        6468,
        6506
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2231": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "POP",
      "path": "40"
    },
    "2232": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "POP",
      "path": "40"
    },
    "2233": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "POP",
      "path": "40"
    },
    "2234": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "POP",
      "path": "40"
    },
    "2235": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "POP",
      "path": "40"
    },
    "2236": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "POP",
      "path": "40"
    },
    "2237": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "POP",
      "path": "40"
    },
    "2238": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "POP",
      "path": "40"
    },
    "2239": {
      "fn": "ERC20.permit",
      "offset": [
        5667,
        6514
      ],
      "op": "POP",
      "path": "40"
    },
    "2240": {
      "fn": "ERC20.permit",
      "jump": "o",
      "offset": [
        5667,
        6514
      ],
      "op": "JUMP",
      "path": "40"
    },
    "2241": {
      "fn": "ERC20.allowance",
      "offset": [
        4464,
        4613
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2248": {
      "op": "SHL"
    },
    "2249": {
      "op": "SUB"
    },
    "2250": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4597
      ],
      "op": "SWAP2",
      "path": "40",
      "statement": 17
    },
    "2251": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4597
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2252": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4597
      ],
      "op": "AND",
      "path": "40"
    },
    "2253": {
      "fn": "ERC20.allowance",
      "offset": [
        4553,
        4560
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "2255": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4597
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2256": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4597
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2257": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4597
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2258": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4590
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x3"
    },
    "2260": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4597
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "2262": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4597
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2263": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4597
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2264": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4597
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2265": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4597
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2267": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4597
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2268": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4597
      ],
      "op": "DUP4",
      "path": "40"
    },
    "2269": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4597
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "2270": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4606
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "2271": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4606
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2272": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4606
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "2273": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4606
      ],
      "op": "AND",
      "path": "40"
    },
    "2274": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4606
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2275": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4606
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2276": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4606
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2277": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4606
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2278": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4606
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2279": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4606
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2280": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4606
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "2281": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4606
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "2282": {
      "fn": "ERC20.allowance",
      "offset": [
        4579,
        4606
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2283": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        4464,
        4613
      ],
      "op": "JUMP",
      "path": "40"
    },
    "2284": {
      "fn": "Context._msgSender",
      "offset": [
        559,
        663
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2285": {
      "fn": "Context._msgSender",
      "offset": [
        646,
        656
      ],
      "op": "CALLER",
      "path": "31",
      "statement": 18
    },
    "2286": {
      "fn": "Context._msgSender",
      "offset": [
        559,
        663
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2287": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        559,
        663
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2288": {
      "fn": "ERC20._approve",
      "offset": [
        11441,
        11781
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2295": {
      "op": "SHL"
    },
    "2296": {
      "op": "SUB"
    },
    "2297": {
      "fn": "ERC20._approve",
      "offset": [
        11542,
        11561
      ],
      "op": "DUP4",
      "path": "40",
      "statement": 19
    },
    "2298": {
      "branch": 36,
      "fn": "ERC20._approve",
      "offset": [
        11542,
        11561
      ],
      "op": "AND",
      "path": "40"
    },
    "2299": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x935"
    },
    "2302": {
      "branch": 36,
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "2303": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2305": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "2306": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2312": {
      "op": "SHL"
    },
    "2313": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2314": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2315": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "2317": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "ADD",
      "path": "40"
    },
    "2318": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2319": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2320": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "2322": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "ADD",
      "path": "40"
    },
    "2323": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2324": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2325": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "SUB",
      "path": "40"
    },
    "2326": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2327": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2328": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x24"
    },
    "2330": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2331": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2332": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "2334": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "ADD",
      "path": "40"
    },
    "2335": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2336": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xCEF"
    },
    "2339": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x24"
    },
    "2341": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2342": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "CODECOPY",
      "path": "40"
    },
    "2343": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2345": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "ADD",
      "path": "40"
    },
    "2346": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2347": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "POP",
      "path": "40"
    },
    "2348": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "POP",
      "path": "40"
    },
    "2349": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2351": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "2352": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2353": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2354": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "SUB",
      "path": "40"
    },
    "2355": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2356": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "REVERT",
      "path": "40"
    },
    "2357": {
      "fn": "ERC20._approve",
      "offset": [
        11534,
        11602
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2364": {
      "op": "SHL"
    },
    "2365": {
      "op": "SUB"
    },
    "2366": {
      "fn": "ERC20._approve",
      "offset": [
        11620,
        11641
      ],
      "op": "DUP3",
      "path": "40",
      "statement": 20
    },
    "2367": {
      "branch": 37,
      "fn": "ERC20._approve",
      "offset": [
        11620,
        11641
      ],
      "op": "AND",
      "path": "40"
    },
    "2368": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x97A"
    },
    "2371": {
      "branch": 37,
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "2372": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2374": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "2375": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2381": {
      "op": "SHL"
    },
    "2382": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2383": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2384": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "2386": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "ADD",
      "path": "40"
    },
    "2387": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2388": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2389": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "2391": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "ADD",
      "path": "40"
    },
    "2392": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2393": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2394": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "SUB",
      "path": "40"
    },
    "2395": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2396": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2397": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x22"
    },
    "2399": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2400": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2401": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "2403": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "ADD",
      "path": "40"
    },
    "2404": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2405": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xC5A"
    },
    "2408": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x22"
    },
    "2410": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2411": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "CODECOPY",
      "path": "40"
    },
    "2412": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2414": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "ADD",
      "path": "40"
    },
    "2415": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2416": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "POP",
      "path": "40"
    },
    "2417": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "POP",
      "path": "40"
    },
    "2418": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2420": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "2421": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2422": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2423": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "SUB",
      "path": "40"
    },
    "2424": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2425": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "REVERT",
      "path": "40"
    },
    "2426": {
      "fn": "ERC20._approve",
      "offset": [
        11612,
        11680
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2433": {
      "op": "SHL"
    },
    "2434": {
      "op": "SUB"
    },
    "2435": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11709
      ],
      "op": "DUP1",
      "path": "40",
      "statement": 21
    },
    "2436": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11709
      ],
      "op": "DUP5",
      "path": "40"
    },
    "2437": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11709
      ],
      "op": "AND",
      "path": "40"
    },
    "2438": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11709
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "2440": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11709
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2441": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11709
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2442": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11709
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2443": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11702
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x3"
    },
    "2445": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11709
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "2447": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11709
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2448": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11709
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2449": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11709
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2450": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11709
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2452": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11709
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2453": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11709
      ],
      "op": "DUP4",
      "path": "40"
    },
    "2454": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11709
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "2455": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11718
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "2456": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11718
      ],
      "op": "DUP8",
      "path": "40"
    },
    "2457": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11718
      ],
      "op": "AND",
      "path": "40"
    },
    "2458": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11718
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2459": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11718
      ],
      "op": "DUP5",
      "path": "40"
    },
    "2460": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11718
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2461": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11718
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "2462": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11718
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2463": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11718
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2464": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11718
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2465": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11718
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2466": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11718
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2467": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11718
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "2468": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11727
      ],
      "op": "DUP6",
      "path": "40"
    },
    "2469": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11727
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2470": {
      "fn": "ERC20._approve",
      "offset": [
        11691,
        11727
      ],
      "op": "SSTORE",
      "path": "40"
    },
    "2471": {
      "fn": "ERC20._approve",
      "offset": [
        11742,
        11774
      ],
      "op": "DUP2",
      "path": "40",
      "statement": 22
    },
    "2472": {
      "fn": "ERC20._approve",
      "offset": [
        11742,
        11774
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "2473": {
      "fn": "ERC20._approve",
      "offset": [
        11742,
        11774
      ],
      "op": "DUP6",
      "path": "40"
    },
    "2474": {
      "fn": "ERC20._approve",
      "offset": [
        11742,
        11774
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2475": {
      "fn": "ERC20._approve",
      "offset": [
        11742,
        11774
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2476": {
      "fn": "ERC20._approve",
      "offset": [
        11742,
        11774
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2477": {
      "fn": "ERC20._approve",
      "offset": [
        11742,
        11774
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "2478": {
      "fn": "ERC20._approve",
      "offset": [
        11742,
        11774
      ],
      "op": "PUSH32",
      "path": "40",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2511": {
      "fn": "ERC20._approve",
      "offset": [
        11742,
        11774
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "2512": {
      "fn": "ERC20._approve",
      "offset": [
        11742,
        11774
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2513": {
      "fn": "ERC20._approve",
      "offset": [
        11742,
        11774
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2514": {
      "fn": "ERC20._approve",
      "offset": [
        11742,
        11774
      ],
      "op": "SUB",
      "path": "40"
    },
    "2515": {
      "fn": "ERC20._approve",
      "offset": [
        11742,
        11774
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2516": {
      "fn": "ERC20._approve",
      "offset": [
        11742,
        11774
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2517": {
      "fn": "ERC20._approve",
      "offset": [
        11742,
        11774
      ],
      "op": "ADD",
      "path": "40"
    },
    "2518": {
      "fn": "ERC20._approve",
      "offset": [
        11742,
        11774
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2519": {
      "fn": "ERC20._approve",
      "offset": [
        11742,
        11774
      ],
      "op": "LOG3",
      "path": "40"
    },
    "2520": {
      "fn": "ERC20._approve",
      "offset": [
        11441,
        11781
      ],
      "op": "POP",
      "path": "40"
    },
    "2521": {
      "fn": "ERC20._approve",
      "offset": [
        11441,
        11781
      ],
      "op": "POP",
      "path": "40"
    },
    "2522": {
      "fn": "ERC20._approve",
      "offset": [
        11441,
        11781
      ],
      "op": "POP",
      "path": "40"
    },
    "2523": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        11441,
        11781
      ],
      "op": "JUMP",
      "path": "40"
    },
    "2524": {
      "fn": "ERC20._transfer",
      "offset": [
        9119,
        9649
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2531": {
      "op": "SHL"
    },
    "2532": {
      "op": "SUB"
    },
    "2533": {
      "fn": "ERC20._transfer",
      "offset": [
        9224,
        9244
      ],
      "op": "DUP4",
      "path": "40",
      "statement": 23
    },
    "2534": {
      "branch": 38,
      "fn": "ERC20._transfer",
      "offset": [
        9224,
        9244
      ],
      "op": "AND",
      "path": "40"
    },
    "2535": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xA21"
    },
    "2538": {
      "branch": 38,
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "2539": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2541": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "2542": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2548": {
      "op": "SHL"
    },
    "2549": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2550": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2551": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "2553": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "ADD",
      "path": "40"
    },
    "2554": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2555": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2556": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "2558": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "ADD",
      "path": "40"
    },
    "2559": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2560": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2561": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "SUB",
      "path": "40"
    },
    "2562": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2563": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2564": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x25"
    },
    "2566": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2567": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2568": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "2570": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "ADD",
      "path": "40"
    },
    "2571": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2572": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xCCA"
    },
    "2575": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x25"
    },
    "2577": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2578": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "CODECOPY",
      "path": "40"
    },
    "2579": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2581": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "ADD",
      "path": "40"
    },
    "2582": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2583": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "POP",
      "path": "40"
    },
    "2584": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "POP",
      "path": "40"
    },
    "2585": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2587": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "2588": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2589": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2590": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "SUB",
      "path": "40"
    },
    "2591": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2592": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "REVERT",
      "path": "40"
    },
    "2593": {
      "fn": "ERC20._transfer",
      "offset": [
        9216,
        9286
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2600": {
      "op": "SHL"
    },
    "2601": {
      "op": "SUB"
    },
    "2602": {
      "fn": "ERC20._transfer",
      "offset": [
        9304,
        9327
      ],
      "op": "DUP3",
      "path": "40",
      "statement": 24
    },
    "2603": {
      "branch": 39,
      "fn": "ERC20._transfer",
      "offset": [
        9304,
        9327
      ],
      "op": "AND",
      "path": "40"
    },
    "2604": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xA66"
    },
    "2607": {
      "branch": 39,
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "2608": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2610": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "2611": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2617": {
      "op": "SHL"
    },
    "2618": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2619": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2620": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "2622": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "ADD",
      "path": "40"
    },
    "2623": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2624": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2625": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "2627": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "ADD",
      "path": "40"
    },
    "2628": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2629": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2630": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "SUB",
      "path": "40"
    },
    "2631": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2632": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2633": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x23"
    },
    "2635": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2636": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2637": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "2639": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "ADD",
      "path": "40"
    },
    "2640": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2641": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xC37"
    },
    "2644": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x23"
    },
    "2646": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2647": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "CODECOPY",
      "path": "40"
    },
    "2648": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2650": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "ADD",
      "path": "40"
    },
    "2651": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2652": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "POP",
      "path": "40"
    },
    "2653": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "POP",
      "path": "40"
    },
    "2654": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2656": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "2657": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2658": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2659": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "SUB",
      "path": "40"
    },
    "2660": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2661": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "REVERT",
      "path": "40"
    },
    "2662": {
      "fn": "ERC20._transfer",
      "offset": [
        9296,
        9367
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2663": {
      "fn": "ERC20._transfer",
      "offset": [
        9378,
        9425
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 25,
      "value": "0xA71"
    },
    "2666": {
      "fn": "ERC20._transfer",
      "offset": [
        9399,
        9405
      ],
      "op": "DUP4",
      "path": "40"
    },
    "2667": {
      "fn": "ERC20._transfer",
      "offset": [
        9407,
        9416
      ],
      "op": "DUP4",
      "path": "40"
    },
    "2668": {
      "fn": "ERC20._transfer",
      "offset": [
        9418,
        9424
      ],
      "op": "DUP4",
      "path": "40"
    },
    "2669": {
      "fn": "ERC20._transfer",
      "offset": [
        9378,
        9398
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xC31"
    },
    "2672": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        9378,
        9425
      ],
      "op": "JUMP",
      "path": "40"
    },
    "2673": {
      "fn": "ERC20._transfer",
      "offset": [
        9378,
        9425
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2674": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9527
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 26,
      "value": "0xAAE"
    },
    "2677": {
      "fn": "ERC20._transfer",
      "offset": [
        9478,
        9484
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2678": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9527
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2680": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9527
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "2681": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9527
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2682": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9527
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x60"
    },
    "2684": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9527
      ],
      "op": "ADD",
      "path": "40"
    },
    "2685": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9527
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2687": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9527
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2688": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9527
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2689": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9527
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x26"
    },
    "2691": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9527
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2692": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9527
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2693": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9527
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "2695": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9527
      ],
      "op": "ADD",
      "path": "40"
    },
    "2696": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9527
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xC7C"
    },
    "2699": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9527
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x26"
    },
    "2701": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9527
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2702": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9527
      ],
      "op": "CODECOPY",
      "path": "40"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2709": {
      "op": "SHL"
    },
    "2710": {
      "op": "SUB"
    },
    "2711": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9473
      ],
      "op": "DUP7",
      "path": "40"
    },
    "2712": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9473
      ],
      "op": "AND",
      "path": "40"
    },
    "2713": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9473
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "2715": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9473
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2716": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9473
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2717": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9473
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2718": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9465
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1"
    },
    "2720": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9473
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "2722": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9473
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2723": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9473
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2725": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9473
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2726": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9473
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "2727": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9473
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "2728": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9473
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2729": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9527
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2730": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9477
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xB39"
    },
    "2733": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        9456,
        9527
      ],
      "op": "JUMP",
      "path": "40"
    },
    "2734": {
      "fn": "ERC20._transfer",
      "offset": [
        9456,
        9527
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2741": {
      "op": "SHL"
    },
    "2742": {
      "op": "SUB"
    },
    "2743": {
      "fn": "ERC20._transfer",
      "offset": [
        9436,
        9453
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2744": {
      "fn": "ERC20._transfer",
      "offset": [
        9436,
        9453
      ],
      "op": "DUP6",
      "path": "40"
    },
    "2745": {
      "fn": "ERC20._transfer",
      "offset": [
        9436,
        9453
      ],
      "op": "AND",
      "path": "40"
    },
    "2746": {
      "fn": "ERC20._transfer",
      "offset": [
        9436,
        9453
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "2748": {
      "fn": "ERC20._transfer",
      "offset": [
        9436,
        9453
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2749": {
      "fn": "ERC20._transfer",
      "offset": [
        9436,
        9453
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2750": {
      "fn": "ERC20._transfer",
      "offset": [
        9436,
        9453
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2751": {
      "fn": "ERC20._transfer",
      "offset": [
        9436,
        9445
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1"
    },
    "2753": {
      "fn": "ERC20._transfer",
      "offset": [
        9436,
        9453
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "2755": {
      "fn": "ERC20._transfer",
      "offset": [
        9436,
        9453
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2756": {
      "fn": "ERC20._transfer",
      "offset": [
        9436,
        9453
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2758": {
      "fn": "ERC20._transfer",
      "offset": [
        9436,
        9453
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2759": {
      "fn": "ERC20._transfer",
      "offset": [
        9436,
        9453
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2760": {
      "fn": "ERC20._transfer",
      "offset": [
        9436,
        9453
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "2761": {
      "fn": "ERC20._transfer",
      "offset": [
        9436,
        9527
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "2762": {
      "fn": "ERC20._transfer",
      "offset": [
        9436,
        9527
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2763": {
      "fn": "ERC20._transfer",
      "offset": [
        9436,
        9527
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "2764": {
      "fn": "ERC20._transfer",
      "offset": [
        9436,
        9527
      ],
      "op": "SSTORE",
      "path": "40"
    },
    "2765": {
      "fn": "ERC20._transfer",
      "offset": [
        9560,
        9580
      ],
      "op": "SWAP1",
      "path": "40",
      "statement": 27
    },
    "2766": {
      "fn": "ERC20._transfer",
      "offset": [
        9560,
        9580
      ],
      "op": "DUP5",
      "path": "40"
    },
    "2767": {
      "fn": "ERC20._transfer",
      "offset": [
        9560,
        9580
      ],
      "op": "AND",
      "path": "40"
    },
    "2768": {
      "fn": "ERC20._transfer",
      "offset": [
        9560,
        9580
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2769": {
      "fn": "ERC20._transfer",
      "offset": [
        9560,
        9580
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2770": {
      "fn": "ERC20._transfer",
      "offset": [
        9560,
        9580
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "2771": {
      "fn": "ERC20._transfer",
      "offset": [
        9560,
        9580
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "2772": {
      "fn": "ERC20._transfer",
      "offset": [
        9560,
        9592
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xADD"
    },
    "2775": {
      "fn": "ERC20._transfer",
      "offset": [
        9560,
        9592
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2776": {
      "fn": "ERC20._transfer",
      "offset": [
        9585,
        9591
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2777": {
      "fn": "ERC20._transfer",
      "offset": [
        9560,
        9584
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0xBD0"
    },
    "2780": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        9560,
        9592
      ],
      "op": "JUMP",
      "path": "40"
    },
    "2781": {
      "fn": "ERC20._transfer",
      "offset": [
        9560,
        9592
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2788": {
      "op": "SHL"
    },
    "2789": {
      "op": "SUB"
    },
    "2790": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9557
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2791": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9557
      ],
      "op": "DUP5",
      "path": "40"
    },
    "2792": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9557
      ],
      "op": "AND",
      "path": "40"
    },
    "2793": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9557
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "2795": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9557
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2796": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9557
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2797": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9557
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2798": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9546
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x1"
    },
    "2800": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9557
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x20"
    },
    "2802": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9557
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2803": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9557
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2804": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9557
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2805": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9557
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "2807": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9557
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2808": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9557
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2809": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9557
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2810": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9557
      ],
      "op": "KECCAK256",
      "path": "40"
    },
    "2811": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9592
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "2812": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9592
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2813": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9592
      ],
      "op": "SWAP5",
      "path": "40"
    },
    "2814": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9592
      ],
      "op": "SSTORE",
      "path": "40"
    },
    "2815": {
      "fn": "ERC20._transfer",
      "offset": [
        9607,
        9642
      ],
      "op": "DUP1",
      "path": "40",
      "statement": 28
    },
    "2816": {
      "fn": "ERC20._transfer",
      "offset": [
        9607,
        9642
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "2817": {
      "fn": "ERC20._transfer",
      "offset": [
        9607,
        9642
      ],
      "op": "DUP6",
      "path": "40"
    },
    "2818": {
      "fn": "ERC20._transfer",
      "offset": [
        9607,
        9642
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2819": {
      "fn": "ERC20._transfer",
      "offset": [
        9607,
        9642
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2820": {
      "fn": "ERC20._transfer",
      "offset": [
        9607,
        9642
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2821": {
      "fn": "ERC20._transfer",
      "offset": [
        9607,
        9642
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "2822": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9557
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2823": {
      "fn": "ERC20._transfer",
      "offset": [
        9537,
        9557
      ],
      "op": "SWAP4",
      "path": "40"
    },
    "2824": {
      "fn": "ERC20._transfer",
      "offset": [
        9607,
        9642
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "2825": {
      "fn": "ERC20._transfer",
      "offset": [
        9607,
        9642
      ],
      "op": "DUP8",
      "path": "40"
    },
    "2826": {
      "fn": "ERC20._transfer",
      "offset": [
        9607,
        9642
      ],
      "op": "AND",
      "path": "40"
    },
    "2827": {
      "fn": "ERC20._transfer",
      "offset": [
        9607,
        9642
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "2828": {
      "fn": "ERC20._transfer",
      "offset": [
        9607,
        9642
      ],
      "op": "PUSH32",
      "path": "40",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2861": {
      "fn": "ERC20._transfer",
      "offset": [
        9607,
        9642
      ],
      "op": "SWAP3",
      "path": "40"
    },
    "2862": {
      "fn": "ERC20._transfer",
      "offset": [
        9607,
        9642
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2863": {
      "fn": "ERC20._transfer",
      "offset": [
        9607,
        9642
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2864": {
      "fn": "ERC20._transfer",
      "offset": [
        9607,
        9642
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2865": {
      "fn": "ERC20._transfer",
      "offset": [
        9607,
        9642
      ],
      "op": "SUB",
      "path": "40"
    },
    "2866": {
      "fn": "ERC20._transfer",
      "offset": [
        9607,
        9642
      ],
      "op": "ADD",
      "path": "40"
    },
    "2867": {
      "fn": "ERC20._transfer",
      "offset": [
        9607,
        9642
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2868": {
      "fn": "ERC20._transfer",
      "offset": [
        9607,
        9642
      ],
      "op": "LOG3",
      "path": "40"
    },
    "2869": {
      "fn": "ERC20._transfer",
      "offset": [
        9119,
        9649
      ],
      "op": "POP",
      "path": "40"
    },
    "2870": {
      "fn": "ERC20._transfer",
      "offset": [
        9119,
        9649
      ],
      "op": "POP",
      "path": "40"
    },
    "2871": {
      "fn": "ERC20._transfer",
      "offset": [
        9119,
        9649
      ],
      "op": "POP",
      "path": "40"
    },
    "2872": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        9119,
        9649
      ],
      "op": "JUMP",
      "path": "40"
    },
    "2873": {
      "fn": "SafeMath.sub",
      "offset": [
        5393,
        5556
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2874": {
      "fn": "SafeMath.sub",
      "offset": [
        5479,
        5486
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2876": {
      "fn": "SafeMath.sub",
      "offset": [
        5514,
        5526
      ],
      "op": "DUP2",
      "path": "25",
      "statement": 29
    },
    "2877": {
      "fn": "SafeMath.sub",
      "offset": [
        5506,
        5512
      ],
      "op": "DUP5",
      "path": "25"
    },
    "2878": {
      "fn": "SafeMath.sub",
      "offset": [
        5506,
        5512
      ],
      "op": "DUP5",
      "path": "25"
    },
    "2879": {
      "fn": "SafeMath.sub",
      "offset": [
        5506,
        5512
      ],
      "op": "GT",
      "path": "25"
    },
    "2880": {
      "branch": 40,
      "fn": "SafeMath.sub",
      "offset": [
        5506,
        5512
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2881": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xBC8"
    },
    "2884": {
      "branch": 40,
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2885": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2887": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2888": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2894": {
      "op": "SHL"
    },
    "2895": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2896": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2897": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2899": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ADD",
      "path": "25"
    },
    "2900": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2901": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2902": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2904": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ADD",
      "path": "25"
    },
    "2905": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2906": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2907": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SUB",
      "path": "25"
    },
    "2908": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2909": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2910": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2911": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2912": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2913": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2914": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2915": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2916": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2918": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ADD",
      "path": "25"
    },
    "2919": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2920": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "2921": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2922": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2923": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2924": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2926": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ADD",
      "path": "25"
    },
    "2927": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2928": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2929": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2930": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2931": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2933": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2934": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2935": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2936": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "LT",
      "path": "25"
    },
    "2937": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2938": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB8D"
    },
    "2941": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2942": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2943": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2944": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ADD",
      "path": "25"
    },
    "2945": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2946": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2947": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2948": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ADD",
      "path": "25"
    },
    "2949": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2950": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2952": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ADD",
      "path": "25"
    },
    "2953": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xB75"
    },
    "2956": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2957": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2958": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "2959": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "2960": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "2961": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "2962": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2963": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "2964": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2965": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2966": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ADD",
      "path": "25"
    },
    "2967": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2968": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "2970": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "AND",
      "path": "25"
    },
    "2971": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2972": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2973": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xBBA"
    },
    "2976": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2977": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2978": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2979": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SUB",
      "path": "25"
    },
    "2980": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2981": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2982": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "2984": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2985": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2987": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SUB",
      "path": "25"
    },
    "2988": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "2991": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "EXP",
      "path": "25"
    },
    "2992": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SUB",
      "path": "25"
    },
    "2993": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "NOT",
      "path": "25"
    },
    "2994": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "AND",
      "path": "25"
    },
    "2995": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2996": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2997": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2999": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "ADD",
      "path": "25"
    },
    "3000": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "3001": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "3002": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3003": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "3004": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "3005": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "3006": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "3007": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "POP",
      "path": "25"
    },
    "3008": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "3010": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "3011": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3012": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "3013": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SUB",
      "path": "25"
    },
    "3014": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3015": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3016": {
      "fn": "SafeMath.sub",
      "offset": [
        5498,
        5527
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3017": {
      "op": "POP"
    },
    "3018": {
      "op": "POP"
    },
    "3019": {
      "op": "POP"
    },
    "3020": {
      "fn": "SafeMath.sub",
      "offset": [
        5544,
        5549
      ],
      "op": "SWAP1",
      "path": "25",
      "statement": 30
    },
    "3021": {
      "fn": "SafeMath.sub",
      "offset": [
        5544,
        5549
      ],
      "op": "SUB",
      "path": "25"
    },
    "3022": {
      "fn": "SafeMath.sub",
      "offset": [
        5544,
        5549
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3023": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        5393,
        5556
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3024": {
      "fn": "SafeMath.add",
      "offset": [
        2651,
        2826
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3025": {
      "fn": "SafeMath.add",
      "offset": [
        2709,
        2716
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "3027": {
      "fn": "SafeMath.add",
      "offset": [
        2740,
        2745
      ],
      "op": "DUP3",
      "path": "25"
    },
    "3028": {
      "fn": "SafeMath.add",
      "offset": [
        2740,
        2745
      ],
      "op": "DUP3",
      "path": "25"
    },
    "3029": {
      "fn": "SafeMath.add",
      "offset": [
        2740,
        2745
      ],
      "op": "ADD",
      "path": "25"
    },
    "3030": {
      "fn": "SafeMath.add",
      "offset": [
        2763,
        2769
      ],
      "op": "DUP4",
      "path": "25",
      "statement": 31
    },
    "3031": {
      "fn": "SafeMath.add",
      "offset": [
        2763,
        2769
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3032": {
      "fn": "SafeMath.add",
      "offset": [
        2763,
        2769
      ],
      "op": "LT",
      "path": "25"
    },
    "3033": {
      "branch": 41,
      "fn": "SafeMath.add",
      "offset": [
        2763,
        2769
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "3034": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xC2A"
    },
    "3037": {
      "branch": 41,
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "3038": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "3040": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "DUP1",
      "path": "25"
    },
    "3041": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "3042": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3048": {
      "op": "SHL"
    },
    "3049": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3050": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3051": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "3053": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "3055": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "DUP3",
      "path": "25"
    },
    "3056": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "ADD",
      "path": "25"
    },
    "3057": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3058": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1B"
    },
    "3060": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x24"
    },
    "3062": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "DUP3",
      "path": "25"
    },
    "3063": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "ADD",
      "path": "25"
    },
    "3064": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3065": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "3098": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x44"
    },
    "3100": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "DUP3",
      "path": "25"
    },
    "3101": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "ADD",
      "path": "25"
    },
    "3102": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "3103": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3104": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "3105": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3106": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "DUP2",
      "path": "25"
    },
    "3107": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3108": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "SUB",
      "path": "25"
    },
    "3109": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x64"
    },
    "3111": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "ADD",
      "path": "25"
    },
    "3112": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "3113": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "REVERT",
      "path": "25"
    },
    "3114": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2801
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "3115": {
      "fn": "SafeMath.add",
      "offset": [
        2818,
        2819
      ],
      "op": "SWAP4",
      "path": "25",
      "statement": 32
    },
    "3116": {
      "fn": "SafeMath.add",
      "offset": [
        2651,
        2826
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "3117": {
      "op": "POP"
    },
    "3118": {
      "op": "POP"
    },
    "3119": {
      "op": "POP"
    },
    "3120": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        2651,
        2826
      ],
      "op": "JUMP",
      "path": "25"
    },
    "3121": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        12779,
        12871
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "3122": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        12779,
        12871
      ],
      "op": "POP",
      "path": "40"
    },
    "3123": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        12779,
        12871
      ],
      "op": "POP",
      "path": "40"
    },
    "3124": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        12779,
        12871
      ],
      "op": "POP",
      "path": "40"
    },
    "3125": {
      "fn": "ERC20._beforeTokenTransfer",
      "jump": "o",
      "offset": [
        12779,
        12871
      ],
      "op": "JUMP",
      "path": "40"
    }
  },
  "sha1": "aac1454bec6f09d7b303ecc5550198db86dc322e",
  "source": "pragma solidity 0.6.12;\n\nimport \"../OpenZeppelin/GSN/Context.sol\";\nimport \"../OpenZeppelin/math/SafeMath.sol\";\nimport \"../OpenZeppelin/utils/Address.sol\";\nimport \"../interfaces/IERC20.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\n\ncontract ERC20 is IERC20, Context {\n    using SafeMath for uint256;\n    using Address for address;\n    bytes32 public DOMAIN_SEPARATOR;\n\n    mapping (address => uint256) private _balances;\n    mapping(address => uint256) public nonces;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n    bool private _initialized;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function _initERC20(string memory name_, string memory symbol_) internal {\n        require(!_initialized, \"ERC20: token has already been initialized!\");\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n        uint256 chainId;\n        assembly {\n            chainId := chainid()\n        }\n        DOMAIN_SEPARATOR = keccak256(abi.encode(keccak256(\"EIP712Domain(uint256 chainId,address verifyingContract)\"), chainId, address(this)));\n \n        _initialized = true;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view override returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n  // See https://eips.ethereum.org/EIPS/eip-191\n    string private constant EIP191_PREFIX_FOR_EIP712_STRUCTURED_DATA = \"\\x19\\x01\";\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 private constant PERMIT_SIGNATURE_HASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n\n    /// @notice Approves `value` from `owner_` to be spend by `spender`.\n    /// @param owner_ Address of the owner.\n    /// @param spender The address of the spender that gets approved to draw from `owner_`.\n    /// @param value The maximum collective amount that `spender` can draw.\n    /// @param deadline This permit must be redeemed before this deadline (UTC timestamp in seconds).\n    function permit(\n        address owner_,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external override {\n        require(owner_ != address(0), \"ERC20: Owner cannot be 0\");\n        require(block.timestamp < deadline, \"ERC20: Expired\");\n        bytes32 digest =\n            keccak256(\n                abi.encodePacked(\n                    EIP191_PREFIX_FOR_EIP712_STRUCTURED_DATA,\n                    DOMAIN_SEPARATOR,\n                    keccak256(abi.encode(PERMIT_SIGNATURE_HASH, owner_, spender, value, nonces[owner_]++, deadline))\n                )\n            );\n        address recoveredAddress = ecrecover(digest, v, r, s);\n        require(recoveredAddress == owner_, \"ERC20: Invalid Signature\");\n        _approve(_msgSender(), spender, value);\n\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}",
  "sourceMap": "1355:11518:40:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Tokens/ERC20.sol",
  "type": "contract"
}