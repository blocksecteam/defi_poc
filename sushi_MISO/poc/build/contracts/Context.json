{
  "abi": [],
  "allSourcePaths": {
    "31": "contracts/OpenZeppelin/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/OpenZeppelin/utils/Context.sol",
    "exportedSymbols": {
      "Context": [
        19188
      ]
    },
    "id": 19189,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19167,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "2:23:31"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 19188,
        "linearizedBaseContracts": [
          19188
        ],
        "name": "Context",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 19175,
              "nodeType": "Block",
              "src": "629:34:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 19172,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "646:3:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 19173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "646:10:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 19171,
                  "id": 19174,
                  "nodeType": "Return",
                  "src": "639:17:31"
                }
              ]
            },
            "documentation": null,
            "id": 19176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 19168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "578:2:31"
            },
            "returnParameters": {
              "id": 19171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19170,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 19176,
                  "src": "612:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 19169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "612:15:31",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "611:17:31"
            },
            "scope": 19188,
            "src": "559:104:31",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19186,
              "nodeType": "Block",
              "src": "734:165:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 19181,
                    "name": "this",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": -28,
                    "src": "744:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Context_$19188",
                      "typeString": "contract Context"
                    }
                  },
                  "id": 19182,
                  "nodeType": "ExpressionStatement",
                  "src": "744:4:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 19183,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "884:3:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 19184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "884:8:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 19180,
                  "id": 19185,
                  "nodeType": "Return",
                  "src": "877:15:31"
                }
              ]
            },
            "documentation": null,
            "id": 19187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 19177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "686:2:31"
            },
            "returnParameters": {
              "id": 19180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19179,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 19187,
                  "src": "720:12:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 19178,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "719:14:31"
            },
            "scope": 19188,
            "src": "669:230:31",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 19189,
        "src": "527:374:31"
      }
    ],
    "src": "2:900:31"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "Context",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    527,
    901
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "6bde5508453ae054d7e40bda727d8e84a84e34c7",
  "source": "\n\npragma solidity 0.6.12;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n",
  "sourceMap": "",
  "sourcePath": "contracts/OpenZeppelin/utils/Context.sol",
  "type": "contract"
}