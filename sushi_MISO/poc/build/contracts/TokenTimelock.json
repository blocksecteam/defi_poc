{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "beneficiary_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "releaseTime_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "25": "contracts/OpenZeppelin/math/SafeMath.sol",
    "27": "contracts/OpenZeppelin/token/ERC20/SafeERC20.sol",
    "28": "contracts/OpenZeppelin/token/ERC20/TokenTimelock.sol",
    "29": "contracts/OpenZeppelin/utils/Address.sol",
    "78": "contracts/interfaces/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/OpenZeppelin/token/ERC20/TokenTimelock.sol",
    "exportedSymbols": {
      "TokenTimelock": [
        18784
      ]
    },
    "id": 18785,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 18675,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "2:23:28"
      },
      {
        "absolutePath": "contracts/OpenZeppelin/token/ERC20/SafeERC20.sol",
        "file": "./SafeERC20.sol",
        "id": 18676,
        "nodeType": "ImportDirective",
        "scope": 18785,
        "sourceUnit": 18674,
        "src": "27:25:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 18677,
          "nodeType": "StructuredDocumentation",
          "src": "54:221:28",
          "text": " @dev A token holder contract that will allow a beneficiary to extract the\n tokens after a given release time.\n Useful for simple vesting schedules like \"advisors get all of their tokens\n after 1 year\"."
        },
        "fullyImplemented": true,
        "id": 18784,
        "linearizedBaseContracts": [
          18784
        ],
        "name": "TokenTimelock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 18680,
            "libraryName": {
              "contractScope": null,
              "id": 18678,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18673,
              "src": "311:9:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$18673",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "305:27:28",
            "typeName": {
              "contractScope": null,
              "id": 18679,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30869,
              "src": "325:6:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$30869",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 18682,
            "mutability": "mutable",
            "name": "_token",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 18784,
            "src": "383:21:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$30869",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 18681,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 30869,
              "src": "383:6:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$30869",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 18684,
            "mutability": "mutable",
            "name": "_beneficiary",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 18784,
            "src": "464:28:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 18683,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "464:7:28",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 18686,
            "mutability": "mutable",
            "name": "_releaseTime",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 18784,
            "src": "546:28:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18685,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "546:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 18715,
              "nodeType": "Block",
              "src": "660:263:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 18699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 18696,
                          "name": "releaseTime_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18692,
                          "src": "732:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 18697,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "747:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 18698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "747:15:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "732:30:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206265666f72652063757272656e742074696d65",
                        "id": 18700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "764:52:28",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        },
                        "value": "TokenTimelock: release time is before current time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        }
                      ],
                      "id": 18695,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "724:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "724:93:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18702,
                  "nodeType": "ExpressionStatement",
                  "src": "724:93:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 18705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 18703,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18682,
                      "src": "827:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$30869",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 18704,
                      "name": "token_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18688,
                      "src": "836:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$30869",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "827:15:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$30869",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 18706,
                  "nodeType": "ExpressionStatement",
                  "src": "827:15:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 18709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 18707,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18684,
                      "src": "852:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 18708,
                      "name": "beneficiary_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18690,
                      "src": "867:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "852:27:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 18710,
                  "nodeType": "ExpressionStatement",
                  "src": "852:27:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 18713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 18711,
                      "name": "_releaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18686,
                      "src": "889:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 18712,
                      "name": "releaseTime_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18692,
                      "src": "904:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "889:27:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18714,
                  "nodeType": "ExpressionStatement",
                  "src": "889:27:28"
                }
              ]
            },
            "documentation": null,
            "id": 18716,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 18693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18688,
                  "mutability": "mutable",
                  "name": "token_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18716,
                  "src": "594:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$30869",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 18687,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 30869,
                    "src": "594:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$30869",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18690,
                  "mutability": "mutable",
                  "name": "beneficiary_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18716,
                  "src": "609:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18689,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "609:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18692,
                  "mutability": "mutable",
                  "name": "releaseTime_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18716,
                  "src": "631:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18691,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "631:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "593:59:28"
            },
            "returnParameters": {
              "id": 18694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "660:0:28"
            },
            "scope": 18784,
            "src": "581:342:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18724,
              "nodeType": "Block",
              "src": "1036:30:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 18722,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18682,
                    "src": "1053:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$30869",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 18721,
                  "id": 18723,
                  "nodeType": "Return",
                  "src": "1046:13:28"
                }
              ]
            },
            "documentation": {
              "id": 18717,
              "nodeType": "StructuredDocumentation",
              "src": "929:48:28",
              "text": " @return the token being held."
            },
            "functionSelector": "fc0c546a",
            "id": 18725,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "token",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 18718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "996:2:28"
            },
            "returnParameters": {
              "id": 18721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18720,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18725,
                  "src": "1028:6:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$30869",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 18719,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 30869,
                    "src": "1028:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$30869",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1027:8:28"
            },
            "scope": 18784,
            "src": "982:84:28",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18733,
              "nodeType": "Block",
              "src": "1195:36:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 18731,
                    "name": "_beneficiary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18684,
                    "src": "1212:12:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 18730,
                  "id": 18732,
                  "nodeType": "Return",
                  "src": "1205:19:28"
                }
              ]
            },
            "documentation": {
              "id": 18726,
              "nodeType": "StructuredDocumentation",
              "src": "1072:57:28",
              "text": " @return the beneficiary of the tokens."
            },
            "functionSelector": "38af3eed",
            "id": 18734,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiary",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 18727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1154:2:28"
            },
            "returnParameters": {
              "id": 18730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18729,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18734,
                  "src": "1186:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1186:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1185:9:28"
            },
            "scope": 18784,
            "src": "1134:97:28",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18742,
              "nodeType": "Block",
              "src": "1368:36:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 18740,
                    "name": "_releaseTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18686,
                    "src": "1385:12:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 18739,
                  "id": 18741,
                  "nodeType": "Return",
                  "src": "1378:19:28"
                }
              ]
            },
            "documentation": {
              "id": 18735,
              "nodeType": "StructuredDocumentation",
              "src": "1237:65:28",
              "text": " @return the time when the tokens are released."
            },
            "functionSelector": "b91d4001",
            "id": 18743,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseTime",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 18736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1327:2:28"
            },
            "returnParameters": {
              "id": 18739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18738,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18743,
                  "src": "1359:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18737,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1359:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1358:9:28"
            },
            "scope": 18784,
            "src": "1307:97:28",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18782,
              "nodeType": "Block",
              "src": "1525:348:28",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 18752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 18748,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1597:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 18749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1597:15:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 18750,
                            "name": "releaseTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18743,
                            "src": "1616:11:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 18751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1616:13:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1597:32:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206265666f72652072656c656173652074696d65",
                        "id": 18753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1631:52:28",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        },
                        "value": "TokenTimelock: current time is before release time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        }
                      ],
                      "id": 18747,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1589:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1589:95:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18755,
                  "nodeType": "ExpressionStatement",
                  "src": "1589:95:28"
                },
                {
                  "assignments": [
                    18757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18757,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 18782,
                      "src": "1695:14:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 18756,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1695:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 18766,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 18763,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1738:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenTimelock_$18784",
                              "typeString": "contract TokenTimelock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenTimelock_$18784",
                              "typeString": "contract TokenTimelock"
                            }
                          ],
                          "id": 18762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1730:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18761,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1730:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 18764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1730:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 18758,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18725,
                          "src": "1712:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$30869_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 18759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1712:7:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30869",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 18760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30802,
                      "src": "1712:17:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 18765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1712:32:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1695:49:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 18770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 18768,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18757,
                          "src": "1762:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 18769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1771:1:28",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1762:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c65617365",
                        "id": 18771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1774:37:28",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        },
                        "value": "TokenTimelock: no tokens to release"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        }
                      ],
                      "id": 18767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1754:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1754:58:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18773,
                  "nodeType": "ExpressionStatement",
                  "src": "1754:58:28"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 18777,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18734,
                          "src": "1844:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 18778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1844:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 18779,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18757,
                        "src": "1859:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 18774,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18725,
                          "src": "1823:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$30869_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 18775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1823:7:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30869",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 18776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18496,
                      "src": "1823:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30869_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30869_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 18780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1823:43:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18781,
                  "nodeType": "ExpressionStatement",
                  "src": "1823:43:28"
                }
              ]
            },
            "documentation": {
              "id": 18744,
              "nodeType": "StructuredDocumentation",
              "src": "1410:76:28",
              "text": " @notice Transfers tokens held by timelock to beneficiary."
            },
            "functionSelector": "86d1a69f",
            "id": 18783,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "release",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 18745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1507:2:28"
            },
            "returnParameters": {
              "id": 18746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1525:0:28"
            },
            "scope": 18784,
            "src": "1491:382:28",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 18785,
        "src": "276:1599:28"
      }
    ],
    "src": "2:1874:28"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516106ea3803806106ea8339818101604052606081101561003357600080fd5b50805160208201516040909201519091904281116100825760405162461bcd60e51b81526004018080602001828103825260328152602001806106b86032913960400191505060405180910390fd5b600080546001600160a01b039485166001600160a01b03199182161790915560018054939094169216919091179091556002556105f4806100c46000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806338af3eed1461005157806386d1a69f14610075578063b91d40011461007f578063fc0c546a14610099575b600080fd5b6100596100a1565b604080516001600160a01b039092168252519081900360200190f35b61007d6100b0565b005b6100876101dd565b60408051918252519081900360200190f35b6100596101e3565b6001546001600160a01b031690565b6100b86101dd565b4210156100f65760405162461bcd60e51b815260040180806020018281038252603281526020018061051a6032913960400191505060405180910390fd5b60006101006101e3565b6001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561014c57600080fd5b505afa158015610160573d6000803e3d6000fd5b505050506040513d602081101561017657600080fd5b50519050806101b65760405162461bcd60e51b815260040180806020018281038252602381526020018061059c6023913960400191505060405180910390fd5b6101da6101c16100a1565b826101ca6101e3565b6001600160a01b031691906101f2565b50565b60025490565b6000546001600160a01b031690565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610244908490610249565b505050565b606061029e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166102fa9092919063ffffffff16565b805190915015610244578080602001905160208110156102bd57600080fd5b50516102445760405162461bcd60e51b815260040180806020018281038252602a815260200180610572602a913960400191505060405180910390fd5b60606103098484600085610313565b90505b9392505050565b6060824710156103545760405162461bcd60e51b815260040180806020018281038252602681526020018061054c6026913960400191505060405180910390fd5b61035d8561046f565b6103ae576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106103ed5780518252601f1990920191602091820191016103ce565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461044f576040519150601f19603f3d011682016040523d82523d6000602084013e610454565b606091505b5091509150610464828286610475565b979650505050505050565b3b151590565b6060831561048457508161030c565b8251156104945782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156104de5781810151838201526020016104c6565b50505050905090810190601f16801561050b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206265666f72652072656c656173652074696d65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c65617365a264697066735822122068d224c42968d97f81343a509943a7a17c2d46415756df7121a92805ebfa8ac564736f6c634300060c0033546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206265666f72652063757272656e742074696d65",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "TokenTimelock",
  "coverageMap": {
    "branches": {
      "25": {},
      "27": {
        "SafeERC20._callOptionalReturn": {
          "21": [
            3598,
            3619,
            false
          ],
          "22": [
            3727,
            3757,
            true
          ]
        }
      },
      "28": {
        "TokenTimelock.release": {
          "15": [
            1597,
            1629,
            true
          ],
          "16": [
            1762,
            1772,
            true
          ]
        }
      },
      "29": {
        "Address._verifyCallResult": {
          "19": [
            7194,
            7201,
            false
          ],
          "20": [
            7335,
            7356,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "17": [
            4727,
            4757,
            true
          ],
          "18": [
            4818,
            4836,
            true
          ]
        }
      },
      "78": {}
    },
    "statements": {
      "25": {},
      "27": {
        "SafeERC20._callOptionalReturn": {
          "7": [
            3719,
            3804
          ]
        },
        "SafeERC20.safeTransfer": {
          "6": [
            836,
            909
          ]
        }
      },
      "28": {
        "TokenTimelock.beneficiary": {
          "0": [
            1205,
            1224
          ]
        },
        "TokenTimelock.release": {
          "1": [
            1589,
            1684
          ],
          "2": [
            1754,
            1812
          ],
          "3": [
            1823,
            1866
          ]
        },
        "TokenTimelock.releaseTime": {
          "4": [
            1378,
            1397
          ]
        },
        "TokenTimelock.token": {
          "5": [
            1046,
            1059
          ]
        }
      },
      "29": {
        "Address._verifyCallResult": {
          "13": [
            7217,
            7234
          ],
          "14": [
            7725,
            7745
          ]
        },
        "Address.functionCall": {
          "8": [
            3668,
            3727
          ]
        },
        "Address.functionCallWithValue": {
          "9": [
            4719,
            4800
          ],
          "10": [
            4810,
            4870
          ],
          "11": [
            5025,
            5084
          ]
        },
        "Address.isContract": {
          "12": [
            1077,
            1092
          ]
        }
      },
      "78": {}
    }
  },
  "dependencies": [
    "Address",
    "IERC20",
    "SafeERC20",
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806338af3eed1461005157806386d1a69f14610075578063b91d40011461007f578063fc0c546a14610099575b600080fd5b6100596100a1565b604080516001600160a01b039092168252519081900360200190f35b61007d6100b0565b005b6100876101dd565b60408051918252519081900360200190f35b6100596101e3565b6001546001600160a01b031690565b6100b86101dd565b4210156100f65760405162461bcd60e51b815260040180806020018281038252603281526020018061051a6032913960400191505060405180910390fd5b60006101006101e3565b6001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561014c57600080fd5b505afa158015610160573d6000803e3d6000fd5b505050506040513d602081101561017657600080fd5b50519050806101b65760405162461bcd60e51b815260040180806020018281038252602381526020018061059c6023913960400191505060405180910390fd5b6101da6101c16100a1565b826101ca6101e3565b6001600160a01b031691906101f2565b50565b60025490565b6000546001600160a01b031690565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610244908490610249565b505050565b606061029e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166102fa9092919063ffffffff16565b805190915015610244578080602001905160208110156102bd57600080fd5b50516102445760405162461bcd60e51b815260040180806020018281038252602a815260200180610572602a913960400191505060405180910390fd5b60606103098484600085610313565b90505b9392505050565b6060824710156103545760405162461bcd60e51b815260040180806020018281038252602681526020018061054c6026913960400191505060405180910390fd5b61035d8561046f565b6103ae576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106103ed5780518252601f1990920191602091820191016103ce565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461044f576040519150601f19603f3d011682016040523d82523d6000602084013e610454565b606091505b5091509150610464828286610475565b979650505050505050565b3b151590565b6060831561048457508161030c565b8251156104945782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156104de5781810151838201526020016104c6565b50505050905090810190601f16801561050b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206265666f72652072656c656173652074696d65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c65617365a264697066735822122068d224c42968d97f81343a509943a7a17c2d46415756df7121a92805ebfa8ac564736f6c634300060c0033",
  "deployedSourceMap": "276:1599:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1134:97;;;:::i;:::-;;;;-1:-1:-1;;;;;1134:97:28;;;;;;;;;;;;;;1491:382;;;:::i;:::-;;1307:97;;;:::i;:::-;;;;;;;;;;;;;;;;982:84;;;:::i;1134:97::-;1212:12;;-1:-1:-1;;;;;1212:12:28;1134:97;:::o;1491:382::-;1616:13;:11;:13::i;:::-;1597:15;:32;;1589:95;;;;-1:-1:-1;;;1589:95:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1695:14;1712:7;:5;:7::i;:::-;-1:-1:-1;;;;;1712:17:28;;1738:4;1712:32;;;;;;;;;;;;;-1:-1:-1;;;;;1712:32:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1712:32:28;;-1:-1:-1;1762:10:28;1754:58;;;;-1:-1:-1;;;1754:58:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:43;1844:13;:11;:13::i;:::-;1859:6;1823:7;:5;:7::i;:::-;-1:-1:-1;;;;;1823:20:28;;:43;:20;:43::i;:::-;1491:382;:::o;1307:97::-;1385:12;;1307:97;:::o;982:84::-;1028:6;1053;-1:-1:-1;;;;;1053:6:28;982:84;:::o;683:233:27:-;863:45;;;-1:-1:-1;;;;;863:45:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;863:45:27;-1:-1:-1;;;863:45:27;;;836:73;;856:5;;836:19;:73::i;:::-;683:233;;;:::o;3070:751::-;3489:23;3515:69;3543:4;3515:69;;;;;;;;;;;;;;;;;3523:5;-1:-1:-1;;;;;3515:27:27;;;:69;;;;;:::i;:::-;3598:17;;3489:95;;-1:-1:-1;3598:21:27;3594:221;;3738:10;3727:30;;;;;;;;;;;;;;;-1:-1:-1;3727:30:27;3719:85;;;;-1:-1:-1;;;3719:85:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3541:193:29;3644:12;3675:52;3697:6;3705:4;3711:1;3714:12;3675:21;:52::i;:::-;3668:59;;3541:193;;;;;;:::o;4568:523::-;4695:12;4752:5;4727:21;:30;;4719:81;;;;-1:-1:-1;;;4719:81:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4818:18;4829:6;4818:10;:18::i;:::-;4810:60;;;;;-1:-1:-1;;;4810:60:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;4941:12;4955:23;4982:6;-1:-1:-1;;;;;4982:11:29;5002:5;5010:4;4982:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4982:33:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4940:75;;;;5032:52;5050:7;5059:10;5071:12;5032:17;:52::i;:::-;5025:59;4568:523;-1:-1:-1;;;;;;;4568:523:29:o;686:413::-;1046:20;1084:8;;;686:413::o;7051:725::-;7166:12;7194:7;7190:580;;;-1:-1:-1;7224:10:29;7217:17;;7190:580;7335:17;;:21;7331:429;;7593:10;7587:17;7653:15;7640:10;7636:2;7632:19;7625:44;7542:145;7732:12;7725:20;;-1:-1:-1;;;7725:20:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "details": "A token holder contract that will allow a beneficiary to extract the tokens after a given release time. Useful for simple vesting schedules like \"advisors get all of their tokens after 1 year\".",
    "kind": "dev",
    "methods": {
      "beneficiary()": {
        "returns": {
          "_0": "the beneficiary of the tokens."
        }
      },
      "release()": {
        "notice": "Transfers tokens held by timelock to beneficiary."
      },
      "releaseTime()": {
        "returns": {
          "_0": "the time when the tokens are released."
        }
      },
      "token()": {
        "returns": {
          "_0": "the token being held."
        }
      }
    },
    "version": 1
  },
  "offset": [
    276,
    1875
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0xB91D4001 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x99 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xA1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x7D PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x87 PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x59 PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xB8 PUSH2 0x1DD JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x51A PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x100 PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x160 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x1B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x59C PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DA PUSH2 0x1C1 PUSH2 0xA1 JUMP JUMPDEST DUP3 PUSH2 0x1CA PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1F2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x244 SWAP1 DUP5 SWAP1 PUSH2 0x249 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x29E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2FA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x244 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x244 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x572 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x309 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x313 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x354 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x54C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35D DUP6 PUSH2 0x46F JUMP JUMPDEST PUSH2 0x3AE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x3ED JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x44F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x454 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x464 DUP3 DUP3 DUP7 PUSH2 0x475 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x484 JUMPI POP DUP2 PUSH2 0x30C JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x494 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4DE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4C6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x50B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID SLOAD PUSH16 0x6B656E54696D656C6F636B3A20637572 PUSH19 0x656E742074696D65206973206265666F726520 PUSH19 0x656C656173652074696D65416464726573733A KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F722063616C6C53616665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564546F6B656E54696D656C6F636B3A KECCAK256 PUSH15 0x6F20746F6B656E7320746F2072656C PUSH6 0x617365A26469 PUSH17 0x66735822122068D224C42968D97F81343A POP SWAP10 NUMBER 0xA7 LOG1 PUSH29 0x2D46415756DF7121A92805EBFA8AC564736F6C634300060C0033000000 ",
  "pcMap": {
    "0": {
      "offset": [
        276,
        1875
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "6": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "DUP1",
      "path": "28"
    },
    "7": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "8": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "12": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "DUP1",
      "path": "28"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "REVERT",
      "path": "28"
    },
    "16": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "17": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "POP",
      "path": "28"
    },
    "18": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "21": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "LT",
      "path": "28"
    },
    "22": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "26": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "29": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "SHR",
      "path": "28"
    },
    "32": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "DUP1",
      "path": "28"
    },
    "33": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x38AF3EED"
    },
    "38": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "EQ",
      "path": "28"
    },
    "39": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "43": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "DUP1",
      "path": "28"
    },
    "44": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x86D1A69F"
    },
    "49": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "EQ",
      "path": "28"
    },
    "50": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x75"
    },
    "53": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "54": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "DUP1",
      "path": "28"
    },
    "55": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xB91D4001"
    },
    "60": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "EQ",
      "path": "28"
    },
    "61": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7F"
    },
    "64": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "65": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "DUP1",
      "path": "28"
    },
    "66": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xFC0C546A"
    },
    "71": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "EQ",
      "path": "28"
    },
    "72": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x99"
    },
    "75": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "76": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "77": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "DUP1",
      "path": "28"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        276,
        1875
      ],
      "op": "REVERT",
      "path": "28"
    },
    "81": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "82": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x59"
    },
    "85": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA1"
    },
    "88": {
      "fn": "TokenTimelock.beneficiary",
      "jump": "i",
      "offset": [
        1134,
        1231
      ],
      "op": "JUMP",
      "path": "28"
    },
    "89": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "90": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "92": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "DUP1",
      "path": "28"
    },
    "93": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "94": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "96": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "98": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "100": {
      "op": "SHL"
    },
    "101": {
      "op": "SUB"
    },
    "102": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "103": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "104": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "AND",
      "path": "28"
    },
    "105": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "DUP3",
      "path": "28"
    },
    "106": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "107": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "108": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "109": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "DUP2",
      "path": "28"
    },
    "110": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "111": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "SUB",
      "path": "28"
    },
    "112": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "114": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "ADD",
      "path": "28"
    },
    "115": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "116": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "RETURN",
      "path": "28"
    },
    "117": {
      "fn": "TokenTimelock.release",
      "offset": [
        1491,
        1873
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "118": {
      "fn": "TokenTimelock.release",
      "offset": [
        1491,
        1873
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7D"
    },
    "121": {
      "fn": "TokenTimelock.release",
      "offset": [
        1491,
        1873
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xB0"
    },
    "124": {
      "fn": "TokenTimelock.release",
      "jump": "i",
      "offset": [
        1491,
        1873
      ],
      "op": "JUMP",
      "path": "28"
    },
    "125": {
      "fn": "TokenTimelock.release",
      "offset": [
        1491,
        1873
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "126": {
      "fn": "TokenTimelock.release",
      "offset": [
        1491,
        1873
      ],
      "op": "STOP",
      "path": "28"
    },
    "127": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1307,
        1404
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "128": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1307,
        1404
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x87"
    },
    "131": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1307,
        1404
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1DD"
    },
    "134": {
      "fn": "TokenTimelock.releaseTime",
      "jump": "i",
      "offset": [
        1307,
        1404
      ],
      "op": "JUMP",
      "path": "28"
    },
    "135": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1307,
        1404
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "136": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1307,
        1404
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "138": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1307,
        1404
      ],
      "op": "DUP1",
      "path": "28"
    },
    "139": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1307,
        1404
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "140": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1307,
        1404
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "141": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1307,
        1404
      ],
      "op": "DUP3",
      "path": "28"
    },
    "142": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1307,
        1404
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "143": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1307,
        1404
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "144": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1307,
        1404
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "145": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1307,
        1404
      ],
      "op": "DUP2",
      "path": "28"
    },
    "146": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1307,
        1404
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "147": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1307,
        1404
      ],
      "op": "SUB",
      "path": "28"
    },
    "148": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1307,
        1404
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "150": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1307,
        1404
      ],
      "op": "ADD",
      "path": "28"
    },
    "151": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1307,
        1404
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "152": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1307,
        1404
      ],
      "op": "RETURN",
      "path": "28"
    },
    "153": {
      "fn": "TokenTimelock.token",
      "offset": [
        982,
        1066
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "154": {
      "fn": "TokenTimelock.token",
      "offset": [
        982,
        1066
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x59"
    },
    "157": {
      "fn": "TokenTimelock.token",
      "offset": [
        982,
        1066
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E3"
    },
    "160": {
      "fn": "TokenTimelock.token",
      "jump": "i",
      "offset": [
        982,
        1066
      ],
      "op": "JUMP",
      "path": "28"
    },
    "161": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "162": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1212,
        1224
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 0,
      "value": "0x1"
    },
    "164": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1212,
        1224
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "171": {
      "op": "SHL"
    },
    "172": {
      "op": "SUB"
    },
    "173": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1212,
        1224
      ],
      "op": "AND",
      "path": "28"
    },
    "174": {
      "fn": "TokenTimelock.beneficiary",
      "offset": [
        1134,
        1231
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "175": {
      "fn": "TokenTimelock.beneficiary",
      "jump": "o",
      "offset": [
        1134,
        1231
      ],
      "op": "JUMP",
      "path": "28"
    },
    "176": {
      "fn": "TokenTimelock.release",
      "offset": [
        1491,
        1873
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "177": {
      "fn": "TokenTimelock.release",
      "offset": [
        1616,
        1629
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 1,
      "value": "0xB8"
    },
    "180": {
      "fn": "TokenTimelock.release",
      "offset": [
        1616,
        1627
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1DD"
    },
    "183": {
      "fn": "TokenTimelock.release",
      "jump": "i",
      "offset": [
        1616,
        1629
      ],
      "op": "JUMP",
      "path": "28"
    },
    "184": {
      "fn": "TokenTimelock.release",
      "offset": [
        1616,
        1629
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "185": {
      "fn": "TokenTimelock.release",
      "offset": [
        1597,
        1612
      ],
      "op": "TIMESTAMP",
      "path": "28"
    },
    "186": {
      "fn": "TokenTimelock.release",
      "offset": [
        1597,
        1629
      ],
      "op": "LT",
      "path": "28"
    },
    "187": {
      "branch": 15,
      "fn": "TokenTimelock.release",
      "offset": [
        1597,
        1629
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "188": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF6"
    },
    "191": {
      "branch": 15,
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "192": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "194": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "195": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "199": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "201": {
      "op": "SHL"
    },
    "202": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "DUP2",
      "path": "28"
    },
    "203": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "204": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "206": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "ADD",
      "path": "28"
    },
    "207": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "DUP1",
      "path": "28"
    },
    "208": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "DUP1",
      "path": "28"
    },
    "209": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "211": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "ADD",
      "path": "28"
    },
    "212": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "DUP3",
      "path": "28"
    },
    "213": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "DUP2",
      "path": "28"
    },
    "214": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "SUB",
      "path": "28"
    },
    "215": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "DUP3",
      "path": "28"
    },
    "216": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "217": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x32"
    },
    "219": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "DUP2",
      "path": "28"
    },
    "220": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "221": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "223": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "ADD",
      "path": "28"
    },
    "224": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "DUP1",
      "path": "28"
    },
    "225": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x51A"
    },
    "228": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x32"
    },
    "230": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "231": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "CODECOPY",
      "path": "28"
    },
    "232": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "234": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "ADD",
      "path": "28"
    },
    "235": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "236": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "POP",
      "path": "28"
    },
    "237": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "POP",
      "path": "28"
    },
    "238": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "240": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "241": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "DUP1",
      "path": "28"
    },
    "242": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "243": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "SUB",
      "path": "28"
    },
    "244": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "245": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "REVERT",
      "path": "28"
    },
    "246": {
      "fn": "TokenTimelock.release",
      "offset": [
        1589,
        1684
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "247": {
      "fn": "TokenTimelock.release",
      "offset": [
        1695,
        1709
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "249": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1719
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x100"
    },
    "252": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1717
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E3"
    },
    "255": {
      "fn": "TokenTimelock.release",
      "jump": "i",
      "offset": [
        1712,
        1719
      ],
      "op": "JUMP",
      "path": "28"
    },
    "256": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1719
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "263": {
      "op": "SHL"
    },
    "264": {
      "op": "SUB"
    },
    "265": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1729
      ],
      "op": "AND",
      "path": "28"
    },
    "266": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1729
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x70A08231"
    },
    "271": {
      "fn": "TokenTimelock.release",
      "offset": [
        1738,
        1742
      ],
      "op": "ADDRESS",
      "path": "28"
    },
    "272": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "274": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "275": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "DUP3",
      "path": "28"
    },
    "276": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xFFFFFFFF"
    },
    "281": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "AND",
      "path": "28"
    },
    "282": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xE0"
    },
    "284": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "SHL",
      "path": "28"
    },
    "285": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "DUP2",
      "path": "28"
    },
    "286": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "287": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "289": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "ADD",
      "path": "28"
    },
    "290": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "DUP1",
      "path": "28"
    },
    "291": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "DUP3",
      "path": "28"
    },
    "292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "298": {
      "op": "SHL"
    },
    "299": {
      "op": "SUB"
    },
    "300": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "AND",
      "path": "28"
    },
    "301": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "DUP2",
      "path": "28"
    },
    "302": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "303": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "305": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "ADD",
      "path": "28"
    },
    "306": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "307": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "POP",
      "path": "28"
    },
    "308": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "POP",
      "path": "28"
    },
    "309": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "311": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "313": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "314": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "DUP1",
      "path": "28"
    },
    "315": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "DUP4",
      "path": "28"
    },
    "316": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "SUB",
      "path": "28"
    },
    "317": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "DUP2",
      "path": "28"
    },
    "318": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "DUP7",
      "path": "28"
    },
    "319": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "DUP1",
      "path": "28"
    },
    "320": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "EXTCODESIZE",
      "path": "28"
    },
    "321": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "322": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "DUP1",
      "path": "28"
    },
    "323": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "324": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x14C"
    },
    "327": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "328": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "330": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "DUP1",
      "path": "28"
    },
    "331": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "REVERT",
      "path": "28"
    },
    "332": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "333": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "POP",
      "path": "28"
    },
    "334": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "GAS",
      "path": "28"
    },
    "335": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "STATICCALL",
      "path": "28"
    },
    "336": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "337": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "DUP1",
      "path": "28"
    },
    "338": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "339": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x160"
    },
    "342": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "343": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "344": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "346": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "DUP1",
      "path": "28"
    },
    "347": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "RETURNDATACOPY",
      "path": "28"
    },
    "348": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "349": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "351": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "REVERT",
      "path": "28"
    },
    "352": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "353": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "POP",
      "path": "28"
    },
    "354": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "POP",
      "path": "28"
    },
    "355": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "POP",
      "path": "28"
    },
    "356": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "POP",
      "path": "28"
    },
    "357": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "359": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "360": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "RETURNDATASIZE",
      "path": "28"
    },
    "361": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "363": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "DUP2",
      "path": "28"
    },
    "364": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "LT",
      "path": "28"
    },
    "365": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "366": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x176"
    },
    "369": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "370": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "372": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "DUP1",
      "path": "28"
    },
    "373": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "REVERT",
      "path": "28"
    },
    "374": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "375": {
      "op": "POP"
    },
    "376": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "377": {
      "fn": "TokenTimelock.release",
      "offset": [
        1712,
        1744
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "378": {
      "op": "POP"
    },
    "379": {
      "branch": 16,
      "fn": "TokenTimelock.release",
      "offset": [
        1762,
        1772
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 2
    },
    "380": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1B6"
    },
    "383": {
      "branch": 16,
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "384": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "386": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "387": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "391": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "393": {
      "op": "SHL"
    },
    "394": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "DUP2",
      "path": "28"
    },
    "395": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "396": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "398": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "ADD",
      "path": "28"
    },
    "399": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "DUP1",
      "path": "28"
    },
    "400": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "DUP1",
      "path": "28"
    },
    "401": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "403": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "ADD",
      "path": "28"
    },
    "404": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "DUP3",
      "path": "28"
    },
    "405": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "DUP2",
      "path": "28"
    },
    "406": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "SUB",
      "path": "28"
    },
    "407": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "DUP3",
      "path": "28"
    },
    "408": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "409": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x23"
    },
    "411": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "DUP2",
      "path": "28"
    },
    "412": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "413": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "415": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "ADD",
      "path": "28"
    },
    "416": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "DUP1",
      "path": "28"
    },
    "417": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x59C"
    },
    "420": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x23"
    },
    "422": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "423": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "CODECOPY",
      "path": "28"
    },
    "424": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "426": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "ADD",
      "path": "28"
    },
    "427": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "428": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "POP",
      "path": "28"
    },
    "429": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "POP",
      "path": "28"
    },
    "430": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "432": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "433": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "DUP1",
      "path": "28"
    },
    "434": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "435": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "SUB",
      "path": "28"
    },
    "436": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "437": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "REVERT",
      "path": "28"
    },
    "438": {
      "fn": "TokenTimelock.release",
      "offset": [
        1754,
        1812
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "439": {
      "fn": "TokenTimelock.release",
      "offset": [
        1823,
        1866
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 3,
      "value": "0x1DA"
    },
    "442": {
      "fn": "TokenTimelock.release",
      "offset": [
        1844,
        1857
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C1"
    },
    "445": {
      "fn": "TokenTimelock.release",
      "offset": [
        1844,
        1855
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA1"
    },
    "448": {
      "fn": "TokenTimelock.release",
      "jump": "i",
      "offset": [
        1844,
        1857
      ],
      "op": "JUMP",
      "path": "28"
    },
    "449": {
      "fn": "TokenTimelock.release",
      "offset": [
        1844,
        1857
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "450": {
      "fn": "TokenTimelock.release",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP3",
      "path": "28"
    },
    "451": {
      "fn": "TokenTimelock.release",
      "offset": [
        1823,
        1830
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CA"
    },
    "454": {
      "fn": "TokenTimelock.release",
      "offset": [
        1823,
        1828
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1E3"
    },
    "457": {
      "fn": "TokenTimelock.release",
      "jump": "i",
      "offset": [
        1823,
        1830
      ],
      "op": "JUMP",
      "path": "28"
    },
    "458": {
      "fn": "TokenTimelock.release",
      "offset": [
        1823,
        1830
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "465": {
      "op": "SHL"
    },
    "466": {
      "op": "SUB"
    },
    "467": {
      "fn": "TokenTimelock.release",
      "offset": [
        1823,
        1843
      ],
      "op": "AND",
      "path": "28"
    },
    "468": {
      "fn": "TokenTimelock.release",
      "offset": [
        1823,
        1843
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "469": {
      "fn": "TokenTimelock.release",
      "offset": [
        1823,
        1866
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "470": {
      "fn": "TokenTimelock.release",
      "offset": [
        1823,
        1843
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1F2"
    },
    "473": {
      "fn": "TokenTimelock.release",
      "jump": "i",
      "offset": [
        1823,
        1866
      ],
      "op": "JUMP",
      "path": "28"
    },
    "474": {
      "fn": "TokenTimelock.release",
      "offset": [
        1823,
        1866
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "475": {
      "fn": "TokenTimelock.release",
      "offset": [
        1491,
        1873
      ],
      "op": "POP",
      "path": "28"
    },
    "476": {
      "fn": "TokenTimelock.release",
      "jump": "o",
      "offset": [
        1491,
        1873
      ],
      "op": "JUMP",
      "path": "28"
    },
    "477": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1307,
        1404
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "478": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1385,
        1397
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 4,
      "value": "0x2"
    },
    "480": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1385,
        1397
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "481": {
      "fn": "TokenTimelock.releaseTime",
      "offset": [
        1307,
        1404
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "482": {
      "fn": "TokenTimelock.releaseTime",
      "jump": "o",
      "offset": [
        1307,
        1404
      ],
      "op": "JUMP",
      "path": "28"
    },
    "483": {
      "fn": "TokenTimelock.token",
      "offset": [
        982,
        1066
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "484": {
      "fn": "TokenTimelock.token",
      "offset": [
        1028,
        1034
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "486": {
      "fn": "TokenTimelock.token",
      "offset": [
        1053,
        1059
      ],
      "op": "SLOAD",
      "path": "28",
      "statement": 5
    },
    "487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "493": {
      "op": "SHL"
    },
    "494": {
      "op": "SUB"
    },
    "495": {
      "fn": "TokenTimelock.token",
      "offset": [
        1053,
        1059
      ],
      "op": "AND",
      "path": "28"
    },
    "496": {
      "fn": "TokenTimelock.token",
      "offset": [
        982,
        1066
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "497": {
      "fn": "TokenTimelock.token",
      "jump": "o",
      "offset": [
        982,
        1066
      ],
      "op": "JUMP",
      "path": "28"
    },
    "498": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        683,
        916
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "499": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 6,
      "value": "0x40"
    },
    "501": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "DUP1",
      "path": "27"
    },
    "502": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "509": {
      "op": "SHL"
    },
    "510": {
      "op": "SUB"
    },
    "511": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "DUP5",
      "path": "27"
    },
    "512": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "AND",
      "path": "27"
    },
    "513": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x24"
    },
    "515": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "DUP3",
      "path": "27"
    },
    "516": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "ADD",
      "path": "27"
    },
    "517": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "518": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x44"
    },
    "520": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "DUP1",
      "path": "27"
    },
    "521": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "DUP3",
      "path": "27"
    },
    "522": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "ADD",
      "path": "27"
    },
    "523": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "DUP5",
      "path": "27"
    },
    "524": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "525": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "526": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "DUP3",
      "path": "27"
    },
    "527": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "528": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "DUP1",
      "path": "27"
    },
    "529": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "DUP4",
      "path": "27"
    },
    "530": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "SUB",
      "path": "27"
    },
    "531": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "532": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "533": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "ADD",
      "path": "27"
    },
    "534": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "DUP2",
      "path": "27"
    },
    "535": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "536": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x64"
    },
    "538": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "539": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "540": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "ADD",
      "path": "27"
    },
    "541": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "542": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "543": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "544": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "546": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "DUP2",
      "path": "27"
    },
    "547": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "ADD",
      "path": "27"
    },
    "548": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "DUP1",
      "path": "27"
    },
    "549": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "554": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "556": {
      "op": "SHL"
    },
    "557": {
      "op": "SUB"
    },
    "558": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "AND",
      "path": "27"
    },
    "559": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "564": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "566": {
      "op": "SHL"
    },
    "567": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "OR",
      "path": "27"
    },
    "568": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "569": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        908
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "570": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        909
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x244"
    },
    "573": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        909
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "574": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        856,
        861
      ],
      "op": "DUP5",
      "path": "27"
    },
    "575": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        856,
        861
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "576": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        855
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x249"
    },
    "579": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        836,
        909
      ],
      "op": "JUMP",
      "path": "27"
    },
    "580": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        836,
        909
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "581": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        683,
        916
      ],
      "op": "POP",
      "path": "27"
    },
    "582": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        683,
        916
      ],
      "op": "POP",
      "path": "27"
    },
    "583": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        683,
        916
      ],
      "op": "POP",
      "path": "27"
    },
    "584": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        683,
        916
      ],
      "op": "JUMP",
      "path": "27"
    },
    "585": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3070,
        3821
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "586": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3489,
        3512
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "588": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x29E"
    },
    "591": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3543,
        3547
      ],
      "op": "DUP3",
      "path": "27"
    },
    "592": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "594": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "595": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "DUP1",
      "path": "27"
    },
    "596": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "598": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "ADD",
      "path": "27"
    },
    "599": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "601": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "602": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "DUP1",
      "path": "27"
    },
    "603": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "605": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "DUP2",
      "path": "27"
    },
    "606": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "607": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "609": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "ADD",
      "path": "27"
    },
    "610": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "643": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "DUP2",
      "path": "27"
    },
    "644": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "645": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "POP",
      "path": "27"
    },
    "646": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3523,
        3528
      ],
      "op": "DUP6",
      "path": "27"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "653": {
      "op": "SHL"
    },
    "654": {
      "op": "SUB"
    },
    "655": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3542
      ],
      "op": "AND",
      "path": "27"
    },
    "656": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3542
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2FA"
    },
    "659": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3542
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "660": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "661": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "662": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "663": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xFFFFFFFF"
    },
    "668": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "AND",
      "path": "27"
    },
    "669": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3515,
        3584
      ],
      "op": "JUMP",
      "path": "27"
    },
    "670": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3515,
        3584
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "671": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3598,
        3615
      ],
      "op": "DUP1",
      "path": "27"
    },
    "672": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3598,
        3615
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "673": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3489,
        3584
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "674": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3489,
        3584
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "675": {
      "op": "POP"
    },
    "676": {
      "branch": 21,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3598,
        3619
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "677": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3594,
        3815
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x244"
    },
    "680": {
      "branch": 21,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3594,
        3815
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "681": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3738,
        3748
      ],
      "op": "DUP1",
      "path": "27",
      "statement": 7
    },
    "682": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3727,
        3757
      ],
      "op": "DUP1",
      "path": "27"
    },
    "683": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3727,
        3757
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "685": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3727,
        3757
      ],
      "op": "ADD",
      "path": "27"
    },
    "686": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3727,
        3757
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "687": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3727,
        3757
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "688": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3727,
        3757
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "690": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3727,
        3757
      ],
      "op": "DUP2",
      "path": "27"
    },
    "691": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3727,
        3757
      ],
      "op": "LT",
      "path": "27"
    },
    "692": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3727,
        3757
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "693": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3727,
        3757
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2BD"
    },
    "696": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3727,
        3757
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "697": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3727,
        3757
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "699": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3727,
        3757
      ],
      "op": "DUP1",
      "path": "27"
    },
    "700": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3727,
        3757
      ],
      "op": "REVERT",
      "path": "27"
    },
    "701": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3727,
        3757
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "702": {
      "op": "POP"
    },
    "703": {
      "branch": 22,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3727,
        3757
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "704": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x244"
    },
    "707": {
      "branch": 22,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "708": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "710": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "711": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "715": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "717": {
      "op": "SHL"
    },
    "718": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "DUP2",
      "path": "27"
    },
    "719": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "720": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "722": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "ADD",
      "path": "27"
    },
    "723": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "DUP1",
      "path": "27"
    },
    "724": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "DUP1",
      "path": "27"
    },
    "725": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "727": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "ADD",
      "path": "27"
    },
    "728": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "DUP3",
      "path": "27"
    },
    "729": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "DUP2",
      "path": "27"
    },
    "730": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "SUB",
      "path": "27"
    },
    "731": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "DUP3",
      "path": "27"
    },
    "732": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "733": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2A"
    },
    "735": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "DUP2",
      "path": "27"
    },
    "736": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "737": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "739": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "ADD",
      "path": "27"
    },
    "740": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "DUP1",
      "path": "27"
    },
    "741": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x572"
    },
    "744": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2A"
    },
    "746": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "747": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "CODECOPY",
      "path": "27"
    },
    "748": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "750": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "ADD",
      "path": "27"
    },
    "751": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "752": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "POP",
      "path": "27"
    },
    "753": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "POP",
      "path": "27"
    },
    "754": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "756": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "757": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "DUP1",
      "path": "27"
    },
    "758": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "759": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "SUB",
      "path": "27"
    },
    "760": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "761": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3719,
        3804
      ],
      "op": "REVERT",
      "path": "27"
    },
    "762": {
      "fn": "Address.functionCall",
      "offset": [
        3541,
        3734
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "763": {
      "fn": "Address.functionCall",
      "offset": [
        3644,
        3656
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "765": {
      "fn": "Address.functionCall",
      "offset": [
        3675,
        3727
      ],
      "op": "PUSH2",
      "path": "29",
      "statement": 8,
      "value": "0x309"
    },
    "768": {
      "fn": "Address.functionCall",
      "offset": [
        3697,
        3703
      ],
      "op": "DUP5",
      "path": "29"
    },
    "769": {
      "fn": "Address.functionCall",
      "offset": [
        3705,
        3709
      ],
      "op": "DUP5",
      "path": "29"
    },
    "770": {
      "fn": "Address.functionCall",
      "offset": [
        3711,
        3712
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "772": {
      "fn": "Address.functionCall",
      "offset": [
        3714,
        3726
      ],
      "op": "DUP6",
      "path": "29"
    },
    "773": {
      "fn": "Address.functionCall",
      "offset": [
        3675,
        3696
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x313"
    },
    "776": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3675,
        3727
      ],
      "op": "JUMP",
      "path": "29"
    },
    "777": {
      "fn": "Address.functionCall",
      "offset": [
        3675,
        3727
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "778": {
      "fn": "Address.functionCall",
      "offset": [
        3668,
        3727
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "779": {
      "fn": "Address.functionCall",
      "offset": [
        3668,
        3727
      ],
      "op": "POP",
      "path": "29"
    },
    "780": {
      "fn": "Address.functionCall",
      "offset": [
        3541,
        3734
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "781": {
      "fn": "Address.functionCall",
      "offset": [
        3541,
        3734
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "782": {
      "fn": "Address.functionCall",
      "offset": [
        3541,
        3734
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "783": {
      "fn": "Address.functionCall",
      "offset": [
        3541,
        3734
      ],
      "op": "POP",
      "path": "29"
    },
    "784": {
      "fn": "Address.functionCall",
      "offset": [
        3541,
        3734
      ],
      "op": "POP",
      "path": "29"
    },
    "785": {
      "fn": "Address.functionCall",
      "offset": [
        3541,
        3734
      ],
      "op": "POP",
      "path": "29"
    },
    "786": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3541,
        3734
      ],
      "op": "JUMP",
      "path": "29"
    },
    "787": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4568,
        5091
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "788": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4695,
        4707
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "790": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4752,
        4757
      ],
      "op": "DUP3",
      "path": "29",
      "statement": 9
    },
    "791": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4727,
        4748
      ],
      "op": "SELFBALANCE",
      "path": "29"
    },
    "792": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4727,
        4757
      ],
      "op": "LT",
      "path": "29"
    },
    "793": {
      "branch": 17,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4727,
        4757
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "794": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x354"
    },
    "797": {
      "branch": 17,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "798": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "800": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "801": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "805": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "807": {
      "op": "SHL"
    },
    "808": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "DUP2",
      "path": "29"
    },
    "809": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "810": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "812": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "ADD",
      "path": "29"
    },
    "813": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "DUP1",
      "path": "29"
    },
    "814": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "DUP1",
      "path": "29"
    },
    "815": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "817": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "ADD",
      "path": "29"
    },
    "818": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "DUP3",
      "path": "29"
    },
    "819": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "DUP2",
      "path": "29"
    },
    "820": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "SUB",
      "path": "29"
    },
    "821": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "DUP3",
      "path": "29"
    },
    "822": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "823": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x26"
    },
    "825": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "DUP2",
      "path": "29"
    },
    "826": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "827": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "829": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "ADD",
      "path": "29"
    },
    "830": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "DUP1",
      "path": "29"
    },
    "831": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x54C"
    },
    "834": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x26"
    },
    "836": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "837": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "CODECOPY",
      "path": "29"
    },
    "838": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "840": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "ADD",
      "path": "29"
    },
    "841": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "842": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "POP",
      "path": "29"
    },
    "843": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "POP",
      "path": "29"
    },
    "844": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "846": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "847": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "DUP1",
      "path": "29"
    },
    "848": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "849": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "SUB",
      "path": "29"
    },
    "850": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "851": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "REVERT",
      "path": "29"
    },
    "852": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4719,
        4800
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "853": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4818,
        4836
      ],
      "op": "PUSH2",
      "path": "29",
      "statement": 10,
      "value": "0x35D"
    },
    "856": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4829,
        4835
      ],
      "op": "DUP6",
      "path": "29"
    },
    "857": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4818,
        4828
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x46F"
    },
    "860": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4818,
        4836
      ],
      "op": "JUMP",
      "path": "29"
    },
    "861": {
      "branch": 18,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4818,
        4836
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "862": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3AE"
    },
    "865": {
      "branch": 18,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "866": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "868": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "DUP1",
      "path": "29"
    },
    "869": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "870": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "874": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "876": {
      "op": "SHL"
    },
    "877": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "DUP2",
      "path": "29"
    },
    "878": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "879": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "881": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "883": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "DUP3",
      "path": "29"
    },
    "884": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "ADD",
      "path": "29"
    },
    "885": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "886": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1D"
    },
    "888": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "890": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "DUP3",
      "path": "29"
    },
    "891": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "ADD",
      "path": "29"
    },
    "892": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "893": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "926": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x44"
    },
    "928": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "DUP3",
      "path": "29"
    },
    "929": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "ADD",
      "path": "29"
    },
    "930": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "931": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "932": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "933": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "934": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "DUP2",
      "path": "29"
    },
    "935": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "936": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "SUB",
      "path": "29"
    },
    "937": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x64"
    },
    "939": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "ADD",
      "path": "29"
    },
    "940": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "941": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "REVERT",
      "path": "29"
    },
    "942": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4810,
        4870
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "943": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4953
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "945": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4955,
        4978
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "947": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        4988
      ],
      "op": "DUP7",
      "path": "29"
    },
    "948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "954": {
      "op": "SHL"
    },
    "955": {
      "op": "SUB"
    },
    "956": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        4993
      ],
      "op": "AND",
      "path": "29"
    },
    "957": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5002,
        5007
      ],
      "op": "DUP6",
      "path": "29"
    },
    "958": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5010,
        5014
      ],
      "op": "DUP8",
      "path": "29"
    },
    "959": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "961": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "962": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP1",
      "path": "29"
    },
    "963": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP3",
      "path": "29"
    },
    "964": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP1",
      "path": "29"
    },
    "965": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "966": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "967": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "969": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "ADD",
      "path": "29"
    },
    "970": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "971": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP1",
      "path": "29"
    },
    "972": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP4",
      "path": "29"
    },
    "973": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP4",
      "path": "29"
    },
    "974": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "975": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "977": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP4",
      "path": "29"
    },
    "978": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "LT",
      "path": "29"
    },
    "979": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3ED"
    },
    "982": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "983": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP1",
      "path": "29"
    },
    "984": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "985": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP3",
      "path": "29"
    },
    "986": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "989": {
      "op": "NOT"
    },
    "990": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "991": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "992": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "ADD",
      "path": "29"
    },
    "993": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "994": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "996": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "997": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP3",
      "path": "29"
    },
    "998": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "ADD",
      "path": "29"
    },
    "999": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1000": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "ADD",
      "path": "29"
    },
    "1001": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3CE"
    },
    "1004": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1005": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1006": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "1008": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1009": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1011": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "SUB",
      "path": "29"
    },
    "1012": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x100"
    },
    "1015": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "EXP",
      "path": "29"
    },
    "1016": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "SUB",
      "path": "29"
    },
    "1017": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1018": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "NOT",
      "path": "29"
    },
    "1019": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1020": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1021": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "AND",
      "path": "29"
    },
    "1022": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1023": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1024": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1025": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "AND",
      "path": "29"
    },
    "1026": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1027": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1028": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "OR",
      "path": "29"
    },
    "1029": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP6",
      "path": "29"
    },
    "1030": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1031": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "POP",
      "path": "29"
    },
    "1032": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "POP",
      "path": "29"
    },
    "1033": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "POP",
      "path": "29"
    },
    "1034": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "POP",
      "path": "29"
    },
    "1035": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "POP",
      "path": "29"
    },
    "1036": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "POP",
      "path": "29"
    },
    "1037": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1038": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "POP",
      "path": "29"
    },
    "1039": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "ADD",
      "path": "29"
    },
    "1040": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1041": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "POP",
      "path": "29"
    },
    "1042": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "POP",
      "path": "29"
    },
    "1043": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1045": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1047": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1048": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1049": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1050": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "SUB",
      "path": "29"
    },
    "1051": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1052": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP6",
      "path": "29"
    },
    "1053": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP8",
      "path": "29"
    },
    "1054": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "GAS",
      "path": "29"
    },
    "1055": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "CALL",
      "path": "29"
    },
    "1056": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1057": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "POP",
      "path": "29"
    },
    "1058": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "POP",
      "path": "29"
    },
    "1059": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "POP",
      "path": "29"
    },
    "1060": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "1061": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1062": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1064": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1065": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "EQ",
      "path": "29"
    },
    "1066": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x44F"
    },
    "1069": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1070": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1072": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1073": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1074": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "POP",
      "path": "29"
    },
    "1075": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "1077": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "NOT",
      "path": "29"
    },
    "1078": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x3F"
    },
    "1080": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "1081": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "ADD",
      "path": "29"
    },
    "1082": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "AND",
      "path": "29"
    },
    "1083": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1084": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "ADD",
      "path": "29"
    },
    "1085": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1087": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1088": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "1089": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1090": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1091": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "1092": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1094": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1096": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1097": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "ADD",
      "path": "29"
    },
    "1098": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "1099": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x454"
    },
    "1102": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1103": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1104": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "1106": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1107": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "POP",
      "path": "29"
    },
    "1108": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1109": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5015
      ],
      "op": "POP",
      "path": "29"
    },
    "1110": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4940,
        5015
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1111": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4940,
        5015
      ],
      "op": "POP",
      "path": "29"
    },
    "1112": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4940,
        5015
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1113": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4940,
        5015
      ],
      "op": "POP",
      "path": "29"
    },
    "1114": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5032,
        5084
      ],
      "op": "PUSH2",
      "path": "29",
      "statement": 11,
      "value": "0x464"
    },
    "1117": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5050,
        5057
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1118": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5059,
        5069
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1119": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5071,
        5083
      ],
      "op": "DUP7",
      "path": "29"
    },
    "1120": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5032,
        5049
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x475"
    },
    "1123": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5032,
        5084
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1124": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5032,
        5084
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1125": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5025,
        5084
      ],
      "op": "SWAP8",
      "path": "29"
    },
    "1126": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4568,
        5091
      ],
      "op": "SWAP7",
      "path": "29"
    },
    "1127": {
      "op": "POP"
    },
    "1128": {
      "op": "POP"
    },
    "1129": {
      "op": "POP"
    },
    "1130": {
      "op": "POP"
    },
    "1131": {
      "op": "POP"
    },
    "1132": {
      "op": "POP"
    },
    "1133": {
      "op": "POP"
    },
    "1134": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4568,
        5091
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1135": {
      "fn": "Address.isContract",
      "offset": [
        686,
        1099
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1136": {
      "fn": "Address.isContract",
      "offset": [
        1046,
        1066
      ],
      "op": "EXTCODESIZE",
      "path": "29"
    },
    "1137": {
      "fn": "Address.isContract",
      "offset": [
        1084,
        1092
      ],
      "op": "ISZERO",
      "path": "29",
      "statement": 12
    },
    "1138": {
      "fn": "Address.isContract",
      "offset": [
        1084,
        1092
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1139": {
      "fn": "Address.isContract",
      "offset": [
        1084,
        1092
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1140": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        686,
        1099
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1141": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7051,
        7776
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1142": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7166,
        7178
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "1144": {
      "branch": 19,
      "fn": "Address._verifyCallResult",
      "offset": [
        7194,
        7201
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1145": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7190,
        7770
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1146": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7190,
        7770
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x484"
    },
    "1149": {
      "branch": 19,
      "fn": "Address._verifyCallResult",
      "offset": [
        7190,
        7770
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1150": {
      "op": "POP"
    },
    "1151": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7224,
        7234
      ],
      "op": "DUP2",
      "path": "29",
      "statement": 13
    },
    "1152": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7217,
        7234
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x30C"
    },
    "1155": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7217,
        7234
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1156": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7190,
        7770
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1157": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7335,
        7352
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1158": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7335,
        7352
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1159": {
      "branch": 20,
      "fn": "Address._verifyCallResult",
      "offset": [
        7335,
        7356
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1160": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7331,
        7760
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x494"
    },
    "1163": {
      "branch": 20,
      "fn": "Address._verifyCallResult",
      "offset": [
        7331,
        7760
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1164": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7593,
        7603
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1165": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7587,
        7604
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1166": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7653,
        7668
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1167": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7640,
        7650
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1168": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7636,
        7638
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1170": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7632,
        7651
      ],
      "op": "ADD",
      "path": "29"
    },
    "1171": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7625,
        7669
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1172": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7542,
        7687
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1173": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7732,
        7744
      ],
      "op": "DUP2",
      "path": "29",
      "statement": 14
    },
    "1174": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1176": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1177": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1183": {
      "op": "SHL"
    },
    "1184": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1185": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1186": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1188": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "ADD",
      "path": "29"
    },
    "1189": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1190": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1191": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1193": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "ADD",
      "path": "29"
    },
    "1194": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1195": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1196": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "SUB",
      "path": "29"
    },
    "1197": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1198": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1199": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1200": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1201": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1202": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1203": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1204": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1205": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1207": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "ADD",
      "path": "29"
    },
    "1208": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1209": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "POP",
      "path": "29"
    },
    "1210": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1211": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1212": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1213": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1215": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "ADD",
      "path": "29"
    },
    "1216": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1217": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1218": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1219": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1220": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1222": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1223": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1224": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1225": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "LT",
      "path": "29"
    },
    "1226": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1227": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x4DE"
    },
    "1230": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1231": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1232": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1233": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "ADD",
      "path": "29"
    },
    "1234": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1235": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1236": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1237": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "ADD",
      "path": "29"
    },
    "1238": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1239": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1241": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "ADD",
      "path": "29"
    },
    "1242": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x4C6"
    },
    "1245": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1246": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1247": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "POP",
      "path": "29"
    },
    "1248": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "POP",
      "path": "29"
    },
    "1249": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "POP",
      "path": "29"
    },
    "1250": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "POP",
      "path": "29"
    },
    "1251": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1252": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "POP",
      "path": "29"
    },
    "1253": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1254": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1255": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "ADD",
      "path": "29"
    },
    "1256": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1257": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "1259": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "AND",
      "path": "29"
    },
    "1260": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1261": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1262": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x50B"
    },
    "1265": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1266": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1267": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1268": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "SUB",
      "path": "29"
    },
    "1269": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1270": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1271": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "1273": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1274": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1276": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "SUB",
      "path": "29"
    },
    "1277": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x100"
    },
    "1280": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "EXP",
      "path": "29"
    },
    "1281": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "SUB",
      "path": "29"
    },
    "1282": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "NOT",
      "path": "29"
    },
    "1283": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "AND",
      "path": "29"
    },
    "1284": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1285": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1286": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1288": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "ADD",
      "path": "29"
    },
    "1289": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1290": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "POP",
      "path": "29"
    },
    "1291": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1292": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "POP",
      "path": "29"
    },
    "1293": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1294": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "POP",
      "path": "29"
    },
    "1295": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "POP",
      "path": "29"
    },
    "1296": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "POP",
      "path": "29"
    },
    "1297": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1299": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1300": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1301": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1302": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "SUB",
      "path": "29"
    },
    "1303": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1304": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7725,
        7745
      ],
      "op": "REVERT",
      "path": "29"
    }
  },
  "sha1": "7049554e778f9531ae83d9610ebb01b700d782f7",
  "source": "\n\npragma solidity 0.6.12;\n\nimport \"./SafeERC20.sol\";\n\n/**\n * @dev A token holder contract that will allow a beneficiary to extract the\n * tokens after a given release time.\n *\n * Useful for simple vesting schedules like \"advisors get all of their tokens\n * after 1 year\".\n */\ncontract TokenTimelock {\n    using SafeERC20 for IERC20;\n\n    // ERC20 basic token contract being held\n    IERC20 private _token;\n\n    // beneficiary of tokens after they are released\n    address private _beneficiary;\n\n    // timestamp when token release is enabled\n    uint256 private _releaseTime;\n\n    constructor (IERC20 token_, address beneficiary_, uint256 releaseTime_) public {\n        // solhint-disable-next-line not-rely-on-time\n        require(releaseTime_ > block.timestamp, \"TokenTimelock: release time is before current time\");\n        _token = token_;\n        _beneficiary = beneficiary_;\n        _releaseTime = releaseTime_;\n    }\n\n    /**\n     * @return the token being held.\n     */\n    function token() public view virtual returns (IERC20) {\n        return _token;\n    }\n\n    /**\n     * @return the beneficiary of the tokens.\n     */\n    function beneficiary() public view virtual returns (address) {\n        return _beneficiary;\n    }\n\n    /**\n     * @return the time when the tokens are released.\n     */\n    function releaseTime() public view virtual returns (uint256) {\n        return _releaseTime;\n    }\n\n    /**\n     * @notice Transfers tokens held by timelock to beneficiary.\n     */\n    function release() public virtual {\n        // solhint-disable-next-line not-rely-on-time\n        require(block.timestamp >= releaseTime(), \"TokenTimelock: current time is before release time\");\n\n        uint256 amount = token().balanceOf(address(this));\n        require(amount > 0, \"TokenTimelock: no tokens to release\");\n\n        token().safeTransfer(beneficiary(), amount);\n    }\n}\n",
  "sourceMap": "276:1599:28:-:0;;;581:342;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;581:342:28;;;;;;;;;;;;;;747:15;732:30;;724:93;;;;-1:-1:-1;;;724:93:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;827:6;:15;;-1:-1:-1;;;;;827:15:28;;;-1:-1:-1;;;;;;827:15:28;;;;;;;;852:27;;;;;;;;;;;;;;;889:12;:27;276:1599;;;;;;",
  "sourcePath": "contracts/OpenZeppelin/token/ERC20/TokenTimelock.sol",
  "type": "contract"
}