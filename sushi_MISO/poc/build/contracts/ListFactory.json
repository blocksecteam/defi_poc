{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "FactoryDeprecated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFee",
          "type": "uint256"
        }
      ],
      "name": "MinimumFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MisoInitListFactory",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pointList",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "PointListDeployed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "accessControls",
      "outputs": [
        {
          "internalType": "contract MISOAccessControls",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_listOwner",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "deployPointList",
      "outputs": [
        {
          "internalType": "address",
          "name": "pointList",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "deprecateFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_accessControls",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pointListTemplate",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minimumFee",
          "type": "uint256"
        }
      ],
      "name": "initListFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isChild",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lists",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "misoDiv",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfChildren",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pointListTemplate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_divaddr",
          "type": "address"
        }
      ],
      "name": "setDividends",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minimumFee",
          "type": "uint256"
        }
      ],
      "name": "setMinimumFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokens",
          "type": "uint256"
        }
      ],
      "name": "transferAnyERC20Token",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Access/ListFactory.sol",
    "1": "contracts/Access/MISOAccessControls.sol",
    "21": "contracts/OpenZeppelin/access/AccessControl.sol",
    "25": "contracts/OpenZeppelin/math/SafeMath.sol",
    "29": "contracts/OpenZeppelin/utils/Address.sol",
    "3": "contracts/Access/MISOAdminAccess.sol",
    "31": "contracts/OpenZeppelin/utils/Context.sol",
    "34": "contracts/OpenZeppelin/utils/EnumerableSet.sol",
    "68": "contracts/Utils/CloneFactory.sol",
    "72": "contracts/Utils/SafeTransfer.sol",
    "90": "contracts/interfaces/IPointList.sol"
  },
  "ast": {
    "absolutePath": "contracts/Access/ListFactory.sol",
    "exportedSymbols": {
      "ListFactory": [
        348
      ]
    },
    "id": 349,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "contracts/OpenZeppelin/math/SafeMath.sol",
        "file": "../OpenZeppelin/math/SafeMath.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 349,
        "sourceUnit": 18267,
        "src": "25:43:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Utils/Owned.sol",
        "file": "../Utils/Owned.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 349,
        "sourceUnit": 28376,
        "src": "69:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Utils/CloneFactory.sol",
        "file": "../Utils/CloneFactory.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 349,
        "sourceUnit": 27995,
        "src": "98:35:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 349,
        "sourceUnit": 30870,
        "src": "134:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IPointList.sol",
        "file": "../interfaces/IPointList.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 349,
        "sourceUnit": 30592,
        "src": "169:38:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Utils/SafeTransfer.sol",
        "file": "../Utils/SafeTransfer.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 349,
        "sourceUnit": 28929,
        "src": "208:35:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Access/MISOAccessControls.sol",
        "file": "./MISOAccessControls.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 349,
        "sourceUnit": 564,
        "src": "244:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9,
              "name": "CloneFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 27994,
              "src": "1935:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CloneFactory_$27994",
                "typeString": "contract CloneFactory"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "1935:12:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11,
              "name": "SafeTransfer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 28928,
              "src": "1949:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeTransfer_$28928",
                "typeString": "contract SafeTransfer"
              }
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "1949:12:0"
          }
        ],
        "contractDependencies": [
          27994,
          28928
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 348,
        "linearizedBaseContracts": [
          348,
          28928,
          27994
        ],
        "name": "ListFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 15,
            "libraryName": {
              "contractScope": null,
              "id": 13,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18266,
              "src": "1974:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$18266",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1968:24:0",
            "typeName": {
              "id": 14,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1987:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 16,
              "nodeType": "StructuredDocumentation",
              "src": "1998:58:0",
              "text": "@notice Responsible for access rights to the contract."
            },
            "functionSelector": "748365ef",
            "id": 18,
            "mutability": "mutable",
            "name": "accessControls",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 348,
            "src": "2061:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MISOAccessControls_$563",
              "typeString": "contract MISOAccessControls"
            },
            "typeName": {
              "contractScope": null,
              "id": 17,
              "name": "MISOAccessControls",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 563,
              "src": "2061:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MISOAccessControls_$563",
                "typeString": "contract MISOAccessControls"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 19,
              "nodeType": "StructuredDocumentation",
              "src": "2108:55:0",
              "text": "@notice Whether market has been initialized or not."
            },
            "id": 21,
            "mutability": "mutable",
            "name": "initialised",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 348,
            "src": "2168:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 20,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2168:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 22,
              "nodeType": "StructuredDocumentation",
              "src": "2199:47:0",
              "text": "@notice Address of the point list template."
            },
            "functionSelector": "726aba7f",
            "id": 24,
            "mutability": "mutable",
            "name": "pointListTemplate",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 348,
            "src": "2251:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2251:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 25,
              "nodeType": "StructuredDocumentation",
              "src": "2290:35:0",
              "text": "@notice New point list address."
            },
            "functionSelector": "ccdb3f45",
            "id": 27,
            "mutability": "mutable",
            "name": "newAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 348,
            "src": "2330:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 26,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2330:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 28,
              "nodeType": "StructuredDocumentation",
              "src": "2362:31:0",
              "text": "@notice Minimum fee number."
            },
            "functionSelector": "1a7626e7",
            "id": 30,
            "mutability": "mutable",
            "name": "minimumFee",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 348,
            "src": "2398:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2398:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 31,
              "nodeType": "StructuredDocumentation",
              "src": "2430:50:0",
              "text": "@notice Tracks if list is made by the factory."
            },
            "functionSelector": "fc91a897",
            "id": 35,
            "mutability": "mutable",
            "name": "isChild",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 348,
            "src": "2485:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 34,
              "keyType": {
                "id": 32,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2493:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2485:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 33,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2504:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 36,
              "nodeType": "StructuredDocumentation",
              "src": "2531:39:0",
              "text": "@notice An array of list addresses."
            },
            "functionSelector": "96102cf4",
            "id": 39,
            "mutability": "mutable",
            "name": "lists",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 348,
            "src": "2575:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 37,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2575:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 38,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "2575:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 40,
              "nodeType": "StructuredDocumentation",
              "src": "2604:55:0",
              "text": "@notice Any MISO dividends collected are sent here."
            },
            "functionSelector": "c9907b08",
            "id": 42,
            "mutability": "mutable",
            "name": "misoDiv",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 348,
            "src": "2664:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 41,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2664:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 43,
              "nodeType": "StructuredDocumentation",
              "src": "2701:54:0",
              "text": "@notice Event emitted when point list is deployed."
            },
            "id": 53,
            "name": "PointListDeployed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 53,
                  "src": "2784:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2784:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 53,
                  "src": "2810:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2810:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pointList",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 53,
                  "src": "2832:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2832:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 53,
                  "src": "2851:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2851:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2783:82:0"
            },
            "src": "2760:106:0"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 54,
              "nodeType": "StructuredDocumentation",
              "src": "2872:53:0",
              "text": "@notice Event emitted when factory is deprecated."
            },
            "id": 58,
            "name": "FactoryDeprecated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 58,
                  "src": "2954:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2954:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2953:20:0"
            },
            "src": "2930:44:0"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 59,
              "nodeType": "StructuredDocumentation",
              "src": "2980:54:0",
              "text": "@notice Event emitted when minimum fee is updated."
            },
            "id": 65,
            "name": "MinimumFeeUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 65,
                  "src": "3063:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3063:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 65,
                  "src": "3076:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3076:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3062:26:0"
            },
            "src": "3039:50:0"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 66,
              "nodeType": "StructuredDocumentation",
              "src": "3095:65:0",
              "text": "@notice Event emitted when point list factory is initialised."
            },
            "id": 68,
            "name": "MisoInitListFactory",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3190:2:0"
            },
            "src": "3165:28:0"
          },
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "3552:246:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3570:12:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 79,
                          "name": "initialised",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "3571:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3562:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3562:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "3562:21:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 83,
                      "name": "accessControls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "3593:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MISOAccessControls_$563",
                        "typeString": "contract MISOAccessControls"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 85,
                          "name": "_accessControls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "3629:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 84,
                        "name": "MISOAccessControls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 563,
                        "src": "3610:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MISOAccessControls_$563_$",
                          "typeString": "type(contract MISOAccessControls)"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3610:35:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MISOAccessControls_$563",
                        "typeString": "contract MISOAccessControls"
                      }
                    },
                    "src": "3593:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MISOAccessControls_$563",
                      "typeString": "contract MISOAccessControls"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "3593:52:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 89,
                      "name": "pointListTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "3655:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 90,
                      "name": "_pointListTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "3675:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3655:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "3655:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 93,
                      "name": "minimumFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "3703:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 94,
                      "name": "_minimumFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "3716:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3703:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "3703:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 97,
                      "name": "initialised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "3737:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3751:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3737:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "3737:18:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 101,
                      "name": "MisoInitListFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "3770:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3770:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103,
                  "nodeType": "EmitStatement",
                  "src": "3765:26:0"
                }
              ]
            },
            "documentation": {
              "id": 69,
              "nodeType": "StructuredDocumentation",
              "src": "3199:239:0",
              "text": " @notice Initializes point list factory variables.\n @param _accessControls Access control contract address.\n @param _pointListTemplate Point list template address.\n @param _minimumFee Minimum fee number."
            },
            "functionSelector": "e9bb4b6b",
            "id": 105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initListFactory",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "_accessControls",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 105,
                  "src": "3468:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3468:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "_pointListTemplate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 105,
                  "src": "3493:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3493:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "_minimumFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 105,
                  "src": "3521:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3521:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3467:74:0"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3552:0:0"
            },
            "scope": 348,
            "src": "3443:355:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "3986:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 111,
                      "name": "lists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "4003:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "4003:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 110,
                  "id": 113,
                  "nodeType": "Return",
                  "src": "3996:19:0"
                }
              ]
            },
            "documentation": {
              "id": 106,
              "nodeType": "StructuredDocumentation",
              "src": "3804:120:0",
              "text": " @notice Gets the number of point lists created by factory.\n @return uint Number of point lists."
            },
            "functionSelector": "534349f5",
            "id": 115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numberOfChildren",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3954:2:0"
            },
            "returnParameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 115,
                  "src": "3980:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3980:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3979:6:0"
            },
            "scope": 348,
            "src": "3929:93:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 147,
              "nodeType": "Block",
              "src": "4176:224:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 124,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4222:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4222:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 122,
                            "name": "accessControls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "4194:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MISOAccessControls_$563",
                              "typeString": "contract MISOAccessControls"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasAdminRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 913,
                          "src": "4194:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4194:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c697374466163746f72793a2053656e646572206d7573742062652061646d696e",
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4235:35:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01527f67d5b666dc647313429ac0a839ce087105402f43b3ccdcd97000267aee",
                          "typeString": "literal_string \"ListFactory: Sender must be admin\""
                        },
                        "value": "ListFactory: Sender must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01527f67d5b666dc647313429ac0a839ce087105402f43b3ccdcd97000267aee",
                          "typeString": "literal_string \"ListFactory: Sender must be admin\""
                        }
                      ],
                      "id": 121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4186:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4186:85:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "4186:85:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 131,
                          "name": "newAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "4289:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4311:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4303:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4303:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4303:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4289:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4281:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4281:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "4281:33:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "_newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "4347:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 139,
                      "name": "FactoryDeprecated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "4329:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4329:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "EmitStatement",
                  "src": "4324:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 143,
                      "name": "newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "4369:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 144,
                      "name": "_newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 118,
                      "src": "4382:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4369:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "4369:24:0"
                }
              ]
            },
            "documentation": {
              "id": 116,
              "nodeType": "StructuredDocumentation",
              "src": "4028:87:0",
              "text": " @notice Deprecates factory.\n @param _newAddress Blank address."
            },
            "functionSelector": "de0946af",
            "id": 148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deprecateFactory",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "_newAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 148,
                  "src": "4146:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4146:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4145:21:0"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4176:0:0"
            },
            "scope": 348,
            "src": "4120:280:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 172,
              "nodeType": "Block",
              "src": "4554:193:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 157,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4600:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4600:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 155,
                            "name": "accessControls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "4572:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MISOAccessControls_$563",
                              "typeString": "contract MISOAccessControls"
                            }
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasAdminRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 913,
                          "src": "4572:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4572:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c697374466163746f72793a2053656e646572206d7573742062652061646d696e",
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4613:35:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01527f67d5b666dc647313429ac0a839ce087105402f43b3ccdcd97000267aee",
                          "typeString": "literal_string \"ListFactory: Sender must be admin\""
                        },
                        "value": "ListFactory: Sender must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01527f67d5b666dc647313429ac0a839ce087105402f43b3ccdcd97000267aee",
                          "typeString": "literal_string \"ListFactory: Sender must be admin\""
                        }
                      ],
                      "id": 154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4564:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4564:85:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "4564:85:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 164,
                        "name": "minimumFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "4682:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 165,
                        "name": "_minimumFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "4694:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 163,
                      "name": "MinimumFeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "4664:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4664:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "EmitStatement",
                  "src": "4659:47:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 168,
                      "name": "minimumFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "4716:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 169,
                      "name": "_minimumFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "4729:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4716:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "4716:24:0"
                }
              ]
            },
            "documentation": {
              "id": 149,
              "nodeType": "StructuredDocumentation",
              "src": "4406:90:0",
              "text": " @notice Sets minimum fee.\n @param _minimumFee Minimum fee number."
            },
            "functionSelector": "182a7506",
            "id": 173,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMinimumFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "_minimumFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 173,
                  "src": "4524:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4524:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4523:21:0"
            },
            "returnParameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4554:0:0"
            },
            "scope": 348,
            "src": "4501:246:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "4906:135:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 182,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4952:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4952:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 180,
                            "name": "accessControls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "4924:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MISOAccessControls_$563",
                              "typeString": "contract MISOAccessControls"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasAdminRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 913,
                          "src": "4924:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4924:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d49534f546f6b656e466163746f72793a2053656e646572206d7573742062652041646d696e",
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4965:40:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8a4f5260ae976c735954716a129c6130d2857a2864c5514b348c0885bca41cd",
                          "typeString": "literal_string \"MISOTokenFactory: Sender must be Admin\""
                        },
                        "value": "MISOTokenFactory: Sender must be Admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8a4f5260ae976c735954716a129c6130d2857a2864c5514b348c0885bca41cd",
                          "typeString": "literal_string \"MISOTokenFactory: Sender must be Admin\""
                        }
                      ],
                      "id": 179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4916:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4916:90:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "4916:90:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 188,
                      "name": "misoDiv",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "5016:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 189,
                      "name": "_divaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "5026:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5016:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "5016:18:0"
                }
              ]
            },
            "documentation": {
              "id": 174,
              "nodeType": "StructuredDocumentation",
              "src": "4753:90:0",
              "text": " @notice Sets dividend address.\n @param _divaddr Dividend address."
            },
            "functionSelector": "9e9188ea",
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDividends",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "_divaddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 193,
                  "src": "4870:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4870:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4869:26:0"
            },
            "returnParameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4906:0:0"
            },
            "scope": 348,
            "src": "4848:193:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 311,
              "nodeType": "Block",
              "src": "5498:756:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 208,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5516:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5516:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 210,
                          "name": "minimumFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "5529:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5516:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 207,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5508:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5508:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "5508:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 214,
                      "name": "pointList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "5550:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 216,
                          "name": "pointListTemplate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "5574:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 215,
                        "name": "createClone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27975,
                        "src": "5562:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                          "typeString": "function (address) returns (address)"
                        }
                      },
                      "id": 217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5562:30:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5550:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "5550:42:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 220,
                        "name": "_accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 199,
                        "src": "5606:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5606:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5625:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5606:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 267,
                    "nodeType": "Block",
                    "src": "5917:72:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 264,
                              "name": "_listOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 196,
                              "src": "5967:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 261,
                                  "name": "pointList",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 205,
                                  "src": "5942:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 260,
                                "name": "IPointList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30591,
                                "src": "5931:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPointList_$30591_$",
                                  "typeString": "type(contract IPointList)"
                                }
                              },
                              "id": 262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5931:21:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPointList_$30591",
                                "typeString": "contract IPointList"
                              }
                            },
                            "id": 263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initPointList",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30590,
                            "src": "5931:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5931:47:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 266,
                        "nodeType": "ExpressionStatement",
                        "src": "5931:47:0"
                      }
                    ]
                  },
                  "id": 268,
                  "nodeType": "IfStatement",
                  "src": "5602:387:0",
                  "trueBody": {
                    "id": 259,
                    "nodeType": "Block",
                    "src": "5628:283:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 230,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5686:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ListFactory_$348",
                                    "typeString": "contract ListFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ListFactory_$348",
                                    "typeString": "contract ListFactory"
                                  }
                                ],
                                "id": 229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5678:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 228,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5678:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5678:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 225,
                                  "name": "pointList",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 205,
                                  "src": "5653:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 224,
                                "name": "IPointList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30591,
                                "src": "5642:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPointList_$30591_$",
                                  "typeString": "type(contract IPointList)"
                                }
                              },
                              "id": 226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5642:21:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPointList_$30591",
                                "typeString": "contract IPointList"
                              }
                            },
                            "id": 227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initPointList",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30590,
                            "src": "5642:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5642:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 233,
                        "nodeType": "ExpressionStatement",
                        "src": "5642:50:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 238,
                              "name": "_accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 199,
                              "src": "5738:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 239,
                              "name": "_amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 202,
                              "src": "5749:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 235,
                                  "name": "pointList",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 205,
                                  "src": "5717:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 234,
                                "name": "IPointList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30591,
                                "src": "5706:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPointList_$30591_$",
                                  "typeString": "type(contract IPointList)"
                                }
                              },
                              "id": 236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5706:21:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPointList_$30591",
                                "typeString": "contract IPointList"
                              }
                            },
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setPoints",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30585,
                            "src": "5706:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address[] memory,uint256[] memory) external"
                            }
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5706:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 241,
                        "nodeType": "ExpressionStatement",
                        "src": "5706:52:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 246,
                              "name": "_listOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 196,
                              "src": "5815:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 243,
                                  "name": "pointList",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 205,
                                  "src": "5791:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 242,
                                "name": "MISOAccessControls",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 563,
                                "src": "5772:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_MISOAccessControls_$563_$",
                                  "typeString": "type(contract MISOAccessControls)"
                                }
                              },
                              "id": 244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5772:29:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MISOAccessControls_$563",
                                "typeString": "contract MISOAccessControls"
                              }
                            },
                            "id": 245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addAdminRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 931,
                            "src": "5772:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5772:54:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 248,
                        "nodeType": "ExpressionStatement",
                        "src": "5772:54:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 255,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5894:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ListFactory_$348",
                                    "typeString": "contract ListFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ListFactory_$348",
                                    "typeString": "contract ListFactory"
                                  }
                                ],
                                "id": 254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5886:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 253,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5886:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5886:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 250,
                                  "name": "pointList",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 205,
                                  "src": "5859:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 249,
                                "name": "MISOAccessControls",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 563,
                                "src": "5840:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_MISOAccessControls_$563_$",
                                  "typeString": "type(contract MISOAccessControls)"
                                }
                              },
                              "id": 251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5840:29:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MISOAccessControls_$563",
                                "typeString": "contract MISOAccessControls"
                              }
                            },
                            "id": 252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "removeAdminRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 949,
                            "src": "5840:45:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5840:60:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 258,
                        "nodeType": "ExpressionStatement",
                        "src": "5840:60:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 269,
                        "name": "isChild",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "5998:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 274,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 272,
                            "name": "pointList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 205,
                            "src": "6014:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6006:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 270,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6006:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6006:18:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5998:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6028:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5998:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "5998:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 283,
                            "name": "pointList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 205,
                            "src": "6061:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6053:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 281,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6053:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6053:18:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 278,
                        "name": "lists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "6042:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6042:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6042:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "6042:30:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 288,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6105:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6105:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 292,
                            "name": "pointList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 205,
                            "src": "6125:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6117:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 290,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6117:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6117:18:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 294,
                        "name": "pointListTemplate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "6137:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 295,
                        "name": "_listOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "6156:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 287,
                      "name": "PointListDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "6087:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address)"
                      }
                    },
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6087:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 297,
                  "nodeType": "EmitStatement",
                  "src": "6082:85:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 298,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6181:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6181:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6193:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6181:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 310,
                  "nodeType": "IfStatement",
                  "src": "6177:71:0",
                  "trueBody": {
                    "id": 309,
                    "nodeType": "Block",
                    "src": "6196:52:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 305,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6227:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6227:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 302,
                              "name": "misoDiv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "6210:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6210:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6210:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 308,
                        "nodeType": "ExpressionStatement",
                        "src": "6210:27:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 194,
              "nodeType": "StructuredDocumentation",
              "src": "5047:259:0",
              "text": " @notice Deploys new point list.\n @param _listOwner List owner address.\n @param _accounts An array of account addresses.\n @param _amounts An array of corresponding point amounts.\n @return pointList Point list address."
            },
            "functionSelector": "424599a3",
            "id": 312,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployPointList",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "_listOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 312,
                  "src": "5345:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5345:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 199,
                  "mutability": "mutable",
                  "name": "_accounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 312,
                  "src": "5373:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 197,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5373:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 198,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5373:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 312,
                  "src": "5409:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 200,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5409:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 201,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5409:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5335:105:0"
            },
            "returnParameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 205,
                  "mutability": "mutable",
                  "name": "pointList",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 312,
                  "src": "5475:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5475:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5474:19:0"
            },
            "scope": 348,
            "src": "5311:943:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 339,
              "nodeType": "Block",
              "src": "6554:182:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 325,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6600:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6600:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 323,
                            "name": "accessControls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "6572:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MISOAccessControls_$563",
                              "typeString": "contract MISOAccessControls"
                            }
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasAdminRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 913,
                          "src": "6572:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6572:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c697374466163746f72793a2053656e646572206d757374206265206f70657261746f72",
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6613:38:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fb70b613d1ff200196a060b04f1ebb85c46bf95d93a9140190dc555d471d8c6",
                          "typeString": "literal_string \"ListFactory: Sender must be operator\""
                        },
                        "value": "ListFactory: Sender must be operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fb70b613d1ff200196a060b04f1ebb85c46bf95d93a9140190dc555d471d8c6",
                          "typeString": "literal_string \"ListFactory: Sender must be operator\""
                        }
                      ],
                      "id": 322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6564:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6564:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 330,
                  "nodeType": "ExpressionStatement",
                  "src": "6564:88:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 332,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "6676:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 333,
                        "name": "misoDiv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "6691:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 334,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 317,
                        "src": "6700:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 331,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28810,
                      "src": "6662:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6662:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "6662:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6725:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 321,
                  "id": 338,
                  "nodeType": "Return",
                  "src": "6718:11:0"
                }
              ]
            },
            "documentation": {
              "id": 313,
              "nodeType": "StructuredDocumentation",
              "src": "6260:186:0",
              "text": " @notice Funtion for transfering any ERC20 token.\n @param _tokenAddress Address to send from.\n @param _tokens Number of tokens.\n @return success True."
            },
            "functionSelector": "dc39d06d",
            "id": 340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferAnyERC20Token",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 340,
                  "src": "6482:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6482:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 317,
                  "mutability": "mutable",
                  "name": "_tokens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 340,
                  "src": "6505:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6505:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6481:40:0"
            },
            "returnParameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 340,
                  "src": "6540:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6540:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6539:14:0"
            },
            "scope": 348,
            "src": "6451:285:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 346,
              "nodeType": "Block",
              "src": "6770:25:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 343,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "6780:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6780:8:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "6780:8:0"
                }
              ]
            },
            "documentation": null,
            "id": 347,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6750:2:0"
            },
            "returnParameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6770:0:0"
            },
            "scope": 348,
            "src": "6742:53:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 349,
        "src": "1911:4886:0"
      }
    ],
    "src": "0:6798:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50610ec6806100206000396000f3fe6080604052600436106100e15760003560e01c80639e9188ea1161007f578063dc39d06d11610059578063dc39d06d1461035c578063de0946af146103a9578063e9bb4b6b146103dc578063fc91a8971461041f576100eb565b80639e9188ea146102ff578063c9907b0814610332578063ccdb3f4514610347576100eb565b8063534349f5116100bb578063534349f514610296578063726aba7f146102ab578063748365ef146102c057806396102cf4146102d5576100eb565b8063182a7506146100f05780631a7626e71461011c578063424599a314610143576100eb565b366100eb57600080fd5b600080fd5b3480156100fc57600080fd5b5061011a6004803603602081101561011357600080fd5b5035610452565b005b34801561012857600080fd5b50610131610546565b60408051918252519081900360200190f35b61027a6004803603606081101561015957600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561018457600080fd5b82018360208201111561019657600080fd5b803590602001918460208302840111640100000000831117156101b857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561020857600080fd5b82018360208201111561021a57600080fd5b8035906020019184602083028401116401000000008311171561023c57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061054c945050505050565b604080516001600160a01b039092168252519081900360200190f35b3480156102a257600080fd5b506101316108e2565b3480156102b757600080fd5b5061027a6108e8565b3480156102cc57600080fd5b5061027a6108f7565b3480156102e157600080fd5b5061027a600480360360208110156102f857600080fd5b5035610906565b34801561030b57600080fd5b5061011a6004803603602081101561032257600080fd5b50356001600160a01b031661092d565b34801561033e57600080fd5b5061027a610a01565b34801561035357600080fd5b5061027a610a10565b34801561036857600080fd5b506103956004803603604081101561037f57600080fd5b506001600160a01b038135169060200135610a1f565b604080519115158252519081900360200190f35b3480156103b557600080fd5b5061011a600480360360208110156103cc57600080fd5b50356001600160a01b0316610af3565b3480156103e857600080fd5b5061011a600480360360608110156103ff57600080fd5b506001600160a01b03813581169160208101359091169060400135610c19565b34801561042b57600080fd5b506103956004803603602081101561044257600080fd5b50356001600160a01b0316610c9c565b6000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b15801561049d57600080fd5b505afa1580156104b1573d6000803e3d6000fd5b505050506040513d60208110156104c757600080fd5b50516105045760405162461bcd60e51b8152600401808060200182810382526021815260200180610e266021913960400191505060405180910390fd5b600354604080519182526020820183905280517fcc2f49c6214278ae5862935eff953448e8e69118d10abfafaf63ea6aa35255cb9281900390910190a1600355565b60035481565b600060035434101561055d57600080fd5b600154610572906001600160a01b0316610cb1565b835190915015610788576040805163283ba19b60e01b815230600482015290516001600160a01b0383169163283ba19b91602480830192600092919082900301818387803b1580156105c357600080fd5b505af11580156105d7573d6000803e3d6000fd5b50505050806001600160a01b0316639a80c4a184846040518363ffffffff1660e01b8152600401808060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561063f578181015183820152602001610627565b50505050905001838103825284818151815260200191508051906020019060200280838360005b8381101561067e578181015183820152602001610666565b50505050905001945050505050600060405180830381600087803b1580156106a557600080fd5b505af11580156106b9573d6000803e3d6000fd5b50505050806001600160a01b0316636595171c856040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b15801561070c57600080fd5b505af1158015610720573d6000803e3d6000fd5b505060408051630dccfe3160e41b815230600482015290516001600160a01b038516935063dccfe3109250602480830192600092919082900301818387803b15801561076b57600080fd5b505af115801561077f573d6000803e3d6000fd5b505050506107f0565b806001600160a01b031663283ba19b856040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b1580156107d757600080fd5b505af11580156107eb573d6000803e3d6000fd5b505050505b6001600160a01b038082166000818152600460209081526040808320805460ff1916600190811790915560058054808301825594527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090930180546001600160a01b03191685179055915482519085168152938816908401528051919233927f8a13771d198709940307fb40397206144caf6dfef0f59c2951c91c72e9844454929181900390910190a334156108db576006546040516001600160a01b03909116903480156108fc02916000818181858888f193505050501580156108d9573d6000803e3d6000fd5b505b9392505050565b60055490565b6001546001600160a01b031681565b6000546001600160a01b031681565b6005818154811061091357fe5b6000918252602090912001546001600160a01b0316905081565b6000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b15801561097857600080fd5b505afa15801561098c573d6000803e3d6000fd5b505050506040513d60208110156109a257600080fd5b50516109df5760405162461bcd60e51b8152600401808060200182810382526026815260200180610e6b6026913960400191505060405180910390fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b031681565b6002546001600160a01b031681565b600080546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b158015610a6b57600080fd5b505afa158015610a7f573d6000803e3d6000fd5b505050506040513d6020811015610a9557600080fd5b5051610ad25760405162461bcd60e51b8152600401808060200182810382526024815260200180610e476024913960400191505060405180910390fd5b600654610aea9084906001600160a01b031684610d03565b50600192915050565b6000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b158015610b3e57600080fd5b505afa158015610b52573d6000803e3d6000fd5b505050506040513d6020811015610b6857600080fd5b5051610ba55760405162461bcd60e51b8152600401808060200182810382526021815260200180610e266021913960400191505060405180910390fd5b6002546001600160a01b031615610bbb57600080fd5b604080516001600160a01b038316815290517f0ac885cfcac9d1450e80f787dbf9546001fb50414106435b10b1d27b448b86689181900360200190a1600280546001600160a01b0319166001600160a01b0392909216919091179055565b600054600160a01b900460ff1615610c3057600080fd5b60008054600180546001600160a01b038681166001600160a01b031992831617909255600385905560ff60a01b1991871692169190911716600160a01b1781556040517fe4bd612963220b47d4b6661bc82c559aaaf0350b0aad4dde4d90ce8b7ea154629190a1505050565b60046020526000908152604090205460ff1681565b6000808260601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f0949350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b178152925182516000946060949389169392918291908083835b60208310610d805780518252601f199092019160209182019101610d61565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610de2576040519150601f19603f3d011682016040523d82523d6000602084013e610de7565b606091505b5091509150818015610e15575080511580610e155750808060200190516020811015610e1257600080fd5b50515b610e1e57600080fd5b505050505056fe4c697374466163746f72793a2053656e646572206d7573742062652061646d696e4c697374466163746f72793a2053656e646572206d757374206265206f70657261746f724d49534f546f6b656e466163746f72793a2053656e646572206d7573742062652041646d696ea2646970667358221220dca990b201fb5e14e1e845b7f969b02febbbee37214a58c41dd5976a0b60506564736f6c634300060c0033",
  "bytecodeSha1": "b8bd5933a7a8fd7eaacae57449cf0a73257b2f3f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "ListFactory",
  "coverageMap": {
    "branches": {
      "0": {
        "ListFactory.deployPointList": {
          "33": [
            5516,
            5539,
            true
          ],
          "34": [
            5606,
            5626,
            false
          ],
          "35": [
            6181,
            6194,
            false
          ]
        },
        "ListFactory.deprecateFactory": {
          "38": [
            4194,
            4233,
            true
          ],
          "39": [
            4289,
            4313,
            true
          ]
        },
        "ListFactory.initListFactory": {
          "40": [
            3570,
            3582,
            true
          ]
        },
        "ListFactory.setDividends": {
          "36": [
            4924,
            4963,
            true
          ]
        },
        "ListFactory.setMinimumFee": {
          "32": [
            4572,
            4611,
            true
          ]
        },
        "ListFactory.transferAnyERC20Token": {
          "37": [
            6572,
            6611,
            true
          ]
        }
      },
      "1": {},
      "21": {},
      "25": {},
      "29": {},
      "3": {},
      "31": {},
      "34": {},
      "68": {},
      "72": {
        "SafeTransfer._safeTransfer": {
          "41": [
            1947,
            1954,
            false
          ],
          "42": [
            1959,
            1975,
            true
          ],
          "43": [
            1979,
            2003,
            true
          ]
        }
      },
      "90": {}
    },
    "statements": {
      "0": {
        "ListFactory.<receive>": {
          "0": [
            6780,
            6788
          ]
        },
        "ListFactory.deployPointList": {
          "4": [
            5508,
            5540
          ],
          "5": [
            5550,
            5592
          ],
          "6": [
            5642,
            5692
          ],
          "7": [
            5706,
            5758
          ],
          "8": [
            5772,
            5826
          ],
          "9": [
            5840,
            5900
          ],
          "10": [
            5931,
            5978
          ],
          "11": [
            5998,
            6032
          ],
          "12": [
            6042,
            6072
          ],
          "13": [
            6082,
            6167
          ],
          "14": [
            6210,
            6237
          ]
        },
        "ListFactory.deprecateFactory": {
          "21": [
            4186,
            4271
          ],
          "22": [
            4281,
            4314
          ],
          "23": [
            4324,
            4359
          ],
          "24": [
            4369,
            4393
          ]
        },
        "ListFactory.initListFactory": {
          "25": [
            3562,
            3583
          ],
          "26": [
            3593,
            3645
          ],
          "27": [
            3655,
            3693
          ],
          "28": [
            3703,
            3727
          ],
          "29": [
            3737,
            3755
          ],
          "30": [
            3765,
            3791
          ]
        },
        "ListFactory.numberOfChildren": {
          "15": [
            3996,
            4015
          ]
        },
        "ListFactory.setDividends": {
          "16": [
            4916,
            5006
          ],
          "17": [
            5016,
            5034
          ]
        },
        "ListFactory.setMinimumFee": {
          "1": [
            4564,
            4649
          ],
          "2": [
            4659,
            4706
          ],
          "3": [
            4716,
            4740
          ]
        },
        "ListFactory.transferAnyERC20Token": {
          "18": [
            6564,
            6652
          ],
          "19": [
            6662,
            6708
          ],
          "20": [
            6718,
            6729
          ]
        }
      },
      "1": {},
      "21": {},
      "25": {},
      "29": {},
      "3": {},
      "31": {},
      "34": {},
      "68": {},
      "72": {
        "SafeTransfer._safeTransfer": {
          "31": [
            1939,
            2005
          ]
        }
      },
      "90": {}
    }
  },
  "dependencies": [
    "AccessControl",
    "Address",
    "CloneFactory",
    "Context",
    "EnumerableSet",
    "IPointList",
    "MISOAccessControls",
    "MISOAdminAccess",
    "SafeMath",
    "SafeTransfer"
  ],
  "deployedBytecode": "6080604052600436106100e15760003560e01c80639e9188ea1161007f578063dc39d06d11610059578063dc39d06d1461035c578063de0946af146103a9578063e9bb4b6b146103dc578063fc91a8971461041f576100eb565b80639e9188ea146102ff578063c9907b0814610332578063ccdb3f4514610347576100eb565b8063534349f5116100bb578063534349f514610296578063726aba7f146102ab578063748365ef146102c057806396102cf4146102d5576100eb565b8063182a7506146100f05780631a7626e71461011c578063424599a314610143576100eb565b366100eb57600080fd5b600080fd5b3480156100fc57600080fd5b5061011a6004803603602081101561011357600080fd5b5035610452565b005b34801561012857600080fd5b50610131610546565b60408051918252519081900360200190f35b61027a6004803603606081101561015957600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561018457600080fd5b82018360208201111561019657600080fd5b803590602001918460208302840111640100000000831117156101b857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561020857600080fd5b82018360208201111561021a57600080fd5b8035906020019184602083028401116401000000008311171561023c57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061054c945050505050565b604080516001600160a01b039092168252519081900360200190f35b3480156102a257600080fd5b506101316108e2565b3480156102b757600080fd5b5061027a6108e8565b3480156102cc57600080fd5b5061027a6108f7565b3480156102e157600080fd5b5061027a600480360360208110156102f857600080fd5b5035610906565b34801561030b57600080fd5b5061011a6004803603602081101561032257600080fd5b50356001600160a01b031661092d565b34801561033e57600080fd5b5061027a610a01565b34801561035357600080fd5b5061027a610a10565b34801561036857600080fd5b506103956004803603604081101561037f57600080fd5b506001600160a01b038135169060200135610a1f565b604080519115158252519081900360200190f35b3480156103b557600080fd5b5061011a600480360360208110156103cc57600080fd5b50356001600160a01b0316610af3565b3480156103e857600080fd5b5061011a600480360360608110156103ff57600080fd5b506001600160a01b03813581169160208101359091169060400135610c19565b34801561042b57600080fd5b506103956004803603602081101561044257600080fd5b50356001600160a01b0316610c9c565b6000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b15801561049d57600080fd5b505afa1580156104b1573d6000803e3d6000fd5b505050506040513d60208110156104c757600080fd5b50516105045760405162461bcd60e51b8152600401808060200182810382526021815260200180610e266021913960400191505060405180910390fd5b600354604080519182526020820183905280517fcc2f49c6214278ae5862935eff953448e8e69118d10abfafaf63ea6aa35255cb9281900390910190a1600355565b60035481565b600060035434101561055d57600080fd5b600154610572906001600160a01b0316610cb1565b835190915015610788576040805163283ba19b60e01b815230600482015290516001600160a01b0383169163283ba19b91602480830192600092919082900301818387803b1580156105c357600080fd5b505af11580156105d7573d6000803e3d6000fd5b50505050806001600160a01b0316639a80c4a184846040518363ffffffff1660e01b8152600401808060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561063f578181015183820152602001610627565b50505050905001838103825284818151815260200191508051906020019060200280838360005b8381101561067e578181015183820152602001610666565b50505050905001945050505050600060405180830381600087803b1580156106a557600080fd5b505af11580156106b9573d6000803e3d6000fd5b50505050806001600160a01b0316636595171c856040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b15801561070c57600080fd5b505af1158015610720573d6000803e3d6000fd5b505060408051630dccfe3160e41b815230600482015290516001600160a01b038516935063dccfe3109250602480830192600092919082900301818387803b15801561076b57600080fd5b505af115801561077f573d6000803e3d6000fd5b505050506107f0565b806001600160a01b031663283ba19b856040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b1580156107d757600080fd5b505af11580156107eb573d6000803e3d6000fd5b505050505b6001600160a01b038082166000818152600460209081526040808320805460ff1916600190811790915560058054808301825594527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090930180546001600160a01b03191685179055915482519085168152938816908401528051919233927f8a13771d198709940307fb40397206144caf6dfef0f59c2951c91c72e9844454929181900390910190a334156108db576006546040516001600160a01b03909116903480156108fc02916000818181858888f193505050501580156108d9573d6000803e3d6000fd5b505b9392505050565b60055490565b6001546001600160a01b031681565b6000546001600160a01b031681565b6005818154811061091357fe5b6000918252602090912001546001600160a01b0316905081565b6000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b15801561097857600080fd5b505afa15801561098c573d6000803e3d6000fd5b505050506040513d60208110156109a257600080fd5b50516109df5760405162461bcd60e51b8152600401808060200182810382526026815260200180610e6b6026913960400191505060405180910390fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b031681565b6002546001600160a01b031681565b600080546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b158015610a6b57600080fd5b505afa158015610a7f573d6000803e3d6000fd5b505050506040513d6020811015610a9557600080fd5b5051610ad25760405162461bcd60e51b8152600401808060200182810382526024815260200180610e476024913960400191505060405180910390fd5b600654610aea9084906001600160a01b031684610d03565b50600192915050565b6000546040805163c395fcb360e01b815233600482015290516001600160a01b039092169163c395fcb391602480820192602092909190829003018186803b158015610b3e57600080fd5b505afa158015610b52573d6000803e3d6000fd5b505050506040513d6020811015610b6857600080fd5b5051610ba55760405162461bcd60e51b8152600401808060200182810382526021815260200180610e266021913960400191505060405180910390fd5b6002546001600160a01b031615610bbb57600080fd5b604080516001600160a01b038316815290517f0ac885cfcac9d1450e80f787dbf9546001fb50414106435b10b1d27b448b86689181900360200190a1600280546001600160a01b0319166001600160a01b0392909216919091179055565b600054600160a01b900460ff1615610c3057600080fd5b60008054600180546001600160a01b038681166001600160a01b031992831617909255600385905560ff60a01b1991871692169190911716600160a01b1781556040517fe4bd612963220b47d4b6661bc82c559aaaf0350b0aad4dde4d90ce8b7ea154629190a1505050565b60046020526000908152604090205460ff1681565b6000808260601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f0949350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b178152925182516000946060949389169392918291908083835b60208310610d805780518252601f199092019160209182019101610d61565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610de2576040519150601f19603f3d011682016040523d82523d6000602084013e610de7565b606091505b5091509150818015610e15575080511580610e155750808060200190516020811015610e1257600080fd5b50515b610e1e57600080fd5b505050505056fe4c697374466163746f72793a2053656e646572206d7573742062652061646d696e4c697374466163746f72793a2053656e646572206d757374206265206f70657261746f724d49534f546f6b656e466163746f72793a2053656e646572206d7573742062652041646d696ea2646970667358221220dca990b201fb5e14e1e845b7f969b02febbbee37214a58c41dd5976a0b60506564736f6c634300060c0033",
  "deployedSourceMap": "1911:4886:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6780:8;;;1911:4886;;;;4501:246;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4501:246:0;;:::i;:::-;;2398:25;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5311:943;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5311:943:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5311:943:0;;;;;;;;-1:-1:-1;5311:943:0;;-1:-1:-1;;5311:943:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5311:943:0;;-1:-1:-1;5311:943:0;;-1:-1:-1;;;;;5311:943:0:i;:::-;;;;-1:-1:-1;;;;;5311:943:0;;;;;;;;;;;;;;3929:93;;;;;;;;;;;;;:::i;2251:32::-;;;;;;;;;;;;;:::i;2061:40::-;;;;;;;;;;;;;:::i;2575:22::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2575:22:0;;:::i;4848:193::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4848:193:0;-1:-1:-1;;;;;4848:193:0;;:::i;2664:30::-;;;;;;;;;;;;;:::i;2330:25::-;;;;;;;;;;;;;:::i;6451:285::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6451:285:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4120:280;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4120:280:0;-1:-1:-1;;;;;4120:280:0;;:::i;3443:355::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3443:355:0;;;;;;;;;;;;;;;;;:::i;2485:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2485:39:0;-1:-1:-1;;;;;2485:39:0;;:::i;4501:246::-;4572:14;;:39;;;-1:-1:-1;;;4572:39:0;;4600:10;4572:39;;;;;;-1:-1:-1;;;;;4572:14:0;;;;:27;;:39;;;;;;;;;;;;;;;:14;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4572:39:0;4564:85;;;;-1:-1:-1;;;4564:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4682:10;;4664:42;;;;;;;;;;;;;;;;;;;;;;;;4716:10;:24;4501:246::o;2398:25::-;;;;:::o;5311:943::-;5475:17;5529:10;;5516:9;:23;;5508:32;;;;;;5574:17;;5562:30;;-1:-1:-1;;;;;5574:17:0;5562:11;:30::i;:::-;5606:16;;5550:42;;-1:-1:-1;5606:20:0;5602:387;;5642:50;;;-1:-1:-1;;;5642:50:0;;5686:4;5642:50;;;;;;-1:-1:-1;;;;;5642:35:0;;;;;:50;;;;;-1:-1:-1;;5642:50:0;;;;;;;-1:-1:-1;5642:35:0;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5717:9;-1:-1:-1;;;;;5706:31:0;;5738:9;5749:8;5706:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5791:9;-1:-1:-1;;;;;5772:42:0;;5815:10;5772:54;;;;;;;;;;;;;-1:-1:-1;;;;;5772:54:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5840:60:0;;;-1:-1:-1;;;5840:60:0;;5894:4;5840:60;;;;;;-1:-1:-1;;;;;5840:45:0;;;-1:-1:-1;5840:45:0;;-1:-1:-1;5840:60:0;;;;;-1:-1:-1;;5840:60:0;;;;;;;-1:-1:-1;5840:45:0;:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5602:387;;;5942:9;-1:-1:-1;;;;;5931:35:0;;5967:10;5931:47;;;;;;;;;;;;;-1:-1:-1;;;;;5931:47:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5602:387;-1:-1:-1;;;;;5998:27:0;;;;;;;:7;:27;;;;;;;;:34;;-1:-1:-1;;5998:34:0;6028:4;5998:34;;;;;;6042:5;:30;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6042:30:0;;;;;6137:17;;6087:80;;6137:17;;;6087:80;;;;;;;;;;;5998:27;;6105:10;;6087:80;;;;;;;;;;;6181:9;:13;6177:71;;6210:7;;:27;;-1:-1:-1;;;;;6210:7:0;;;;6227:9;6210:27;;;;;:7;:27;:7;:27;6227:9;6210:7;:27;;;;;;;;;;;;;;;;;;;;;6177:71;5311:943;;;;;:::o;3929:93::-;4003:5;:12;3929:93;:::o;2251:32::-;;;-1:-1:-1;;;;;2251:32:0;;:::o;2061:40::-;;;-1:-1:-1;;;;;2061:40:0;;:::o;2575:22::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2575:22:0;;-1:-1:-1;2575:22:0;:::o;4848:193::-;4924:14;;:39;;;-1:-1:-1;;;4924:39:0;;4952:10;4924:39;;;;;;-1:-1:-1;;;;;4924:14:0;;;;:27;;:39;;;;;;;;;;;;;;;:14;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4924:39:0;4916:90;;;;-1:-1:-1;;;4916:90:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5016:7;:18;;-1:-1:-1;;;;;;5016:18:0;-1:-1:-1;;;;;5016:18:0;;;;;;;;;;4848:193::o;2664:30::-;;;-1:-1:-1;;;;;2664:30:0;;:::o;2330:25::-;;;-1:-1:-1;;;;;2330:25:0;;:::o;6451:285::-;6540:12;6572:14;;:39;;;-1:-1:-1;;;6572:39:0;;6600:10;6572:39;;;;;;-1:-1:-1;;;;;6572:14:0;;;;:27;;:39;;;;;;;;;;;;;;;:14;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6572:39:0;6564:88;;;;-1:-1:-1;;;6564:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6691:7;;6662:46;;6676:13;;-1:-1:-1;;;;;6691:7:0;6700;6662:13;:46::i;:::-;-1:-1:-1;6725:4:0;6451:285;;;;:::o;4120:280::-;4194:14;;:39;;;-1:-1:-1;;;4194:39:0;;4222:10;4194:39;;;;;;-1:-1:-1;;;;;4194:14:0;;;;:27;;:39;;;;;;;;;;;;;;;:14;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4194:39:0;4186:85;;;;-1:-1:-1;;;4186:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4289:10;;-1:-1:-1;;;;;4289:10:0;:24;4281:33;;;;;;4329:30;;;-1:-1:-1;;;;;4329:30:0;;;;;;;;;;;;;;;4369:10;:24;;-1:-1:-1;;;;;;4369:24:0;-1:-1:-1;;;;;4369:24:0;;;;;;;;;;4120:280::o;3443:355::-;3571:11;;-1:-1:-1;;;3571:11:0;;;;3570:12;3562:21;;;;;;3593:14;:52;;;3655:38;;-1:-1:-1;;;;;3655:38:0;;;-1:-1:-1;;;;;;3655:38:0;;;;;;;3703:10;:24;;;-1:-1:-1;;;;3593:52:0;;;;;;;;;3737:18;-1:-1:-1;;;3737:18:0;;;3770:21;;;;3593:14;3770:21;3443:355;;;:::o;2485:39::-;;;;;;;;;;;;;;;:::o;1524:441:68:-;1579:14;1601:19;1631:6;1623:15;;1601:37;;1680:4;1674:11;-1:-1:-1;;;1699:5:68;1692:81;1805:11;1798:4;1791:5;1787:16;1780:37;-1:-1:-1;;;1842:4:68;1835:5;1831:16;1824:92;1950:4;1943:5;1940:1;1933:22;1923:32;1653:308;-1:-1:-1;;;;1653:308:68:o;1527:510:72:-;1869:46;;;-1:-1:-1;;;;;1869:46:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1869:46:72;-1:-1:-1;;;1869:46:72;;;1762:167;;;;1715:12;;1729:17;;1762:10;;;;1869:46;1762:167;;;1869:46;1762:167;;1869:46;1762:167;;;;;;;;;;-1:-1:-1;;1762:167:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1714:215;;;;1947:7;:57;;;;-1:-1:-1;1959:11:72;;:16;;:44;;;1990:4;1979:24;;;;;;;;;;;;;;;-1:-1:-1;1979:24:72;1959:44;1939:66;;;;;;1527:510;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "FactoryDeprecated(address)": {
        "notice": "Event emitted when factory is deprecated."
      },
      "MinimumFeeUpdated(uint256,uint256)": {
        "notice": "Event emitted when minimum fee is updated."
      },
      "MisoInitListFactory()": {
        "notice": "Event emitted when point list factory is initialised."
      },
      "PointListDeployed(address,address,address,address)": {
        "notice": "Event emitted when point list is deployed."
      }
    },
    "kind": "dev",
    "methods": {
      "accessControls()": {
        "notice": "Responsible for access rights to the contract."
      },
      "deployPointList(address,address[],uint256[])": {
        "notice": "Deploys new point list.",
        "params": {
          "_accounts": "An array of account addresses.",
          "_amounts": "An array of corresponding point amounts.",
          "_listOwner": "List owner address."
        },
        "returns": {
          "pointList": "Point list address."
        }
      },
      "deprecateFactory(address)": {
        "notice": "Deprecates factory.",
        "params": {
          "_newAddress": "Blank address."
        }
      },
      "initListFactory(address,address,uint256)": {
        "notice": "Initializes point list factory variables.",
        "params": {
          "_accessControls": "Access control contract address.",
          "_minimumFee": "Minimum fee number.",
          "_pointListTemplate": "Point list template address."
        }
      },
      "isChild(address)": {
        "notice": "Tracks if list is made by the factory."
      },
      "lists(uint256)": {
        "notice": "An array of list addresses."
      },
      "minimumFee()": {
        "notice": "Minimum fee number."
      },
      "misoDiv()": {
        "notice": "Any MISO dividends collected are sent here."
      },
      "newAddress()": {
        "notice": "New point list address."
      },
      "numberOfChildren()": {
        "notice": "Gets the number of point lists created by factory.",
        "returns": {
          "_0": "uint Number of point lists."
        }
      },
      "pointListTemplate()": {
        "notice": "Address of the point list template."
      },
      "setDividends(address)": {
        "notice": "Sets dividend address.",
        "params": {
          "_divaddr": "Dividend address."
        }
      },
      "setMinimumFee(uint256)": {
        "notice": "Sets minimum fee.",
        "params": {
          "_minimumFee": "Minimum fee number."
        }
      },
      "transferAnyERC20Token(address,uint256)": {
        "notice": "Funtion for transfering any ERC20 token.",
        "params": {
          "_tokenAddress": "Address to send from.",
          "_tokens": "Number of tokens."
        },
        "returns": {
          "success": "True."
        }
      }
    },
    "version": 1
  },
  "offset": [
    1911,
    6797
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E9188EA GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xDC39D06D GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xDC39D06D EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xDE0946AF EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0xE9BB4B6B EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xFC91A897 EQ PUSH2 0x41F JUMPI PUSH2 0xEB JUMP JUMPDEST DUP1 PUSH4 0x9E9188EA EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0xC9907B08 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0xCCDB3F45 EQ PUSH2 0x347 JUMPI PUSH2 0xEB JUMP JUMPDEST DUP1 PUSH4 0x534349F5 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x534349F5 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x726ABA7F EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x748365EF EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x96102CF4 EQ PUSH2 0x2D5 JUMPI PUSH2 0xEB JUMP JUMPDEST DUP1 PUSH4 0x182A7506 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x1A7626E7 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x424599A3 EQ PUSH2 0x143 JUMPI PUSH2 0xEB JUMP JUMPDEST CALLDATASIZE PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x452 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x54C SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x8E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x8E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0x8F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x906 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x92D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0xA01 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27A PUSH2 0xA10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xC19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xC395FCB3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xC395FCB3 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x504 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE26 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE DUP1 MLOAD PUSH32 0xCC2F49C6214278AE5862935EFF953448E8E69118D10ABFAFAF63EA6AA35255CB SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD CALLVALUE LT ISZERO PUSH2 0x55D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x572 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCB1 JUMP JUMPDEST DUP4 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x788 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x283BA19B PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH4 0x283BA19B SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9A80C4A1 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x63F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x627 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x67E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x666 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6595171C DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x70C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x720 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH4 0xDCCFE31 PUSH1 0xE4 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP4 POP PUSH4 0xDCCFE310 SWAP3 POP PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x76B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x77F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x283BA19B DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD DUP1 DUP4 ADD DUP3 SSTORE SWAP5 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE SWAP2 SLOAD DUP3 MLOAD SWAP1 DUP6 AND DUP2 MSTORE SWAP4 DUP9 AND SWAP1 DUP5 ADD MSTORE DUP1 MLOAD SWAP2 SWAP3 CALLER SWAP3 PUSH32 0x8A13771D198709940307FB40397206144CAF6DFEF0F59C2951C91C72E9844454 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 CALLVALUE ISZERO PUSH2 0x8DB JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x913 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xC395FCB3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xC395FCB3 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x98C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE6B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xC395FCB3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xC395FCB3 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xAD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE47 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xAEA SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0xD03 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xC395FCB3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xC395FCB3 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB52 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xBA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE26 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xBBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0xAC885CFCAC9D1450E80F787DBF9546001FB50414106435B10B1D27B448B8668 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x3 DUP6 SWAP1 SSTORE PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP2 DUP8 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE4BD612963220B47D4B6661BC82C559AAAF0350B0AAD4DDE4D90CE8B7EA15462 SWAP2 SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x60 SHL SWAP1 POP PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP2 PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP3 MLOAD PUSH1 0x0 SWAP5 PUSH1 0x60 SWAP5 SWAP4 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xD80 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDE2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0xE15 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0xE15 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0xE1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP JUMP INVALID 0x4C PUSH10 0x7374466163746F72793A KECCAK256 MSTORE8 PUSH6 0x6E646572206D PUSH22 0x73742062652061646D696E4C697374466163746F7279 GASPRICE KECCAK256 MSTORE8 PUSH6 0x6E646572206D PUSH22 0x7374206265206F70657261746F724D49534F546F6B65 PUSH15 0x466163746F72793A2053656E646572 KECCAK256 PUSH14 0x7573742062652041646D696EA264 PUSH10 0x70667358221220DCA990 0xB2 ADD 0xFB 0x5E EQ 0xE1 0xE8 GASLIMIT 0xB7 0xF9 PUSH10 0xB02FEBBBEE37214A58C4 SAR 0xD5 SWAP8 PUSH11 0xB60506564736F6C634300 MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE1"
    },
    "12": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9E9188EA"
    },
    "25": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F"
    },
    "29": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDC39D06D"
    },
    "36": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "GT",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDC39D06D"
    },
    "47": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35C"
    },
    "51": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDE0946AF"
    },
    "58": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A9"
    },
    "62": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE9BB4B6B"
    },
    "69": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DC"
    },
    "73": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFC91A897"
    },
    "80": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "EQ",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41F"
    },
    "84": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB"
    },
    "88": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMP",
      "path": "0"
    },
    "89": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "91": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9E9188EA"
    },
    "96": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "EQ",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FF"
    },
    "100": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC9907B08"
    },
    "107": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "EQ",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "111": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCCDB3F45"
    },
    "118": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "EQ",
      "path": "0"
    },
    "119": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x347"
    },
    "122": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "123": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB"
    },
    "126": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMP",
      "path": "0"
    },
    "127": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "128": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "129": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x534349F5"
    },
    "134": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "GT",
      "path": "0"
    },
    "135": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB"
    },
    "138": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "139": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "140": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x534349F5"
    },
    "145": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "EQ",
      "path": "0"
    },
    "146": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x296"
    },
    "149": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "150": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "151": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x726ABA7F"
    },
    "156": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "EQ",
      "path": "0"
    },
    "157": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AB"
    },
    "160": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "161": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "162": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x748365EF"
    },
    "167": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "EQ",
      "path": "0"
    },
    "168": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C0"
    },
    "171": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "172": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "173": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x96102CF4"
    },
    "178": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "EQ",
      "path": "0"
    },
    "179": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D5"
    },
    "182": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "183": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB"
    },
    "186": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMP",
      "path": "0"
    },
    "187": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "188": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "189": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x182A7506"
    },
    "194": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "EQ",
      "path": "0"
    },
    "195": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "198": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "199": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "200": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1A7626E7"
    },
    "205": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "EQ",
      "path": "0"
    },
    "206": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C"
    },
    "209": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "210": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "211": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x424599A3"
    },
    "216": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "EQ",
      "path": "0"
    },
    "217": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143"
    },
    "220": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "221": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB"
    },
    "224": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMP",
      "path": "0"
    },
    "225": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "226": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "227": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB"
    },
    "230": {
      "fn": null,
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "231": {
      "fn": "ListFactory.<receive>",
      "offset": [
        6780,
        6788
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "233": {
      "fn": "ListFactory.<receive>",
      "offset": [
        6780,
        6788
      ],
      "op": "DUP1",
      "path": "0"
    },
    "234": {
      "fn": "ListFactory.<receive>",
      "offset": [
        6780,
        6788
      ],
      "op": "REVERT",
      "path": "0"
    },
    "235": {
      "offset": [
        1911,
        6797
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "236": {
      "fn": "ListFactory.<receive>",
      "offset": [
        1911,
        6797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "238": {
      "fn": "ListFactory.<receive>",
      "offset": [
        1911,
        6797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "239": {
      "first_revert": true,
      "fn": "ListFactory.<receive>",
      "offset": [
        1911,
        6797
      ],
      "op": "REVERT",
      "path": "0"
    },
    "240": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "241": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "242": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "DUP1",
      "path": "0"
    },
    "243": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "244": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC"
    },
    "247": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "248": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "250": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "DUP1",
      "path": "0"
    },
    "251": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "REVERT",
      "path": "0"
    },
    "252": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "253": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "POP",
      "path": "0"
    },
    "254": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A"
    },
    "257": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "259": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "DUP1",
      "path": "0"
    },
    "260": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "261": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "SUB",
      "path": "0"
    },
    "262": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "264": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "265": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "LT",
      "path": "0"
    },
    "266": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "267": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x113"
    },
    "270": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "271": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "273": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "DUP1",
      "path": "0"
    },
    "274": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "REVERT",
      "path": "0"
    },
    "275": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "276": {
      "op": "POP"
    },
    "277": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "278": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x452"
    },
    "281": {
      "fn": "ListFactory.setMinimumFee",
      "jump": "i",
      "offset": [
        4501,
        4747
      ],
      "op": "JUMP",
      "path": "0"
    },
    "282": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "283": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "STOP",
      "path": "0"
    },
    "284": {
      "offset": [
        2398,
        2423
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "285": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "286": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "DUP1",
      "path": "0"
    },
    "287": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "288": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x128"
    },
    "291": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "292": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "294": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "DUP1",
      "path": "0"
    },
    "295": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "REVERT",
      "path": "0"
    },
    "296": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "297": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "POP",
      "path": "0"
    },
    "298": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131"
    },
    "301": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x546"
    },
    "304": {
      "fn": "ListFactory.setMinimumFee",
      "jump": "i",
      "offset": [
        2398,
        2423
      ],
      "op": "JUMP",
      "path": "0"
    },
    "305": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "306": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "308": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "DUP1",
      "path": "0"
    },
    "309": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "310": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "311": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "DUP3",
      "path": "0"
    },
    "312": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "313": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "314": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "315": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "DUP2",
      "path": "0"
    },
    "316": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "317": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "SUB",
      "path": "0"
    },
    "318": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "320": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "ADD",
      "path": "0"
    },
    "321": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "322": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "RETURN",
      "path": "0"
    },
    "323": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "324": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27A"
    },
    "327": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "329": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "330": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "331": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SUB",
      "path": "0"
    },
    "332": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "334": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP2",
      "path": "0"
    },
    "335": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "LT",
      "path": "0"
    },
    "336": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "337": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x159"
    },
    "340": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "341": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "343": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "344": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "REVERT",
      "path": "0"
    },
    "345": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "352": {
      "op": "SHL"
    },
    "353": {
      "op": "SUB"
    },
    "354": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP3",
      "path": "0"
    },
    "355": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "356": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "AND",
      "path": "0"
    },
    "357": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "358": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "359": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP2",
      "path": "0"
    },
    "360": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ADD",
      "path": "0"
    },
    "361": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "362": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "364": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP2",
      "path": "0"
    },
    "365": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ADD",
      "path": "0"
    },
    "366": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "368": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP3",
      "path": "0"
    },
    "369": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ADD",
      "path": "0"
    },
    "370": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "371": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x100000000"
    },
    "377": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP2",
      "path": "0"
    },
    "378": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "GT",
      "path": "0"
    },
    "379": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "380": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "383": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "384": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "386": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "387": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "REVERT",
      "path": "0"
    },
    "388": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "389": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP3",
      "path": "0"
    },
    "390": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ADD",
      "path": "0"
    },
    "391": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP4",
      "path": "0"
    },
    "392": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "394": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP3",
      "path": "0"
    },
    "395": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ADD",
      "path": "0"
    },
    "396": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "GT",
      "path": "0"
    },
    "397": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "398": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x196"
    },
    "401": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "402": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "404": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "405": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "REVERT",
      "path": "0"
    },
    "406": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "407": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "408": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "409": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "410": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "412": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ADD",
      "path": "0"
    },
    "413": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "414": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP5",
      "path": "0"
    },
    "415": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "417": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP4",
      "path": "0"
    },
    "418": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "MUL",
      "path": "0"
    },
    "419": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP5",
      "path": "0"
    },
    "420": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ADD",
      "path": "0"
    },
    "421": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "GT",
      "path": "0"
    },
    "422": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x100000000"
    },
    "428": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP4",
      "path": "0"
    },
    "429": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "GT",
      "path": "0"
    },
    "430": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "OR",
      "path": "0"
    },
    "431": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "432": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B8"
    },
    "435": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "436": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "438": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "439": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "REVERT",
      "path": "0"
    },
    "440": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "441": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "442": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "443": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "444": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "445": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "447": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "MUL",
      "path": "0"
    },
    "448": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "450": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ADD",
      "path": "0"
    },
    "451": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "453": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "454": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "455": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP2",
      "path": "0"
    },
    "456": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ADD",
      "path": "0"
    },
    "457": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "459": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "460": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "461": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "462": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "463": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "464": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "465": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP2",
      "path": "0"
    },
    "466": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP2",
      "path": "0"
    },
    "467": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "468": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "470": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ADD",
      "path": "0"
    },
    "471": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP4",
      "path": "0"
    },
    "472": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP4",
      "path": "0"
    },
    "473": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "475": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "MUL",
      "path": "0"
    },
    "476": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "477": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP3",
      "path": "0"
    },
    "478": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP5",
      "path": "0"
    },
    "479": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "480": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "482": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "483": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ADD",
      "path": "0"
    },
    "484": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "485": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "486": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "487": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "488": {
      "op": "POP"
    },
    "489": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "490": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "491": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "492": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "493": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "495": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP2",
      "path": "0"
    },
    "496": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ADD",
      "path": "0"
    },
    "497": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "498": {
      "op": "POP"
    },
    "499": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "500": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "501": {
      "op": "POP"
    },
    "502": {
      "op": "POP"
    },
    "503": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x100000000"
    },
    "509": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP2",
      "path": "0"
    },
    "510": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "GT",
      "path": "0"
    },
    "511": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "512": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x208"
    },
    "515": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "516": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "518": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "519": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "REVERT",
      "path": "0"
    },
    "520": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "521": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP3",
      "path": "0"
    },
    "522": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ADD",
      "path": "0"
    },
    "523": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP4",
      "path": "0"
    },
    "524": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "526": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP3",
      "path": "0"
    },
    "527": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ADD",
      "path": "0"
    },
    "528": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "GT",
      "path": "0"
    },
    "529": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "530": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21A"
    },
    "533": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "534": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "536": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "537": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "REVERT",
      "path": "0"
    },
    "538": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "539": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "540": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "541": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "542": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "544": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ADD",
      "path": "0"
    },
    "545": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "546": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP5",
      "path": "0"
    },
    "547": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "549": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP4",
      "path": "0"
    },
    "550": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "MUL",
      "path": "0"
    },
    "551": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP5",
      "path": "0"
    },
    "552": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ADD",
      "path": "0"
    },
    "553": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "GT",
      "path": "0"
    },
    "554": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x100000000"
    },
    "560": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP4",
      "path": "0"
    },
    "561": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "GT",
      "path": "0"
    },
    "562": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "OR",
      "path": "0"
    },
    "563": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "564": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23C"
    },
    "567": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "568": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "570": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "571": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "REVERT",
      "path": "0"
    },
    "572": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "573": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "574": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "575": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "576": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "577": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "579": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "MUL",
      "path": "0"
    },
    "580": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "582": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ADD",
      "path": "0"
    },
    "583": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "585": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "586": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "587": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP2",
      "path": "0"
    },
    "588": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ADD",
      "path": "0"
    },
    "589": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "591": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "592": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "593": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "594": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "595": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "596": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "597": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP2",
      "path": "0"
    },
    "598": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP2",
      "path": "0"
    },
    "599": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "600": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "602": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ADD",
      "path": "0"
    },
    "603": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP4",
      "path": "0"
    },
    "604": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP4",
      "path": "0"
    },
    "605": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "607": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "MUL",
      "path": "0"
    },
    "608": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "609": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP3",
      "path": "0"
    },
    "610": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP5",
      "path": "0"
    },
    "611": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "612": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "614": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "615": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ADD",
      "path": "0"
    },
    "616": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "617": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "618": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "619": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "620": {
      "op": "POP"
    },
    "621": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "622": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "623": {
      "op": "POP"
    },
    "624": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54C"
    },
    "627": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "628": {
      "op": "POP"
    },
    "629": {
      "op": "POP"
    },
    "630": {
      "op": "POP"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "fn": "ListFactory.deployPointList",
      "jump": "i",
      "offset": [
        5311,
        6254
      ],
      "op": "JUMP",
      "path": "0"
    },
    "634": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "635": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "637": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "638": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "645": {
      "op": "SHL"
    },
    "646": {
      "op": "SUB"
    },
    "647": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "648": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "649": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "AND",
      "path": "0"
    },
    "650": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP3",
      "path": "0"
    },
    "651": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "652": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "653": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "654": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "DUP2",
      "path": "0"
    },
    "655": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "656": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SUB",
      "path": "0"
    },
    "657": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "659": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "ADD",
      "path": "0"
    },
    "660": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "661": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "RETURN",
      "path": "0"
    },
    "662": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        3929,
        4022
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "663": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        3929,
        4022
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "664": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        3929,
        4022
      ],
      "op": "DUP1",
      "path": "0"
    },
    "665": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        3929,
        4022
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "666": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        3929,
        4022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A2"
    },
    "669": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        3929,
        4022
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "670": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        3929,
        4022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "672": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        3929,
        4022
      ],
      "op": "DUP1",
      "path": "0"
    },
    "673": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        3929,
        4022
      ],
      "op": "REVERT",
      "path": "0"
    },
    "674": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        3929,
        4022
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "675": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        3929,
        4022
      ],
      "op": "POP",
      "path": "0"
    },
    "676": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        3929,
        4022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131"
    },
    "679": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        3929,
        4022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E2"
    },
    "682": {
      "fn": "ListFactory.numberOfChildren",
      "jump": "i",
      "offset": [
        3929,
        4022
      ],
      "op": "JUMP",
      "path": "0"
    },
    "683": {
      "offset": [
        2251,
        2283
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "684": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2251,
        2283
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "685": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2251,
        2283
      ],
      "op": "DUP1",
      "path": "0"
    },
    "686": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2251,
        2283
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "687": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2251,
        2283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B7"
    },
    "690": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2251,
        2283
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "691": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2251,
        2283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "693": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2251,
        2283
      ],
      "op": "DUP1",
      "path": "0"
    },
    "694": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2251,
        2283
      ],
      "op": "REVERT",
      "path": "0"
    },
    "695": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2251,
        2283
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "696": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2251,
        2283
      ],
      "op": "POP",
      "path": "0"
    },
    "697": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2251,
        2283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27A"
    },
    "700": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2251,
        2283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E8"
    },
    "703": {
      "fn": "ListFactory.numberOfChildren",
      "jump": "i",
      "offset": [
        2251,
        2283
      ],
      "op": "JUMP",
      "path": "0"
    },
    "704": {
      "offset": [
        2061,
        2101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "705": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2061,
        2101
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "706": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2061,
        2101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "707": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2061,
        2101
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "708": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2061,
        2101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CC"
    },
    "711": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2061,
        2101
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "712": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2061,
        2101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "714": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2061,
        2101
      ],
      "op": "DUP1",
      "path": "0"
    },
    "715": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2061,
        2101
      ],
      "op": "REVERT",
      "path": "0"
    },
    "716": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2061,
        2101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "717": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2061,
        2101
      ],
      "op": "POP",
      "path": "0"
    },
    "718": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2061,
        2101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27A"
    },
    "721": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2061,
        2101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F7"
    },
    "724": {
      "fn": "ListFactory.numberOfChildren",
      "jump": "i",
      "offset": [
        2061,
        2101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "725": {
      "offset": [
        2575,
        2597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "726": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "727": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "728": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "729": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E1"
    },
    "732": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "733": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "735": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "736": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "REVERT",
      "path": "0"
    },
    "737": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "738": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "POP",
      "path": "0"
    },
    "739": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27A"
    },
    "742": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "744": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "745": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "746": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "SUB",
      "path": "0"
    },
    "747": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "749": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "DUP2",
      "path": "0"
    },
    "750": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "LT",
      "path": "0"
    },
    "751": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "752": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F8"
    },
    "755": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "756": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "758": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "759": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "REVERT",
      "path": "0"
    },
    "760": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "761": {
      "op": "POP"
    },
    "762": {
      "offset": [
        2575,
        2597
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "763": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x906"
    },
    "766": {
      "fn": "ListFactory.numberOfChildren",
      "jump": "i",
      "offset": [
        2575,
        2597
      ],
      "op": "JUMP",
      "path": "0"
    },
    "767": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "768": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "769": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "DUP1",
      "path": "0"
    },
    "770": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "771": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30B"
    },
    "774": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "775": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "777": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "DUP1",
      "path": "0"
    },
    "778": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "REVERT",
      "path": "0"
    },
    "779": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "780": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "POP",
      "path": "0"
    },
    "781": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A"
    },
    "784": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "786": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "DUP1",
      "path": "0"
    },
    "787": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "788": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "SUB",
      "path": "0"
    },
    "789": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "791": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "DUP2",
      "path": "0"
    },
    "792": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "LT",
      "path": "0"
    },
    "793": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "794": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x322"
    },
    "797": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "798": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "800": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "DUP1",
      "path": "0"
    },
    "801": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "REVERT",
      "path": "0"
    },
    "802": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "803": {
      "op": "POP"
    },
    "804": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "811": {
      "op": "SHL"
    },
    "812": {
      "op": "SUB"
    },
    "813": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "AND",
      "path": "0"
    },
    "814": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92D"
    },
    "817": {
      "fn": "ListFactory.setDividends",
      "jump": "i",
      "offset": [
        4848,
        5041
      ],
      "op": "JUMP",
      "path": "0"
    },
    "818": {
      "offset": [
        2664,
        2694
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "819": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2664,
        2694
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "820": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2664,
        2694
      ],
      "op": "DUP1",
      "path": "0"
    },
    "821": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2664,
        2694
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "822": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2664,
        2694
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33E"
    },
    "825": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2664,
        2694
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "826": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2664,
        2694
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "828": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2664,
        2694
      ],
      "op": "DUP1",
      "path": "0"
    },
    "829": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2664,
        2694
      ],
      "op": "REVERT",
      "path": "0"
    },
    "830": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2664,
        2694
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "831": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2664,
        2694
      ],
      "op": "POP",
      "path": "0"
    },
    "832": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2664,
        2694
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27A"
    },
    "835": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2664,
        2694
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA01"
    },
    "838": {
      "fn": "ListFactory.setDividends",
      "jump": "i",
      "offset": [
        2664,
        2694
      ],
      "op": "JUMP",
      "path": "0"
    },
    "839": {
      "offset": [
        2330,
        2355
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "840": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2330,
        2355
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "841": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2330,
        2355
      ],
      "op": "DUP1",
      "path": "0"
    },
    "842": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2330,
        2355
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "843": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2330,
        2355
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x353"
    },
    "846": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2330,
        2355
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "847": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2330,
        2355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "849": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2330,
        2355
      ],
      "op": "DUP1",
      "path": "0"
    },
    "850": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2330,
        2355
      ],
      "op": "REVERT",
      "path": "0"
    },
    "851": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2330,
        2355
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "852": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2330,
        2355
      ],
      "op": "POP",
      "path": "0"
    },
    "853": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2330,
        2355
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27A"
    },
    "856": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2330,
        2355
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA10"
    },
    "859": {
      "fn": "ListFactory.setDividends",
      "jump": "i",
      "offset": [
        2330,
        2355
      ],
      "op": "JUMP",
      "path": "0"
    },
    "860": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "861": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "862": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "DUP1",
      "path": "0"
    },
    "863": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "864": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x368"
    },
    "867": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "868": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "870": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "DUP1",
      "path": "0"
    },
    "871": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "REVERT",
      "path": "0"
    },
    "872": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "873": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "POP",
      "path": "0"
    },
    "874": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x395"
    },
    "877": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "879": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "DUP1",
      "path": "0"
    },
    "880": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "881": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "SUB",
      "path": "0"
    },
    "882": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "884": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "DUP2",
      "path": "0"
    },
    "885": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "LT",
      "path": "0"
    },
    "886": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "887": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37F"
    },
    "890": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "891": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "893": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "DUP1",
      "path": "0"
    },
    "894": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "REVERT",
      "path": "0"
    },
    "895": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "896": {
      "op": "POP"
    },
    "897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "903": {
      "op": "SHL"
    },
    "904": {
      "op": "SUB"
    },
    "905": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "DUP2",
      "path": "0"
    },
    "906": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "907": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "AND",
      "path": "0"
    },
    "908": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "909": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "911": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "ADD",
      "path": "0"
    },
    "912": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "913": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1F"
    },
    "916": {
      "fn": "ListFactory.transferAnyERC20Token",
      "jump": "i",
      "offset": [
        6451,
        6736
      ],
      "op": "JUMP",
      "path": "0"
    },
    "917": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "918": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "920": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "DUP1",
      "path": "0"
    },
    "921": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "922": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "923": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "924": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "925": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "DUP3",
      "path": "0"
    },
    "926": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "927": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "928": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "929": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "DUP2",
      "path": "0"
    },
    "930": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "931": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "SUB",
      "path": "0"
    },
    "932": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "934": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "ADD",
      "path": "0"
    },
    "935": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "936": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "RETURN",
      "path": "0"
    },
    "937": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "938": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "939": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "DUP1",
      "path": "0"
    },
    "940": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "941": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B5"
    },
    "944": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "945": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "947": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "DUP1",
      "path": "0"
    },
    "948": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "REVERT",
      "path": "0"
    },
    "949": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "950": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "POP",
      "path": "0"
    },
    "951": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A"
    },
    "954": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "956": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "DUP1",
      "path": "0"
    },
    "957": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "958": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "SUB",
      "path": "0"
    },
    "959": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "961": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "DUP2",
      "path": "0"
    },
    "962": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "LT",
      "path": "0"
    },
    "963": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "964": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CC"
    },
    "967": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "968": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "970": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "DUP1",
      "path": "0"
    },
    "971": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "REVERT",
      "path": "0"
    },
    "972": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "973": {
      "op": "POP"
    },
    "974": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "981": {
      "op": "SHL"
    },
    "982": {
      "op": "SUB"
    },
    "983": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "AND",
      "path": "0"
    },
    "984": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF3"
    },
    "987": {
      "fn": "ListFactory.deprecateFactory",
      "jump": "i",
      "offset": [
        4120,
        4400
      ],
      "op": "JUMP",
      "path": "0"
    },
    "988": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "989": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "990": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "DUP1",
      "path": "0"
    },
    "991": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "992": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E8"
    },
    "995": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "996": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "998": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "DUP1",
      "path": "0"
    },
    "999": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1000": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1001": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "POP",
      "path": "0"
    },
    "1002": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A"
    },
    "1005": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1007": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1008": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1009": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "SUB",
      "path": "0"
    },
    "1010": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1012": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1013": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "LT",
      "path": "0"
    },
    "1014": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1015": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FF"
    },
    "1018": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1019": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1021": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1022": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1023": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1024": {
      "op": "POP"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1031": {
      "op": "SHL"
    },
    "1032": {
      "op": "SUB"
    },
    "1033": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1034": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1035": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1036": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "AND",
      "path": "0"
    },
    "1037": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1038": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1040": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1041": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "ADD",
      "path": "0"
    },
    "1042": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1043": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1044": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1045": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "AND",
      "path": "0"
    },
    "1046": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1047": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1049": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "ADD",
      "path": "0"
    },
    "1050": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1051": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC19"
    },
    "1054": {
      "fn": "ListFactory.initListFactory",
      "jump": "i",
      "offset": [
        3443,
        3798
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1055": {
      "offset": [
        2485,
        2524
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1056": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1057": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1058": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1059": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42B"
    },
    "1062": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1063": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1065": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1066": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1067": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1068": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "POP",
      "path": "0"
    },
    "1069": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x395"
    },
    "1072": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1074": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1075": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1076": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "SUB",
      "path": "0"
    },
    "1077": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1079": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1080": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "LT",
      "path": "0"
    },
    "1081": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1082": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x442"
    },
    "1085": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1086": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1088": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1089": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1090": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1091": {
      "op": "POP"
    },
    "1092": {
      "offset": [
        2485,
        2524
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1099": {
      "op": "SHL"
    },
    "1100": {
      "op": "SUB"
    },
    "1101": {
      "offset": [
        2485,
        2524
      ],
      "op": "AND",
      "path": "0"
    },
    "1102": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC9C"
    },
    "1105": {
      "fn": "ListFactory.initListFactory",
      "jump": "i",
      "offset": [
        2485,
        2524
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1106": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4501,
        4747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1107": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4586
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x0"
    },
    "1109": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4586
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1110": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1112": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1113": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1114": {
      "op": "PUSH4",
      "value": "0xC395FCB3"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1121": {
      "op": "SHL"
    },
    "1122": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1123": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1124": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4600,
        4610
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1125": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1127": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1128": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "ADD",
      "path": "0"
    },
    "1129": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1130": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1131": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1138": {
      "op": "SHL"
    },
    "1139": {
      "op": "SUB"
    },
    "1140": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4586
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1141": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4586
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1142": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4586
      ],
      "op": "AND",
      "path": "0"
    },
    "1143": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4586
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1144": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4599
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC395FCB3"
    },
    "1149": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4599
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1150": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1152": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1153": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1154": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "ADD",
      "path": "0"
    },
    "1155": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1156": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1158": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1159": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1160": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1161": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1162": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1163": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1164": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "SUB",
      "path": "0"
    },
    "1165": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "ADD",
      "path": "0"
    },
    "1166": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1167": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4586
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1168": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1169": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1170": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1171": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1172": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1173": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49D"
    },
    "1176": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1177": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1179": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1180": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1181": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1182": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "POP",
      "path": "0"
    },
    "1183": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "GAS",
      "path": "0"
    },
    "1184": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "1185": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1186": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1187": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1188": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B1"
    },
    "1191": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1192": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1193": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1195": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1196": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1197": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1198": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1200": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1201": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1202": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "POP",
      "path": "0"
    },
    "1203": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "POP",
      "path": "0"
    },
    "1204": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "POP",
      "path": "0"
    },
    "1205": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "POP",
      "path": "0"
    },
    "1206": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1208": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1209": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1210": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1212": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1213": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "LT",
      "path": "0"
    },
    "1214": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1215": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C7"
    },
    "1218": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1219": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1221": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1222": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1223": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1224": {
      "op": "POP"
    },
    "1225": {
      "branch": 32,
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4572,
        4611
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1226": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x504"
    },
    "1229": {
      "branch": 32,
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1230": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1232": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1233": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1239": {
      "op": "SHL"
    },
    "1240": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1241": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1242": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1244": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "ADD",
      "path": "0"
    },
    "1245": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1246": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1247": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1249": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "ADD",
      "path": "0"
    },
    "1250": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1251": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1252": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "SUB",
      "path": "0"
    },
    "1253": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1254": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1255": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x21"
    },
    "1257": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1258": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1259": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1261": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "ADD",
      "path": "0"
    },
    "1262": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1263": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE26"
    },
    "1266": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x21"
    },
    "1268": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1269": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "1270": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1272": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "ADD",
      "path": "0"
    },
    "1273": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1274": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "POP",
      "path": "0"
    },
    "1275": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "POP",
      "path": "0"
    },
    "1276": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1278": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1279": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1280": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1281": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "SUB",
      "path": "0"
    },
    "1282": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1283": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1284": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4564,
        4649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1285": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4682,
        4692
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x3"
    },
    "1287": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4682,
        4692
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1288": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1290": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1291": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1292": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1293": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1294": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1295": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1297": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1298": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "ADD",
      "path": "0"
    },
    "1299": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1300": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1301": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1302": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1303": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1304": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xCC2F49C6214278AE5862935EFF953448E8E69118D10ABFAFAF63EA6AA35255CB"
    },
    "1337": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1338": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1339": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1340": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "SUB",
      "path": "0"
    },
    "1341": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1342": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1343": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "ADD",
      "path": "0"
    },
    "1344": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1345": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4664,
        4706
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1346": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4716,
        4726
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x3"
    },
    "1348": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        4716,
        4740
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1349": {
      "fn": "ListFactory.setMinimumFee",
      "jump": "o",
      "offset": [
        4501,
        4747
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1350": {
      "offset": [
        2398,
        2423
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1351": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1353": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1354": {
      "fn": "ListFactory.setMinimumFee",
      "offset": [
        2398,
        2423
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1355": {
      "fn": "ListFactory.setMinimumFee",
      "jump": "o",
      "offset": [
        2398,
        2423
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1356": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1357": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5475,
        5492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1359": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5529,
        5539
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x3"
    },
    "1361": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5529,
        5539
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1362": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5516,
        5525
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1363": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5516,
        5539
      ],
      "op": "LT",
      "path": "0"
    },
    "1364": {
      "branch": 33,
      "fn": "ListFactory.deployPointList",
      "offset": [
        5516,
        5539
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1365": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5508,
        5540
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55D"
    },
    "1368": {
      "branch": 33,
      "fn": "ListFactory.deployPointList",
      "offset": [
        5508,
        5540
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1369": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5508,
        5540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1371": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5508,
        5540
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1372": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5508,
        5540
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1373": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5508,
        5540
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1374": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5574,
        5591
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x1"
    },
    "1376": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5574,
        5591
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1377": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5562,
        5592
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x572"
    },
    "1380": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5562,
        5592
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1387": {
      "op": "SHL"
    },
    "1388": {
      "op": "SUB"
    },
    "1389": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5574,
        5591
      ],
      "op": "AND",
      "path": "0"
    },
    "1390": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5562,
        5573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB1"
    },
    "1393": {
      "fn": "ListFactory.deployPointList",
      "jump": "i",
      "offset": [
        5562,
        5592
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1394": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5562,
        5592
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1395": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5606,
        5622
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1396": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5606,
        5622
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1397": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5550,
        5592
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1398": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5550,
        5592
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1399": {
      "op": "POP"
    },
    "1400": {
      "branch": 34,
      "fn": "ListFactory.deployPointList",
      "offset": [
        5606,
        5626
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1401": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5602,
        5989
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x788"
    },
    "1404": {
      "branch": 34,
      "fn": "ListFactory.deployPointList",
      "offset": [
        5602,
        5989
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1405": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x40"
    },
    "1407": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1408": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1409": {
      "op": "PUSH4",
      "value": "0x283BA19B"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1416": {
      "op": "SHL"
    },
    "1417": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1418": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1419": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5686,
        5690
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1420": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1422": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1423": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "ADD",
      "path": "0"
    },
    "1424": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1425": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1426": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1433": {
      "op": "SHL"
    },
    "1434": {
      "op": "SUB"
    },
    "1435": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5677
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1436": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5677
      ],
      "op": "AND",
      "path": "0"
    },
    "1437": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5677
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1438": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5677
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x283BA19B"
    },
    "1443": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5677
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1444": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1446": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1447": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1448": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "ADD",
      "path": "0"
    },
    "1449": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1452": {
      "op": "SWAP3"
    },
    "1453": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1454": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1455": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1456": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1457": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "SUB",
      "path": "0"
    },
    "1458": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "ADD",
      "path": "0"
    },
    "1459": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1460": {
      "op": "DUP4"
    },
    "1461": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5677
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1462": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1463": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1464": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1465": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1466": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1467": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C3"
    },
    "1470": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1471": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1473": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1474": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1475": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1476": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "POP",
      "path": "0"
    },
    "1477": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "GAS",
      "path": "0"
    },
    "1478": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "CALL",
      "path": "0"
    },
    "1479": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1480": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1481": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1482": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D7"
    },
    "1485": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1486": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1487": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1489": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1490": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1491": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1492": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1494": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1495": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1496": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "POP",
      "path": "0"
    },
    "1497": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "POP",
      "path": "0"
    },
    "1498": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "POP",
      "path": "0"
    },
    "1499": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5642,
        5692
      ],
      "op": "POP",
      "path": "0"
    },
    "1500": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5717,
        5726
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 7
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1507": {
      "op": "SHL"
    },
    "1508": {
      "op": "SUB"
    },
    "1509": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5737
      ],
      "op": "AND",
      "path": "0"
    },
    "1510": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5737
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9A80C4A1"
    },
    "1515": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5738,
        5747
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1516": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5749,
        5757
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1517": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1519": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1520": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1521": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1526": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "AND",
      "path": "0"
    },
    "1527": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "1529": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "SHL",
      "path": "0"
    },
    "1530": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1531": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1532": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1534": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "ADD",
      "path": "0"
    },
    "1535": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1536": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1537": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1539": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "ADD",
      "path": "0"
    },
    "1540": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1541": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1543": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "ADD",
      "path": "0"
    },
    "1544": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1545": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1546": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "SUB",
      "path": "0"
    },
    "1547": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1548": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1549": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1550": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1551": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1552": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1553": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1554": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1555": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1557": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "ADD",
      "path": "0"
    },
    "1558": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1559": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1560": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1561": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1562": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1563": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1565": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "ADD",
      "path": "0"
    },
    "1566": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1567": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1569": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "MUL",
      "path": "0"
    },
    "1570": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1571": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1572": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1573": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1575": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1576": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1577": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1578": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "LT",
      "path": "0"
    },
    "1579": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1580": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63F"
    },
    "1583": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1584": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1585": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1586": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "ADD",
      "path": "0"
    },
    "1587": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1588": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1589": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1590": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "ADD",
      "path": "0"
    },
    "1591": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1592": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1594": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "ADD",
      "path": "0"
    },
    "1595": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x627"
    },
    "1598": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1599": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1600": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1601": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1602": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1603": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1604": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1605": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1606": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "ADD",
      "path": "0"
    },
    "1607": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1608": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1609": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "SUB",
      "path": "0"
    },
    "1610": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1611": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1612": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1613": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1614": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1615": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1616": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1617": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1618": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1620": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "ADD",
      "path": "0"
    },
    "1621": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1622": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1623": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1624": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1625": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1626": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1628": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "ADD",
      "path": "0"
    },
    "1629": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1630": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1632": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "MUL",
      "path": "0"
    },
    "1633": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1634": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1635": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1636": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1638": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1639": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1640": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1641": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "LT",
      "path": "0"
    },
    "1642": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1643": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67E"
    },
    "1646": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1647": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1648": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1649": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "ADD",
      "path": "0"
    },
    "1650": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1651": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1652": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1653": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "ADD",
      "path": "0"
    },
    "1654": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1655": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1657": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "ADD",
      "path": "0"
    },
    "1658": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x666"
    },
    "1661": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1662": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1663": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1664": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1665": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1666": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1667": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1668": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1669": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "ADD",
      "path": "0"
    },
    "1670": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1671": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1672": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1673": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1674": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1675": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1676": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1678": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1680": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1681": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1682": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1683": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "SUB",
      "path": "0"
    },
    "1684": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1685": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1687": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1688": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1689": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1690": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1691": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1692": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1693": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A5"
    },
    "1696": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1697": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1699": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1700": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1701": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1702": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1703": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "GAS",
      "path": "0"
    },
    "1704": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "CALL",
      "path": "0"
    },
    "1705": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1706": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1707": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1708": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B9"
    },
    "1711": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1712": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1713": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1715": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1716": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1717": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1718": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1720": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1721": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1722": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1723": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1724": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1725": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5706,
        5758
      ],
      "op": "POP",
      "path": "0"
    },
    "1726": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5791,
        5800
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 8
    },
    "1727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1733": {
      "op": "SHL"
    },
    "1734": {
      "op": "SUB"
    },
    "1735": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5814
      ],
      "op": "AND",
      "path": "0"
    },
    "1736": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5814
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6595171C"
    },
    "1741": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5815,
        5825
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1742": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1744": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1745": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1746": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1751": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "AND",
      "path": "0"
    },
    "1752": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "1754": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "SHL",
      "path": "0"
    },
    "1755": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1756": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1757": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1759": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "ADD",
      "path": "0"
    },
    "1760": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1761": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1768": {
      "op": "SHL"
    },
    "1769": {
      "op": "SUB"
    },
    "1770": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "AND",
      "path": "0"
    },
    "1771": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1772": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1773": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1775": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "ADD",
      "path": "0"
    },
    "1776": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1777": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "POP",
      "path": "0"
    },
    "1778": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "POP",
      "path": "0"
    },
    "1779": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1781": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1783": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1784": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1785": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1786": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "SUB",
      "path": "0"
    },
    "1787": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1788": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1790": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1791": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1792": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1793": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1794": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1795": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1796": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70C"
    },
    "1799": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1800": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1802": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1803": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1804": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1805": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "POP",
      "path": "0"
    },
    "1806": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "GAS",
      "path": "0"
    },
    "1807": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "CALL",
      "path": "0"
    },
    "1808": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1809": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1810": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1811": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x720"
    },
    "1814": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1815": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1816": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1818": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1819": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1820": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1821": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1823": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1824": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5772,
        5826
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1825": {
      "op": "POP"
    },
    "1826": {
      "op": "POP"
    },
    "1827": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x40"
    },
    "1829": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1830": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1831": {
      "op": "PUSH4",
      "value": "0xDCCFE31"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "1838": {
      "op": "SHL"
    },
    "1839": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1840": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1841": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5894,
        5898
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1842": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1844": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1845": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "ADD",
      "path": "0"
    },
    "1846": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1847": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1848": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1855": {
      "op": "SHL"
    },
    "1856": {
      "op": "SUB"
    },
    "1857": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5885
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1858": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5885
      ],
      "op": "AND",
      "path": "0"
    },
    "1859": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5885
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1860": {
      "op": "POP"
    },
    "1861": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5885
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDCCFE310"
    },
    "1866": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5885
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1867": {
      "op": "POP"
    },
    "1868": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1870": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1871": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1872": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "ADD",
      "path": "0"
    },
    "1873": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1876": {
      "op": "SWAP3"
    },
    "1877": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1878": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1879": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1880": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1881": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "SUB",
      "path": "0"
    },
    "1882": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "ADD",
      "path": "0"
    },
    "1883": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1884": {
      "op": "DUP4"
    },
    "1885": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5885
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1886": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1887": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1888": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1889": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1890": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1891": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76B"
    },
    "1894": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1895": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1897": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1898": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1899": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1900": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "POP",
      "path": "0"
    },
    "1901": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "GAS",
      "path": "0"
    },
    "1902": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "CALL",
      "path": "0"
    },
    "1903": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1904": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1905": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1906": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77F"
    },
    "1909": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1910": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1911": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1913": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1914": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1915": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1916": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1918": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1919": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1920": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "POP",
      "path": "0"
    },
    "1921": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "POP",
      "path": "0"
    },
    "1922": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "POP",
      "path": "0"
    },
    "1923": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5840,
        5900
      ],
      "op": "POP",
      "path": "0"
    },
    "1924": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5602,
        5989
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F0"
    },
    "1927": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5602,
        5989
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1928": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5602,
        5989
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1929": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5942,
        5951
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 10
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1936": {
      "op": "SHL"
    },
    "1937": {
      "op": "SUB"
    },
    "1938": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5966
      ],
      "op": "AND",
      "path": "0"
    },
    "1939": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5966
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x283BA19B"
    },
    "1944": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5967,
        5977
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1945": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1947": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1948": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1949": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1954": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "AND",
      "path": "0"
    },
    "1955": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "1957": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "SHL",
      "path": "0"
    },
    "1958": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1959": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1960": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1962": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "ADD",
      "path": "0"
    },
    "1963": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1964": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1971": {
      "op": "SHL"
    },
    "1972": {
      "op": "SUB"
    },
    "1973": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "AND",
      "path": "0"
    },
    "1974": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1975": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1976": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1978": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "ADD",
      "path": "0"
    },
    "1979": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1980": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "POP",
      "path": "0"
    },
    "1981": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "POP",
      "path": "0"
    },
    "1982": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1984": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1986": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1987": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1988": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1989": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "SUB",
      "path": "0"
    },
    "1990": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1991": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1993": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1994": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1995": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1996": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1997": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1998": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1999": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D7"
    },
    "2002": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2003": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2005": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2006": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2007": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2008": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "POP",
      "path": "0"
    },
    "2009": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "GAS",
      "path": "0"
    },
    "2010": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "CALL",
      "path": "0"
    },
    "2011": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2012": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2013": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2014": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7EB"
    },
    "2017": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2018": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2019": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2021": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2022": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2023": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2024": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2026": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2027": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2028": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "POP",
      "path": "0"
    },
    "2029": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "POP",
      "path": "0"
    },
    "2030": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "POP",
      "path": "0"
    },
    "2031": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5931,
        5978
      ],
      "op": "POP",
      "path": "0"
    },
    "2032": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5602,
        5989
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2039": {
      "op": "SHL"
    },
    "2040": {
      "op": "SUB"
    },
    "2041": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6025
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 11
    },
    "2042": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6025
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2043": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6025
      ],
      "op": "AND",
      "path": "0"
    },
    "2044": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2046": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6025
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2047": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6025
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2048": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6025
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2049": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6005
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2051": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2053": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6025
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2054": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6025
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2055": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6025
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2056": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2058": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6025
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2059": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6025
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2060": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6025
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2061": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6032
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2062": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6032
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2065": {
      "op": "NOT"
    },
    "2066": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6032
      ],
      "op": "AND",
      "path": "0"
    },
    "2067": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6028,
        6032
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2069": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6032
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2070": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6032
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2071": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6032
      ],
      "op": "OR",
      "path": "0"
    },
    "2072": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6032
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2073": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6032
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2074": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6032
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2075": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6042,
        6047
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x5"
    },
    "2077": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6042,
        6072
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2078": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6042,
        6072
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2079": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6042,
        6072
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2080": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6042,
        6072
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2081": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6042,
        6072
      ],
      "op": "ADD",
      "path": "0"
    },
    "2082": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6042,
        6072
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2083": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6042,
        6072
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2084": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6042,
        6072
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2085": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6042,
        6072
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2086": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6042,
        6072
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "2119": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6042,
        6072
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2120": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6042,
        6072
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2121": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6042,
        6072
      ],
      "op": "ADD",
      "path": "0"
    },
    "2122": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6042,
        6072
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2123": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6042,
        6072
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2130": {
      "op": "SHL"
    },
    "2131": {
      "op": "SUB"
    },
    "2132": {
      "op": "NOT"
    },
    "2133": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6042,
        6072
      ],
      "op": "AND",
      "path": "0"
    },
    "2134": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6042,
        6072
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2135": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6042,
        6072
      ],
      "op": "OR",
      "path": "0"
    },
    "2136": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6042,
        6072
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2137": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6042,
        6072
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2138": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6137,
        6154
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 13
    },
    "2139": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6137,
        6154
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2140": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2141": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2142": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6137,
        6154
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2143": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6137,
        6154
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2144": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6137,
        6154
      ],
      "op": "AND",
      "path": "0"
    },
    "2145": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2146": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2147": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2148": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2149": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "AND",
      "path": "0"
    },
    "2150": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2151": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2152": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "ADD",
      "path": "0"
    },
    "2153": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2154": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2155": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2156": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6025
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2157": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5998,
        6025
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2158": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6105,
        6115
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2159": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6105,
        6115
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2160": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8A13771D198709940307FB40397206144CAF6DFEF0F59C2951C91C72E9844454"
    },
    "2193": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2194": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2195": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2196": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2197": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "SUB",
      "path": "0"
    },
    "2198": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2199": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2200": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "ADD",
      "path": "0"
    },
    "2201": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2202": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6087,
        6167
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2203": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6181,
        6190
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2204": {
      "branch": 35,
      "fn": "ListFactory.deployPointList",
      "offset": [
        6181,
        6194
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2205": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6177,
        6248
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8DB"
    },
    "2208": {
      "branch": 35,
      "fn": "ListFactory.deployPointList",
      "offset": [
        6177,
        6248
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2209": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6217
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x6"
    },
    "2211": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6217
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2212": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2214": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2221": {
      "op": "SHL"
    },
    "2222": {
      "op": "SUB"
    },
    "2223": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6217
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2224": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6217
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2225": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6217
      ],
      "op": "AND",
      "path": "0"
    },
    "2226": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6217
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2227": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6227,
        6236
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2228": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2229": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2230": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "2233": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "MUL",
      "path": "0"
    },
    "2234": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2235": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2237": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2238": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6217
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2239": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2240": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6227,
        6236
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2241": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6217
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2242": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2243": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "CALL",
      "path": "0"
    },
    "2244": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2245": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "POP",
      "path": "0"
    },
    "2246": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "POP",
      "path": "0"
    },
    "2247": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "POP",
      "path": "0"
    },
    "2248": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "POP",
      "path": "0"
    },
    "2249": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2250": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2251": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2252": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D9"
    },
    "2255": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2256": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2257": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2259": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2260": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2261": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2262": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2264": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2265": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2266": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6210,
        6237
      ],
      "op": "POP",
      "path": "0"
    },
    "2267": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        6177,
        6248
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2268": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2269": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2270": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "POP",
      "path": "0"
    },
    "2271": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "POP",
      "path": "0"
    },
    "2272": {
      "fn": "ListFactory.deployPointList",
      "offset": [
        5311,
        6254
      ],
      "op": "POP",
      "path": "0"
    },
    "2273": {
      "fn": "ListFactory.deployPointList",
      "jump": "o",
      "offset": [
        5311,
        6254
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2274": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        3929,
        4022
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2275": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        4003,
        4008
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x5"
    },
    "2277": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        4003,
        4015
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2278": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        3929,
        4022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2279": {
      "fn": "ListFactory.numberOfChildren",
      "jump": "o",
      "offset": [
        3929,
        4022
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2280": {
      "offset": [
        2251,
        2283
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2281": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2251,
        2283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2283": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2251,
        2283
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2290": {
      "op": "SHL"
    },
    "2291": {
      "op": "SUB"
    },
    "2292": {
      "offset": [
        2251,
        2283
      ],
      "op": "AND",
      "path": "0"
    },
    "2293": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2251,
        2283
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2294": {
      "fn": "ListFactory.numberOfChildren",
      "jump": "o",
      "offset": [
        2251,
        2283
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2295": {
      "offset": [
        2061,
        2101
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2296": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2061,
        2101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2298": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2061,
        2101
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2305": {
      "op": "SHL"
    },
    "2306": {
      "op": "SUB"
    },
    "2307": {
      "offset": [
        2061,
        2101
      ],
      "op": "AND",
      "path": "0"
    },
    "2308": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2061,
        2101
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2309": {
      "fn": "ListFactory.numberOfChildren",
      "jump": "o",
      "offset": [
        2061,
        2101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2310": {
      "offset": [
        2575,
        2597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2311": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2313": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2314": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2315": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2316": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2317": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "LT",
      "path": "0"
    },
    "2318": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x913"
    },
    "2321": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2322": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "INVALID",
      "path": "0"
    },
    "2323": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2324": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2326": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2327": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2328": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2329": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2331": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2332": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2333": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2334": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "ADD",
      "path": "0"
    },
    "2335": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2342": {
      "op": "SHL"
    },
    "2343": {
      "op": "SUB"
    },
    "2344": {
      "offset": [
        2575,
        2597
      ],
      "op": "AND",
      "path": "0"
    },
    "2345": {
      "fn": "ListFactory.numberOfChildren",
      "offset": [
        2575,
        2597
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2346": {
      "op": "POP"
    },
    "2347": {
      "offset": [
        2575,
        2597
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2348": {
      "fn": "ListFactory.numberOfChildren",
      "jump": "o",
      "offset": [
        2575,
        2597
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2349": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4848,
        5041
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2350": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4938
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x0"
    },
    "2352": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4938
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2353": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2355": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2356": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2357": {
      "op": "PUSH4",
      "value": "0xC395FCB3"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2364": {
      "op": "SHL"
    },
    "2365": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2366": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2367": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4952,
        4962
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2368": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2370": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2371": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "ADD",
      "path": "0"
    },
    "2372": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2373": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2374": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2381": {
      "op": "SHL"
    },
    "2382": {
      "op": "SUB"
    },
    "2383": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4938
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2384": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4938
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2385": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4938
      ],
      "op": "AND",
      "path": "0"
    },
    "2386": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4938
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2387": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4951
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC395FCB3"
    },
    "2392": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4951
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2393": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2395": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2396": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2397": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "ADD",
      "path": "0"
    },
    "2398": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2399": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2401": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2402": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2403": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2404": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2405": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2406": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2407": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "SUB",
      "path": "0"
    },
    "2408": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "ADD",
      "path": "0"
    },
    "2409": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2410": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4938
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2411": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2412": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "2413": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2414": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2415": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2416": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x978"
    },
    "2419": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2420": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2422": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2423": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2424": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2425": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "POP",
      "path": "0"
    },
    "2426": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "GAS",
      "path": "0"
    },
    "2427": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2428": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2429": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2430": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2431": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98C"
    },
    "2434": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2435": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2436": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2438": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2439": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2440": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2441": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2443": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2444": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2445": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "POP",
      "path": "0"
    },
    "2446": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "POP",
      "path": "0"
    },
    "2447": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "POP",
      "path": "0"
    },
    "2448": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "POP",
      "path": "0"
    },
    "2449": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2451": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2452": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2453": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2455": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2456": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "LT",
      "path": "0"
    },
    "2457": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2458": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A2"
    },
    "2461": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2462": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2464": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2465": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2466": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2467": {
      "op": "POP"
    },
    "2468": {
      "branch": 36,
      "fn": "ListFactory.setDividends",
      "offset": [
        4924,
        4963
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2469": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DF"
    },
    "2472": {
      "branch": 36,
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2473": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2475": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2476": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2482": {
      "op": "SHL"
    },
    "2483": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2484": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2485": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2487": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "ADD",
      "path": "0"
    },
    "2488": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2489": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2490": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2492": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "ADD",
      "path": "0"
    },
    "2493": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2494": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2495": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "SUB",
      "path": "0"
    },
    "2496": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2497": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2498": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x26"
    },
    "2500": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2501": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2502": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2504": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "ADD",
      "path": "0"
    },
    "2505": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2506": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE6B"
    },
    "2509": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x26"
    },
    "2511": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2512": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "2513": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2515": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "ADD",
      "path": "0"
    },
    "2516": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2517": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "POP",
      "path": "0"
    },
    "2518": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "POP",
      "path": "0"
    },
    "2519": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2521": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2522": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2523": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2524": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "SUB",
      "path": "0"
    },
    "2525": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2526": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2527": {
      "fn": "ListFactory.setDividends",
      "offset": [
        4916,
        5006
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2528": {
      "fn": "ListFactory.setDividends",
      "offset": [
        5016,
        5023
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x6"
    },
    "2530": {
      "fn": "ListFactory.setDividends",
      "offset": [
        5016,
        5034
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2531": {
      "fn": "ListFactory.setDividends",
      "offset": [
        5016,
        5034
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2538": {
      "op": "SHL"
    },
    "2539": {
      "op": "SUB"
    },
    "2540": {
      "op": "NOT"
    },
    "2541": {
      "fn": "ListFactory.setDividends",
      "offset": [
        5016,
        5034
      ],
      "op": "AND",
      "path": "0"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2548": {
      "op": "SHL"
    },
    "2549": {
      "op": "SUB"
    },
    "2550": {
      "fn": "ListFactory.setDividends",
      "offset": [
        5016,
        5034
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2551": {
      "fn": "ListFactory.setDividends",
      "offset": [
        5016,
        5034
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2552": {
      "fn": "ListFactory.setDividends",
      "offset": [
        5016,
        5034
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2553": {
      "fn": "ListFactory.setDividends",
      "offset": [
        5016,
        5034
      ],
      "op": "AND",
      "path": "0"
    },
    "2554": {
      "fn": "ListFactory.setDividends",
      "offset": [
        5016,
        5034
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2555": {
      "fn": "ListFactory.setDividends",
      "offset": [
        5016,
        5034
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2556": {
      "fn": "ListFactory.setDividends",
      "offset": [
        5016,
        5034
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2557": {
      "fn": "ListFactory.setDividends",
      "offset": [
        5016,
        5034
      ],
      "op": "OR",
      "path": "0"
    },
    "2558": {
      "fn": "ListFactory.setDividends",
      "offset": [
        5016,
        5034
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2559": {
      "fn": "ListFactory.setDividends",
      "offset": [
        5016,
        5034
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2560": {
      "fn": "ListFactory.setDividends",
      "jump": "o",
      "offset": [
        4848,
        5041
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2561": {
      "offset": [
        2664,
        2694
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2562": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2664,
        2694
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2564": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2664,
        2694
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2571": {
      "op": "SHL"
    },
    "2572": {
      "op": "SUB"
    },
    "2573": {
      "offset": [
        2664,
        2694
      ],
      "op": "AND",
      "path": "0"
    },
    "2574": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2664,
        2694
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2575": {
      "fn": "ListFactory.setDividends",
      "jump": "o",
      "offset": [
        2664,
        2694
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2576": {
      "offset": [
        2330,
        2355
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2577": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2330,
        2355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2579": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2330,
        2355
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2586": {
      "op": "SHL"
    },
    "2587": {
      "op": "SUB"
    },
    "2588": {
      "offset": [
        2330,
        2355
      ],
      "op": "AND",
      "path": "0"
    },
    "2589": {
      "fn": "ListFactory.setDividends",
      "offset": [
        2330,
        2355
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2590": {
      "fn": "ListFactory.setDividends",
      "jump": "o",
      "offset": [
        2330,
        2355
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2591": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2592": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6540,
        6552
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2594": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6586
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 18
    },
    "2595": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6586
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2596": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2598": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2599": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2600": {
      "op": "PUSH4",
      "value": "0xC395FCB3"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2607": {
      "op": "SHL"
    },
    "2608": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2609": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2610": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6600,
        6610
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2611": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2613": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2614": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "ADD",
      "path": "0"
    },
    "2615": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2616": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2617": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2624": {
      "op": "SHL"
    },
    "2625": {
      "op": "SUB"
    },
    "2626": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6586
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2627": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6586
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2628": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6586
      ],
      "op": "AND",
      "path": "0"
    },
    "2629": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6586
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2630": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6599
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC395FCB3"
    },
    "2635": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6599
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2636": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2638": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2639": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2640": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "ADD",
      "path": "0"
    },
    "2641": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2642": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2644": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2645": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2646": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2647": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2648": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2649": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2650": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "SUB",
      "path": "0"
    },
    "2651": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "ADD",
      "path": "0"
    },
    "2652": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2653": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6586
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2654": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2655": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "2656": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2657": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2658": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2659": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA6B"
    },
    "2662": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2663": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2665": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2666": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2667": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2668": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "POP",
      "path": "0"
    },
    "2669": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "GAS",
      "path": "0"
    },
    "2670": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2671": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2672": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2673": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2674": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA7F"
    },
    "2677": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2678": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2679": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2681": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2682": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2683": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2684": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2686": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2687": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2688": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "POP",
      "path": "0"
    },
    "2689": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "POP",
      "path": "0"
    },
    "2690": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "POP",
      "path": "0"
    },
    "2691": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "POP",
      "path": "0"
    },
    "2692": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2694": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2695": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2696": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2698": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2699": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "LT",
      "path": "0"
    },
    "2700": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2701": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA95"
    },
    "2704": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2705": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2707": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2708": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2709": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2710": {
      "op": "POP"
    },
    "2711": {
      "branch": 37,
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6572,
        6611
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2712": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD2"
    },
    "2715": {
      "branch": 37,
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2716": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2718": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2719": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2723": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2725": {
      "op": "SHL"
    },
    "2726": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2727": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2728": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2730": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "ADD",
      "path": "0"
    },
    "2731": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2732": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2733": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2735": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "ADD",
      "path": "0"
    },
    "2736": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2737": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2738": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "SUB",
      "path": "0"
    },
    "2739": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2740": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2741": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2743": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2744": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2745": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2747": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "ADD",
      "path": "0"
    },
    "2748": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2749": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE47"
    },
    "2752": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2754": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2755": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "2756": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2758": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "ADD",
      "path": "0"
    },
    "2759": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2760": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "POP",
      "path": "0"
    },
    "2761": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "POP",
      "path": "0"
    },
    "2762": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2764": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2765": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2766": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2767": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "SUB",
      "path": "0"
    },
    "2768": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2769": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2770": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6564,
        6652
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2771": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6691,
        6698
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x6"
    },
    "2773": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6691,
        6698
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2774": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6662,
        6708
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAEA"
    },
    "2777": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6662,
        6708
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2778": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6676,
        6689
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2779": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6676,
        6689
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2786": {
      "op": "SHL"
    },
    "2787": {
      "op": "SUB"
    },
    "2788": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6691,
        6698
      ],
      "op": "AND",
      "path": "0"
    },
    "2789": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6700,
        6707
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2790": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6662,
        6675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD03"
    },
    "2793": {
      "fn": "ListFactory.transferAnyERC20Token",
      "jump": "i",
      "offset": [
        6662,
        6708
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2794": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6662,
        6708
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2795": {
      "op": "POP"
    },
    "2796": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6725,
        6729
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x1"
    },
    "2798": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2799": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2800": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "POP",
      "path": "0"
    },
    "2801": {
      "fn": "ListFactory.transferAnyERC20Token",
      "offset": [
        6451,
        6736
      ],
      "op": "POP",
      "path": "0"
    },
    "2802": {
      "fn": "ListFactory.transferAnyERC20Token",
      "jump": "o",
      "offset": [
        6451,
        6736
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2803": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4120,
        4400
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2804": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4208
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x0"
    },
    "2806": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4208
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2807": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2809": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2810": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2811": {
      "op": "PUSH4",
      "value": "0xC395FCB3"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2818": {
      "op": "SHL"
    },
    "2819": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2820": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2821": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4222,
        4232
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2822": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2824": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2825": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "ADD",
      "path": "0"
    },
    "2826": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2827": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2828": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2835": {
      "op": "SHL"
    },
    "2836": {
      "op": "SUB"
    },
    "2837": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4208
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2838": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4208
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2839": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4208
      ],
      "op": "AND",
      "path": "0"
    },
    "2840": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4208
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2841": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4221
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC395FCB3"
    },
    "2846": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4221
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2847": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2849": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2850": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2851": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "ADD",
      "path": "0"
    },
    "2852": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2853": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2855": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2856": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2857": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2858": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2859": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2860": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2861": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "SUB",
      "path": "0"
    },
    "2862": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "ADD",
      "path": "0"
    },
    "2863": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2864": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4208
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2865": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2866": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "2867": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2868": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2869": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2870": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB3E"
    },
    "2873": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2874": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2876": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2877": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2878": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2879": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "POP",
      "path": "0"
    },
    "2880": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "GAS",
      "path": "0"
    },
    "2881": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2882": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2883": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2884": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2885": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB52"
    },
    "2888": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2889": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2890": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2892": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2893": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2894": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2895": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2897": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2898": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2899": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "POP",
      "path": "0"
    },
    "2900": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "POP",
      "path": "0"
    },
    "2901": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "POP",
      "path": "0"
    },
    "2902": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "POP",
      "path": "0"
    },
    "2903": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2905": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2906": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2907": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2909": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2910": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "LT",
      "path": "0"
    },
    "2911": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2912": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB68"
    },
    "2915": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2916": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2918": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2919": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2920": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2921": {
      "op": "POP"
    },
    "2922": {
      "branch": 38,
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4194,
        4233
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2923": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA5"
    },
    "2926": {
      "branch": 38,
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2927": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2929": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2930": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2934": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2936": {
      "op": "SHL"
    },
    "2937": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2938": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2939": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2941": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "ADD",
      "path": "0"
    },
    "2942": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2943": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2944": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2946": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "ADD",
      "path": "0"
    },
    "2947": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2948": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2949": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "SUB",
      "path": "0"
    },
    "2950": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2951": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2952": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x21"
    },
    "2954": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2955": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2956": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2958": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "ADD",
      "path": "0"
    },
    "2959": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2960": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE26"
    },
    "2963": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x21"
    },
    "2965": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2966": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "2967": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2969": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "ADD",
      "path": "0"
    },
    "2970": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2971": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "POP",
      "path": "0"
    },
    "2972": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "POP",
      "path": "0"
    },
    "2973": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2975": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2976": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2977": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2978": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "SUB",
      "path": "0"
    },
    "2979": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2980": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2981": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4186,
        4271
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2982": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4289,
        4299
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x2"
    },
    "2984": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4289,
        4299
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2991": {
      "op": "SHL"
    },
    "2992": {
      "op": "SUB"
    },
    "2993": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4289,
        4299
      ],
      "op": "AND",
      "path": "0"
    },
    "2994": {
      "branch": 39,
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4289,
        4313
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2995": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4281,
        4314
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBBB"
    },
    "2998": {
      "branch": 39,
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4281,
        4314
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2999": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4281,
        4314
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3001": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4281,
        4314
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3002": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4281,
        4314
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3003": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4281,
        4314
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3004": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4329,
        4359
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x40"
    },
    "3006": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4329,
        4359
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3007": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4329,
        4359
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3012": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3014": {
      "op": "SHL"
    },
    "3015": {
      "op": "SUB"
    },
    "3016": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4329,
        4359
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3017": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4329,
        4359
      ],
      "op": "AND",
      "path": "0"
    },
    "3018": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4329,
        4359
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3019": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4329,
        4359
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3020": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4329,
        4359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3021": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4329,
        4359
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3022": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4329,
        4359
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xAC885CFCAC9D1450E80F787DBF9546001FB50414106435B10B1D27B448B8668"
    },
    "3055": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4329,
        4359
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3056": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4329,
        4359
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3057": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4329,
        4359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3058": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4329,
        4359
      ],
      "op": "SUB",
      "path": "0"
    },
    "3059": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4329,
        4359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3061": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4329,
        4359
      ],
      "op": "ADD",
      "path": "0"
    },
    "3062": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4329,
        4359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3063": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4329,
        4359
      ],
      "op": "LOG1",
      "path": "0"
    },
    "3064": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4369,
        4379
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x2"
    },
    "3066": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4369,
        4393
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3067": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4369,
        4393
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3072": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3074": {
      "op": "SHL"
    },
    "3075": {
      "op": "SUB"
    },
    "3076": {
      "op": "NOT"
    },
    "3077": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4369,
        4393
      ],
      "op": "AND",
      "path": "0"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3084": {
      "op": "SHL"
    },
    "3085": {
      "op": "SUB"
    },
    "3086": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4369,
        4393
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3087": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4369,
        4393
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3088": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4369,
        4393
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3089": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4369,
        4393
      ],
      "op": "AND",
      "path": "0"
    },
    "3090": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4369,
        4393
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3091": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4369,
        4393
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3092": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4369,
        4393
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3093": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4369,
        4393
      ],
      "op": "OR",
      "path": "0"
    },
    "3094": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4369,
        4393
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3095": {
      "fn": "ListFactory.deprecateFactory",
      "offset": [
        4369,
        4393
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3096": {
      "fn": "ListFactory.deprecateFactory",
      "jump": "o",
      "offset": [
        4120,
        4400
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3097": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3098": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3571,
        3582
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x0"
    },
    "3100": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3571,
        3582
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3105": {
      "op": "SHL"
    },
    "3106": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3571,
        3582
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3107": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3571,
        3582
      ],
      "op": "DIV",
      "path": "0"
    },
    "3108": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3571,
        3582
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3110": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3571,
        3582
      ],
      "op": "AND",
      "path": "0"
    },
    "3111": {
      "branch": 40,
      "fn": "ListFactory.initListFactory",
      "offset": [
        3570,
        3582
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3112": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3562,
        3583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC30"
    },
    "3115": {
      "branch": 40,
      "fn": "ListFactory.initListFactory",
      "offset": [
        3562,
        3583
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3116": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3562,
        3583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3118": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3562,
        3583
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3119": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3562,
        3583
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3120": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3562,
        3583
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3121": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3593,
        3607
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x0"
    },
    "3123": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3593,
        3645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3124": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3593,
        3645
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3125": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3593,
        3645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3127": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3655,
        3693
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 27
    },
    "3128": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3655,
        3693
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3135": {
      "op": "SHL"
    },
    "3136": {
      "op": "SUB"
    },
    "3137": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3655,
        3693
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3138": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3655,
        3693
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3139": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3655,
        3693
      ],
      "op": "AND",
      "path": "0"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3146": {
      "op": "SHL"
    },
    "3147": {
      "op": "SUB"
    },
    "3148": {
      "op": "NOT"
    },
    "3149": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3655,
        3693
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3150": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3655,
        3693
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3151": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3655,
        3693
      ],
      "op": "AND",
      "path": "0"
    },
    "3152": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3655,
        3693
      ],
      "op": "OR",
      "path": "0"
    },
    "3153": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3655,
        3693
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3154": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3655,
        3693
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3155": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3655,
        3693
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3156": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3703,
        3713
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x3"
    },
    "3158": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3703,
        3727
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3159": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3703,
        3727
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3160": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3703,
        3727
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3165": {
      "op": "SHL"
    },
    "3166": {
      "op": "NOT"
    },
    "3167": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3593,
        3645
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3168": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3593,
        3645
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3169": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3593,
        3645
      ],
      "op": "AND",
      "path": "0"
    },
    "3170": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3593,
        3645
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3171": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3593,
        3645
      ],
      "op": "AND",
      "path": "0"
    },
    "3172": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3593,
        3645
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3173": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3593,
        3645
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3174": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3593,
        3645
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3175": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3593,
        3645
      ],
      "op": "OR",
      "path": "0"
    },
    "3176": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3737,
        3755
      ],
      "op": "AND",
      "path": "0",
      "statement": 29
    },
    "3177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3181": {
      "op": "SHL"
    },
    "3182": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3737,
        3755
      ],
      "op": "OR",
      "path": "0"
    },
    "3183": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3737,
        3755
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3184": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3737,
        3755
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3185": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3770,
        3791
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 30,
      "value": "0x40"
    },
    "3187": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3770,
        3791
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3188": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3770,
        3791
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xE4BD612963220B47D4B6661BC82C559AAAF0350B0AAD4DDE4D90CE8B7EA15462"
    },
    "3221": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3770,
        3791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3222": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3593,
        3607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3223": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3770,
        3791
      ],
      "op": "LOG1",
      "path": "0"
    },
    "3224": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "POP",
      "path": "0"
    },
    "3225": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "POP",
      "path": "0"
    },
    "3226": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        3443,
        3798
      ],
      "op": "POP",
      "path": "0"
    },
    "3227": {
      "fn": "ListFactory.initListFactory",
      "jump": "o",
      "offset": [
        3443,
        3798
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3228": {
      "offset": [
        2485,
        2524
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3229": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3231": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3233": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3234": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3236": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3237": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3238": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3239": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3241": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3242": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3243": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3244": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3246": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "AND",
      "path": "0"
    },
    "3247": {
      "fn": "ListFactory.initListFactory",
      "offset": [
        2485,
        2524
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3248": {
      "fn": "ListFactory.initListFactory",
      "jump": "o",
      "offset": [
        2485,
        2524
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3249": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1524,
        1965
      ],
      "op": "JUMPDEST",
      "path": "68"
    },
    "3250": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1579,
        1593
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3252": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1601,
        1620
      ],
      "op": "DUP1",
      "path": "68"
    },
    "3253": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1631,
        1637
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3254": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1623,
        1638
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x60"
    },
    "3256": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1623,
        1638
      ],
      "op": "SHL",
      "path": "68"
    },
    "3257": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1601,
        1638
      ],
      "op": "SWAP1",
      "path": "68"
    },
    "3258": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1601,
        1638
      ],
      "op": "POP",
      "path": "68"
    },
    "3259": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1680,
        1684
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x40"
    },
    "3261": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1674,
        1685
      ],
      "op": "MLOAD",
      "path": "68"
    },
    "3262": {
      "op": "PUSH20",
      "value": "0x3D602D80600A3D3981F3363D3D373D3D3D363D73"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3285": {
      "op": "SHL"
    },
    "3286": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1699,
        1704
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3287": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1692,
        1773
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3288": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1805,
        1816
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3289": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1798,
        1802
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x14"
    },
    "3291": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1791,
        1796
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3292": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1787,
        1803
      ],
      "op": "ADD",
      "path": "68"
    },
    "3293": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1780,
        1817
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3294": {
      "op": "PUSH15",
      "value": "0x5AF43D82803E903D91602B57FD5BF3"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "3312": {
      "op": "SHL"
    },
    "3313": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1842,
        1846
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x28"
    },
    "3315": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1835,
        1840
      ],
      "op": "DUP3",
      "path": "68"
    },
    "3316": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1831,
        1847
      ],
      "op": "ADD",
      "path": "68"
    },
    "3317": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1824,
        1916
      ],
      "op": "MSTORE",
      "path": "68"
    },
    "3318": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1950,
        1954
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x37"
    },
    "3320": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1943,
        1948
      ],
      "op": "DUP2",
      "path": "68"
    },
    "3321": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1940,
        1941
      ],
      "op": "PUSH1",
      "path": "68",
      "value": "0x0"
    },
    "3323": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1933,
        1955
      ],
      "op": "CREATE",
      "path": "68"
    },
    "3324": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1923,
        1955
      ],
      "op": "SWAP5",
      "path": "68"
    },
    "3325": {
      "fn": "CloneFactory.createClone",
      "offset": [
        1653,
        1961
      ],
      "op": "SWAP4",
      "path": "68"
    },
    "3326": {
      "op": "POP"
    },
    "3327": {
      "op": "POP"
    },
    "3328": {
      "op": "POP"
    },
    "3329": {
      "op": "POP"
    },
    "3330": {
      "fn": "CloneFactory.createClone",
      "jump": "o",
      "offset": [
        1653,
        1961
      ],
      "op": "JUMP",
      "path": "68"
    },
    "3331": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1527,
        2037
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "3332": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x40"
    },
    "3334": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "DUP1",
      "path": "72"
    },
    "3335": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "MLOAD",
      "path": "72"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3342": {
      "op": "SHL"
    },
    "3343": {
      "op": "SUB"
    },
    "3344": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "DUP5",
      "path": "72"
    },
    "3345": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "DUP2",
      "path": "72"
    },
    "3346": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "AND",
      "path": "72"
    },
    "3347": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x24"
    },
    "3349": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "DUP4",
      "path": "72"
    },
    "3350": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "ADD",
      "path": "72"
    },
    "3351": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "MSTORE",
      "path": "72"
    },
    "3352": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x44"
    },
    "3354": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "DUP1",
      "path": "72"
    },
    "3355": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "DUP4",
      "path": "72"
    },
    "3356": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "ADD",
      "path": "72"
    },
    "3357": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "DUP6",
      "path": "72"
    },
    "3358": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "3359": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "MSTORE",
      "path": "72"
    },
    "3360": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "DUP4",
      "path": "72"
    },
    "3361": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "MLOAD",
      "path": "72"
    },
    "3362": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "DUP1",
      "path": "72"
    },
    "3363": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "DUP5",
      "path": "72"
    },
    "3364": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "SUB",
      "path": "72"
    },
    "3365": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "3366": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "3367": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "ADD",
      "path": "72"
    },
    "3368": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "DUP2",
      "path": "72"
    },
    "3369": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "MSTORE",
      "path": "72"
    },
    "3370": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x64"
    },
    "3372": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "3373": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "SWAP3",
      "path": "72"
    },
    "3374": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "ADD",
      "path": "72"
    },
    "3375": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "DUP4",
      "path": "72"
    },
    "3376": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "MSTORE",
      "path": "72"
    },
    "3377": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x20"
    },
    "3379": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "DUP3",
      "path": "72"
    },
    "3380": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "ADD",
      "path": "72"
    },
    "3381": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "DUP1",
      "path": "72"
    },
    "3382": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "MLOAD",
      "path": "72"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3389": {
      "op": "SHL"
    },
    "3390": {
      "op": "SUB"
    },
    "3391": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "AND",
      "path": "72"
    },
    "3392": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3399": {
      "op": "SHL"
    },
    "3400": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "OR",
      "path": "72"
    },
    "3401": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "DUP2",
      "path": "72"
    },
    "3402": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "MSTORE",
      "path": "72"
    },
    "3403": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "SWAP3",
      "path": "72"
    },
    "3404": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "MLOAD",
      "path": "72"
    },
    "3405": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP3",
      "path": "72"
    },
    "3406": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "MLOAD",
      "path": "72"
    },
    "3407": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1715,
        1727
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x0"
    },
    "3409": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1715,
        1727
      ],
      "op": "SWAP5",
      "path": "72"
    },
    "3410": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1729,
        1746
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x60"
    },
    "3412": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1729,
        1746
      ],
      "op": "SWAP5",
      "path": "72"
    },
    "3413": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1772
      ],
      "op": "SWAP4",
      "path": "72"
    },
    "3414": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1772
      ],
      "op": "DUP10",
      "path": "72"
    },
    "3415": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1772
      ],
      "op": "AND",
      "path": "72"
    },
    "3416": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1772
      ],
      "op": "SWAP4",
      "path": "72"
    },
    "3417": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "SWAP3",
      "path": "72"
    },
    "3418": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "3419": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP3",
      "path": "72"
    },
    "3420": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "3421": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "3422": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP1",
      "path": "72"
    },
    "3423": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP4",
      "path": "72"
    },
    "3424": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1869,
        1915
      ],
      "op": "DUP4",
      "path": "72"
    },
    "3425": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "3426": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x20"
    },
    "3428": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP4",
      "path": "72"
    },
    "3429": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "LT",
      "path": "72"
    },
    "3430": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0xD80"
    },
    "3433": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "3434": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP1",
      "path": "72"
    },
    "3435": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "MLOAD",
      "path": "72"
    },
    "3436": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP3",
      "path": "72"
    },
    "3437": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "MSTORE",
      "path": "72"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3440": {
      "op": "NOT"
    },
    "3441": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "3442": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "SWAP3",
      "path": "72"
    },
    "3443": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "ADD",
      "path": "72"
    },
    "3444": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "3445": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x20"
    },
    "3447": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "3448": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP3",
      "path": "72"
    },
    "3449": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "ADD",
      "path": "72"
    },
    "3450": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "3451": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "ADD",
      "path": "72"
    },
    "3452": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0xD61"
    },
    "3455": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "JUMP",
      "path": "72"
    },
    "3456": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "3457": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x1"
    },
    "3459": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP4",
      "path": "72"
    },
    "3460": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x20"
    },
    "3462": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "SUB",
      "path": "72"
    },
    "3463": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0x100"
    },
    "3466": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "EXP",
      "path": "72"
    },
    "3467": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "SUB",
      "path": "72"
    },
    "3468": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP1",
      "path": "72"
    },
    "3469": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "NOT",
      "path": "72"
    },
    "3470": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP3",
      "path": "72"
    },
    "3471": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "MLOAD",
      "path": "72"
    },
    "3472": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "AND",
      "path": "72"
    },
    "3473": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP2",
      "path": "72"
    },
    "3474": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP5",
      "path": "72"
    },
    "3475": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "MLOAD",
      "path": "72"
    },
    "3476": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "AND",
      "path": "72"
    },
    "3477": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP1",
      "path": "72"
    },
    "3478": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP3",
      "path": "72"
    },
    "3479": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "OR",
      "path": "72"
    },
    "3480": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP6",
      "path": "72"
    },
    "3481": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "MSTORE",
      "path": "72"
    },
    "3482": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "POP",
      "path": "72"
    },
    "3483": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "POP",
      "path": "72"
    },
    "3484": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "POP",
      "path": "72"
    },
    "3485": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "POP",
      "path": "72"
    },
    "3486": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "POP",
      "path": "72"
    },
    "3487": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "POP",
      "path": "72"
    },
    "3488": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "3489": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "POP",
      "path": "72"
    },
    "3490": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "ADD",
      "path": "72"
    },
    "3491": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "3492": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "POP",
      "path": "72"
    },
    "3493": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "POP",
      "path": "72"
    },
    "3494": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x0"
    },
    "3496": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x40"
    },
    "3498": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "MLOAD",
      "path": "72"
    },
    "3499": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP1",
      "path": "72"
    },
    "3500": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP4",
      "path": "72"
    },
    "3501": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "SUB",
      "path": "72"
    },
    "3502": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP2",
      "path": "72"
    },
    "3503": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x0"
    },
    "3505": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP7",
      "path": "72"
    },
    "3506": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "GAS",
      "path": "72"
    },
    "3507": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "CALL",
      "path": "72"
    },
    "3508": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "3509": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "POP",
      "path": "72"
    },
    "3510": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "POP",
      "path": "72"
    },
    "3511": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "RETURNDATASIZE",
      "path": "72"
    },
    "3512": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP1",
      "path": "72"
    },
    "3513": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x0"
    },
    "3515": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP2",
      "path": "72"
    },
    "3516": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "EQ",
      "path": "72"
    },
    "3517": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0xDE2"
    },
    "3520": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "3521": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x40"
    },
    "3523": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "MLOAD",
      "path": "72"
    },
    "3524": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "3525": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "POP",
      "path": "72"
    },
    "3526": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x1F"
    },
    "3528": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "NOT",
      "path": "72"
    },
    "3529": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x3F"
    },
    "3531": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "RETURNDATASIZE",
      "path": "72"
    },
    "3532": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "ADD",
      "path": "72"
    },
    "3533": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "AND",
      "path": "72"
    },
    "3534": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP3",
      "path": "72"
    },
    "3535": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "ADD",
      "path": "72"
    },
    "3536": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x40"
    },
    "3538": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "MSTORE",
      "path": "72"
    },
    "3539": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "RETURNDATASIZE",
      "path": "72"
    },
    "3540": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP3",
      "path": "72"
    },
    "3541": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "MSTORE",
      "path": "72"
    },
    "3542": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "RETURNDATASIZE",
      "path": "72"
    },
    "3543": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x0"
    },
    "3545": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x20"
    },
    "3547": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "DUP5",
      "path": "72"
    },
    "3548": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "ADD",
      "path": "72"
    },
    "3549": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "RETURNDATACOPY",
      "path": "72"
    },
    "3550": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0xDE7"
    },
    "3553": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "JUMP",
      "path": "72"
    },
    "3554": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "3555": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x60"
    },
    "3557": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "3558": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "POP",
      "path": "72"
    },
    "3559": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "3560": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1762,
        1929
      ],
      "op": "POP",
      "path": "72"
    },
    "3561": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1714,
        1929
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "3562": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1714,
        1929
      ],
      "op": "POP",
      "path": "72"
    },
    "3563": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1714,
        1929
      ],
      "op": "SWAP2",
      "path": "72"
    },
    "3564": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1714,
        1929
      ],
      "op": "POP",
      "path": "72"
    },
    "3565": {
      "branch": 41,
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1947,
        1954
      ],
      "op": "DUP2",
      "path": "72",
      "statement": 31
    },
    "3566": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1947,
        2004
      ],
      "op": "DUP1",
      "path": "72"
    },
    "3567": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1947,
        2004
      ],
      "op": "ISZERO",
      "path": "72"
    },
    "3568": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1947,
        2004
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0xE15"
    },
    "3571": {
      "branch": 41,
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1947,
        2004
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "3572": {
      "op": "POP"
    },
    "3573": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1959,
        1970
      ],
      "op": "DUP1",
      "path": "72"
    },
    "3574": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1959,
        1970
      ],
      "op": "MLOAD",
      "path": "72"
    },
    "3575": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1959,
        1975
      ],
      "op": "ISZERO",
      "path": "72"
    },
    "3576": {
      "branch": 42,
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1959,
        1975
      ],
      "op": "DUP1",
      "path": "72"
    },
    "3577": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1959,
        2003
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0xE15"
    },
    "3580": {
      "branch": 42,
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1959,
        2003
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "3581": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1959,
        2003
      ],
      "op": "POP",
      "path": "72"
    },
    "3582": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1990,
        1994
      ],
      "op": "DUP1",
      "path": "72"
    },
    "3583": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1979,
        2003
      ],
      "op": "DUP1",
      "path": "72"
    },
    "3584": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1979,
        2003
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x20"
    },
    "3586": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1979,
        2003
      ],
      "op": "ADD",
      "path": "72"
    },
    "3587": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1979,
        2003
      ],
      "op": "SWAP1",
      "path": "72"
    },
    "3588": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1979,
        2003
      ],
      "op": "MLOAD",
      "path": "72"
    },
    "3589": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1979,
        2003
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x20"
    },
    "3591": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1979,
        2003
      ],
      "op": "DUP2",
      "path": "72"
    },
    "3592": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1979,
        2003
      ],
      "op": "LT",
      "path": "72"
    },
    "3593": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1979,
        2003
      ],
      "op": "ISZERO",
      "path": "72"
    },
    "3594": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1979,
        2003
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0xE12"
    },
    "3597": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1979,
        2003
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "3598": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1979,
        2003
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x0"
    },
    "3600": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1979,
        2003
      ],
      "op": "DUP1",
      "path": "72"
    },
    "3601": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1979,
        2003
      ],
      "op": "REVERT",
      "path": "72"
    },
    "3602": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1979,
        2003
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "3603": {
      "op": "POP"
    },
    "3604": {
      "branch": 43,
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1979,
        2003
      ],
      "op": "MLOAD",
      "path": "72"
    },
    "3605": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1959,
        2003
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "3606": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1939,
        2005
      ],
      "op": "PUSH2",
      "path": "72",
      "value": "0xE1E"
    },
    "3609": {
      "branch": 43,
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1939,
        2005
      ],
      "op": "JUMPI",
      "path": "72"
    },
    "3610": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1939,
        2005
      ],
      "op": "PUSH1",
      "path": "72",
      "value": "0x0"
    },
    "3612": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1939,
        2005
      ],
      "op": "DUP1",
      "path": "72"
    },
    "3613": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1939,
        2005
      ],
      "op": "REVERT",
      "path": "72"
    },
    "3614": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1939,
        2005
      ],
      "op": "JUMPDEST",
      "path": "72"
    },
    "3615": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1527,
        2037
      ],
      "op": "POP",
      "path": "72"
    },
    "3616": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1527,
        2037
      ],
      "op": "POP",
      "path": "72"
    },
    "3617": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1527,
        2037
      ],
      "op": "POP",
      "path": "72"
    },
    "3618": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1527,
        2037
      ],
      "op": "POP",
      "path": "72"
    },
    "3619": {
      "fn": "SafeTransfer._safeTransfer",
      "offset": [
        1527,
        2037
      ],
      "op": "POP",
      "path": "72"
    },
    "3620": {
      "fn": "SafeTransfer._safeTransfer",
      "jump": "o",
      "offset": [
        1527,
        2037
      ],
      "op": "JUMP",
      "path": "72"
    }
  },
  "sha1": "b60f458fd630eabf0a2b69c7713be8e6df423ac3",
  "source": "pragma solidity 0.6.12;\n\nimport \"../OpenZeppelin/math/SafeMath.sol\";\nimport \"../Utils/Owned.sol\";\nimport \"../Utils/CloneFactory.sol\";\nimport \"../interfaces/IERC20.sol\";\nimport \"../interfaces/IPointList.sol\";\nimport \"../Utils/SafeTransfer.sol\";\nimport \"./MISOAccessControls.sol\";\n\n//----------------------------------------------------------------------------------\n//    I n s t a n t\n//\n//        .:mmm.         .:mmm:.       .ii.  .:SSSSSSSSSSSSS.     .oOOOOOOOOOOOo.  \n//      .mMM'':Mm.     .:MM'':Mm:.     .II:  :SSs..........     .oOO'''''''''''OOo.\n//    .:Mm'   ':Mm.   .:Mm'   'MM:.    .II:  'sSSSSSSSSSSSSS:.  :OO.           .OO:\n//  .'mMm'     ':MM:.:MMm'     ':MM:.  .II:  .:...........:SS.  'OOo:.........:oOO'\n//  'mMm'        ':MMmm'         'mMm:  II:  'sSSSSSSSSSSSSS'     'oOOOOOOOOOOOO'  \n//\n//----------------------------------------------------------------------------------\n//\n// Chef Gonpachi's List Factory\n//\n// A factory for deploying all sorts of list based contracts\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// The above copyright notice and this permission notice shall be included \n// in all copies or substantial portions of the Software.\n//\n// Made for Sushi.com \n// \n// Enjoy. (c) Chef Gonpachi 2021 \n// <https://github.com/chefgonpachi/MISO/>\n//\n// ---------------------------------------------------------------------\n// SPDX-License-Identifier: GPL-3.0                        \n// ---------------------------------------------------------------------\n\n\ncontract ListFactory is CloneFactory, SafeTransfer {\n    using SafeMath for uint;\n\n    /// @notice Responsible for access rights to the contract.\n    MISOAccessControls public accessControls;\n\n    /// @notice Whether market has been initialized or not.\n    bool private initialised;\n\n    /// @notice Address of the point list template.\n    address public pointListTemplate;\n\n    /// @notice New point list address.\n    address public newAddress;\n\n    /// @notice Minimum fee number.\n    uint256 public minimumFee;\n\n    /// @notice Tracks if list is made by the factory.\n    mapping(address => bool) public isChild;\n\n    /// @notice An array of list addresses.\n    address[] public lists;\n\n    /// @notice Any MISO dividends collected are sent here.\n    address payable public misoDiv;\n\n    /// @notice Event emitted when point list is deployed.\n    event PointListDeployed(address indexed operator, address indexed addr, address pointList, address owner);\n\n    /// @notice Event emitted when factory is deprecated.\n    event FactoryDeprecated(address newAddress);\n\n    /// @notice Event emitted when minimum fee is updated.\n    event MinimumFeeUpdated(uint oldFee, uint newFee);\n\n    /// @notice Event emitted when point list factory is initialised.\n    event MisoInitListFactory();\n\n    /**\n     * @notice Initializes point list factory variables.\n     * @param _accessControls Access control contract address.\n     * @param _pointListTemplate Point list template address.\n     * @param _minimumFee Minimum fee number.\n     */\n    function initListFactory(address _accessControls, address _pointListTemplate, uint256 _minimumFee) external  {\n        require(!initialised);\n        accessControls = MISOAccessControls(_accessControls);\n        pointListTemplate = _pointListTemplate;\n        minimumFee = _minimumFee;\n        initialised = true;\n        emit MisoInitListFactory();\n    }\n\n    /**\n     * @notice Gets the number of point lists created by factory.\n     * @return uint Number of point lists.\n     */\n    function numberOfChildren() external view returns (uint) {\n        return lists.length;\n    }\n\n    /**\n     * @notice Deprecates factory.\n     * @param _newAddress Blank address.\n     */\n    function deprecateFactory(address _newAddress) external {\n        require(accessControls.hasAdminRole(msg.sender), \"ListFactory: Sender must be admin\");\n        require(newAddress == address(0));\n        emit FactoryDeprecated(_newAddress);\n        newAddress = _newAddress;\n    }\n\n    /**\n     * @notice Sets minimum fee.\n     * @param _minimumFee Minimum fee number.\n     */\n    function setMinimumFee(uint256 _minimumFee) external {\n        require(accessControls.hasAdminRole(msg.sender), \"ListFactory: Sender must be admin\");\n        emit MinimumFeeUpdated(minimumFee, _minimumFee);\n        minimumFee = _minimumFee;\n    }\n\n    /**\n     * @notice Sets dividend address.\n     * @param _divaddr Dividend address.\n     */\n    function setDividends(address payable _divaddr) external  {\n        require(accessControls.hasAdminRole(msg.sender), \"MISOTokenFactory: Sender must be Admin\");\n        misoDiv = _divaddr;\n    }\n\n    /**\n     * @notice Deploys new point list.\n     * @param _listOwner List owner address.\n     * @param _accounts An array of account addresses.\n     * @param _amounts An array of corresponding point amounts.\n     * @return pointList Point list address.\n     */\n    function deployPointList(\n        address _listOwner,\n        address[] memory _accounts,\n        uint256[] memory _amounts\n    )\n        external payable returns (address pointList)\n    {\n        require(msg.value >= minimumFee);\n        pointList = createClone(pointListTemplate);\n        if (_accounts.length > 0) {\n            IPointList(pointList).initPointList(address(this));\n            IPointList(pointList).setPoints(_accounts, _amounts);\n            MISOAccessControls(pointList).addAdminRole(_listOwner);\n            MISOAccessControls(pointList).removeAdminRole(address(this));\n        } else {\n            IPointList(pointList).initPointList(_listOwner);\n        }\n        isChild[address(pointList)] = true;\n        lists.push(address(pointList));\n        emit PointListDeployed(msg.sender, address(pointList), pointListTemplate, _listOwner);\n        if (msg.value > 0) {\n            misoDiv.transfer(msg.value);\n        }\n    }\n\n    /**\n     * @notice Funtion for transfering any ERC20 token.\n     * @param _tokenAddress Address to send from.\n     * @param _tokens Number of tokens.\n     * @return success True.\n     */\n    function transferAnyERC20Token(address _tokenAddress, uint256 _tokens) external returns (bool success) {\n        require(accessControls.hasAdminRole(msg.sender), \"ListFactory: Sender must be operator\");\n        _safeTransfer(_tokenAddress, misoDiv, _tokens);\n        return true;\n    }\n\n    receive () external payable {\n        revert();\n    }\n}\n",
  "sourceMap": "1911:4886:0:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Access/ListFactory.sol",
  "type": "contract"
}