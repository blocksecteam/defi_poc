{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "calls",
          "type": "bytes[]"
        },
        {
          "internalType": "bool",
          "name": "revertOnFail",
          "type": "bool"
        }
      ],
      "name": "batch",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "successes",
          "type": "bool[]"
        },
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "63": "contracts/Utils/BoringBatchable.sol"
  },
  "ast": {
    "absolutePath": "contracts/Utils/BoringBatchable.sol",
    "exportedSymbols": {
      "BaseBoringBatchable": [
        27087
      ],
      "BoringBatchable": [
        27123
      ]
    },
    "id": 27124,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 26976,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "1:23:63"
      },
      {
        "id": 26977,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:63"
      },
      {
        "absolutePath": "contracts/Utils/BoringERC20.sol",
        "file": "./BoringERC20.sol",
        "id": 26978,
        "nodeType": "ImportDirective",
        "scope": 27124,
        "sourceUnit": 27360,
        "src": "189:27:63",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 27087,
        "linearizedBaseContracts": [
          27087
        ],
        "name": "BaseBoringBatchable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 27002,
              "nodeType": "Block",
              "src": "527:400:63",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 26989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 26986,
                        "name": "_returnData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26981,
                        "src": "652:11:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 26987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "652:18:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3638",
                      "id": 26988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "673:2:63",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_68_by_1",
                        "typeString": "int_const 68"
                      },
                      "value": "68"
                    },
                    "src": "652:23:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 26992,
                  "nodeType": "IfStatement",
                  "src": "648:67:63",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "5472616e73616374696f6e2072657665727465642073696c656e746c79",
                      "id": 26990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "684:31:63",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_d0b1e7612ebe87924453e5d4581b9067879655587bae8a2dfee438433699b890",
                        "typeString": "literal_string \"Transaction reverted silently\""
                      },
                      "value": "Transaction reverted silently"
                    },
                    "functionReturnParameters": 26985,
                    "id": 26991,
                    "nodeType": "Return",
                    "src": "677:38:63"
                  }
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "735:95:63",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "783:37:63",
                        "value": {
                          "arguments": [
                            {
                              "name": "_returnData",
                              "nodeType": "YulIdentifier",
                              "src": "802:11:63"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "815:4:63",
                              "type": "",
                              "value": "0x04"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "798:3:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "798:22:63"
                        },
                        "variableNames": [
                          {
                            "name": "_returnData",
                            "nodeType": "YulIdentifier",
                            "src": "783:11:63"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 26981,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "783:11:63",
                      "valueSize": 1
                    },
                    {
                      "declaration": 26981,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "802:11:63",
                      "valueSize": 1
                    }
                  ],
                  "id": 26993,
                  "nodeType": "InlineAssembly",
                  "src": "726:104:63"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 26996,
                        "name": "_returnData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26981,
                        "src": "857:11:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "id": 26998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "871:6:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 26997,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "871:6:63",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          }
                        ],
                        "id": 26999,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "870:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 26994,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "846:3:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 26995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "846:10:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 27000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "846:33:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 26985,
                  "id": 27001,
                  "nodeType": "Return",
                  "src": "839:40:63"
                }
              ]
            },
            "documentation": {
              "id": 26979,
              "nodeType": "StructuredDocumentation",
              "src": "253:182:63",
              "text": "@dev Helper function to extract a useful revert message from a failed call.\n If the returned data is malformed or not correctly abi encoded then this call can fail itself."
            },
            "id": 27003,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getRevertMsg",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 26982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26981,
                  "mutability": "mutable",
                  "name": "_returnData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27003,
                  "src": "463:24:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 26980,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "462:26:63"
            },
            "returnParameters": {
              "id": 26985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26984,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27003,
                  "src": "512:13:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26983,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:6:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "511:15:63"
            },
            "scope": 27087,
            "src": "440:487:63",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 27085,
              "nodeType": "Block",
              "src": "1889:388:63",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 27025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 27018,
                      "name": "successes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27013,
                      "src": "1899:9:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                        "typeString": "bool[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 27022,
                            "name": "calls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27007,
                            "src": "1922:5:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "bytes calldata[] calldata"
                            }
                          },
                          "id": 27023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1922:12:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 27021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1911:10:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (bool[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 27019,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "1915:4:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 27020,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "1915:6:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                            "typeString": "bool[]"
                          }
                        }
                      },
                      "id": 27024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1911:24:63",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                        "typeString": "bool[] memory"
                      }
                    },
                    "src": "1899:36:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                      "typeString": "bool[] memory"
                    }
                  },
                  "id": 27026,
                  "nodeType": "ExpressionStatement",
                  "src": "1899:36:63"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 27034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 27027,
                      "name": "results",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27016,
                      "src": "1945:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 27031,
                            "name": "calls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27007,
                            "src": "1967:5:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "bytes calldata[] calldata"
                            }
                          },
                          "id": 27032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1967:12:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 27030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1955:11:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 27028,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1959:5:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 27029,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "1959:7:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        }
                      },
                      "id": 27033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1955:25:63",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes memory[] memory"
                      }
                    },
                    "src": "1945:35:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 27035,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:35:63"
                },
                {
                  "body": {
                    "id": 27083,
                    "nodeType": "Block",
                    "src": "2033:238:63",
                    "statements": [
                      {
                        "assignments": [
                          27048,
                          27050
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 27048,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 27083,
                            "src": "2048:12:63",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 27047,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2048:4:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 27050,
                            "mutability": "mutable",
                            "name": "result",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 27083,
                            "src": "2062:19:63",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 27049,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2062:5:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 27060,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 27056,
                                "name": "calls",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27007,
                                "src": "2112:5:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "bytes calldata[] calldata"
                                }
                              },
                              "id": 27058,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 27057,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27037,
                                "src": "2118:1:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2112:8:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 27053,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2093:4:63",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BaseBoringBatchable_$27087",
                                    "typeString": "contract BaseBoringBatchable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BaseBoringBatchable_$27087",
                                    "typeString": "contract BaseBoringBatchable"
                                  }
                                ],
                                "id": 27052,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2085:7:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 27051,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2085:7:63",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 27054,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2085:13:63",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 27055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2085:26:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 27059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2085:36:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2047:74:63"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 27065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 27062,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27048,
                                "src": "2143:7:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 27064,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "2154:13:63",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "id": 27063,
                                  "name": "revertOnFail",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 27009,
                                  "src": "2155:12:63",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2143:24:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 27067,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 27050,
                                  "src": "2183:6:63",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 27066,
                                "name": "_getRevertMsg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27003,
                                "src": "2169:13:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (bytes memory) pure returns (string memory)"
                                }
                              },
                              "id": 27068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2169:21:63",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 27061,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2135:7:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 27069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2135:56:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 27070,
                        "nodeType": "ExpressionStatement",
                        "src": "2135:56:63"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 27075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 27071,
                              "name": "successes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27013,
                              "src": "2205:9:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                "typeString": "bool[] memory"
                              }
                            },
                            "id": 27073,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 27072,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27037,
                              "src": "2215:1:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2205:12:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 27074,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27048,
                            "src": "2220:7:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2205:22:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 27076,
                        "nodeType": "ExpressionStatement",
                        "src": "2205:22:63"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 27081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 27077,
                              "name": "results",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27016,
                              "src": "2241:7:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              }
                            },
                            "id": 27079,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 27078,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27037,
                              "src": "2249:1:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2241:10:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 27080,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27050,
                            "src": "2254:6:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "2241:19:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 27082,
                        "nodeType": "ExpressionStatement",
                        "src": "2241:19:63"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 27043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 27040,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27037,
                      "src": "2010:1:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 27041,
                        "name": "calls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27007,
                        "src": "2014:5:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      },
                      "id": 27042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2014:12:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2010:16:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27084,
                  "initializationExpression": {
                    "assignments": [
                      27037
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 27037,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 27084,
                        "src": "1995:9:63",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 27036,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1995:7:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 27039,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 27038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2007:1:63",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1995:13:63"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 27045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2028:3:63",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 27044,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27037,
                        "src": "2028:1:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 27046,
                    "nodeType": "ExpressionStatement",
                    "src": "2028:3:63"
                  },
                  "nodeType": "ForStatement",
                  "src": "1990:281:63"
                }
              ]
            },
            "documentation": {
              "id": 27004,
              "nodeType": "StructuredDocumentation",
              "src": "933:419:63",
              "text": "@notice Allows batched call to self (this contract).\n @param calls An array of inputs for each call.\n @param revertOnFail If True then reverts after a failed call and stops doing further calls.\n @return successes An array indicating the success of a call, mapped one-to-one to `calls`.\n @return results An array with the returned data of each function call, mapped one-to-one to `calls`."
            },
            "functionSelector": "d2423b51",
            "id": 27086,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batch",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 27010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27007,
                  "mutability": "mutable",
                  "name": "calls",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27086,
                  "src": "1771:22:63",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 27005,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1771:5:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 27006,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1771:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27009,
                  "mutability": "mutable",
                  "name": "revertOnFail",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27086,
                  "src": "1795:17:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 27008,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1795:4:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1770:43:63"
            },
            "returnParameters": {
              "id": 27017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27013,
                  "mutability": "mutable",
                  "name": "successes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27086,
                  "src": "1840:23:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 27011,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1840:4:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 27012,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1840:6:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27016,
                  "mutability": "mutable",
                  "name": "results",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27086,
                  "src": "1865:22:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 27014,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1865:5:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 27015,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1865:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1839:49:63"
            },
            "scope": 27087,
            "src": "1756:521:63",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 27124,
        "src": "218:2061:63"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 27088,
              "name": "BaseBoringBatchable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 27087,
              "src": "2309:19:63",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseBoringBatchable_$27087",
                "typeString": "contract BaseBoringBatchable"
              }
            },
            "id": 27089,
            "nodeType": "InheritanceSpecifier",
            "src": "2309:19:63"
          }
        ],
        "contractDependencies": [
          27087
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 27123,
        "linearizedBaseContracts": [
          27123,
          27087
        ],
        "name": "BoringBatchable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 27121,
              "nodeType": "Block",
              "src": "2866:66:63",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 27112,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27094,
                        "src": "2889:4:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27113,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27096,
                        "src": "2895:2:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27114,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27098,
                        "src": "2899:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27115,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27100,
                        "src": "2907:8:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27116,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27102,
                        "src": "2917:1:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27117,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27104,
                        "src": "2920:1:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27118,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27106,
                        "src": "2923:1:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 27109,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27092,
                        "src": "2876:5:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30869",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 27111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "permit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30868,
                      "src": "2876:12:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
                      }
                    },
                    "id": 27119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2876:49:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27120,
                  "nodeType": "ExpressionStatement",
                  "src": "2876:49:63"
                }
              ]
            },
            "documentation": {
              "id": 27090,
              "nodeType": "StructuredDocumentation",
              "src": "2335:97:63",
              "text": "@notice Call wrapper that performs `ERC20.permit` on `token`.\n Lookup `IERC20.permit`."
            },
            "functionSelector": "7c516e94",
            "id": 27122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "permitToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 27107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27092,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27122,
                  "src": "2693:12:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$30869",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 27091,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 30869,
                    "src": "2693:6:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$30869",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27094,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27122,
                  "src": "2715:12:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27093,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2715:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27096,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27122,
                  "src": "2737:10:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2737:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27098,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27122,
                  "src": "2757:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2757:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27100,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27122,
                  "src": "2781:16:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27099,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2781:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27102,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27122,
                  "src": "2807:7:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 27101,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2807:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27104,
                  "mutability": "mutable",
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27122,
                  "src": "2824:9:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27103,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2824:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27106,
                  "mutability": "mutable",
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 27122,
                  "src": "2843:9:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27105,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2843:7:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2683:175:63"
            },
            "returnParameters": {
              "id": 27108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2866:0:63"
            },
            "scope": 27123,
            "src": "2663:269:63",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 27124,
        "src": "2281:653:63"
      }
    ],
    "src": "1:2933:63"
  },
  "bytecode": "608060405234801561001057600080fd5b5061051a806100206000396000f3fe60806040526004361061001e5760003560e01c8063d2423b5114610023575b600080fd5b610036610031366004610250565b61004d565b6040516100449291906103ab565b60405180910390f35b6060808367ffffffffffffffff8111801561006757600080fd5b50604051908082528060200260200182016040528015610091578160200160208202803683370190505b5091508367ffffffffffffffff811180156100ab57600080fd5b506040519080825280602002602001820160405280156100df57816020015b60608152602001906001900390816100ca5790505b50905060005b848110156101df5760006060308888858181106100fe57fe5b9050602002810190610110919061045f565b60405161011e92919061039b565b600060405180830381855af49150503d8060008114610159576040519150601f19603f3d011682016040523d82523d6000602084013e61015e565b606091505b5091509150818061016d575085155b610176826101e8565b9061019d5760405162461bcd60e51b81526004016101949190610445565b60405180910390fd5b50818584815181106101ab57fe5b602002602001019015159081151581525050808484815181106101ca57fe5b602090810291909101015250506001016100e5565b50935093915050565b606060448251101561022e575060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015261024b565b6004820191508180602001905181019061024891906102d4565b90505b919050565b600080600060408486031215610264578283fd5b833567ffffffffffffffff8082111561027b578485fd5b818601915086601f83011261028e578485fd5b81358181111561029c578586fd5b87602080830285010111156102af578586fd5b6020928301955093505084013580151581146102c9578182fd5b809150509250925092565b6000602082840312156102e5578081fd5b815167ffffffffffffffff808211156102fc578283fd5b818401915084601f83011261030f578283fd5b81518181111561031d578384fd5b604051601f8201601f19168101602001838111828210171561033d578586fd5b604052818152838201602001871015610354578485fd5b6103658260208301602087016104b4565b9695505050505050565b600081518084526103878160208601602086016104b4565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b604080825283519082018190526000906020906060840190828701845b828110156103e65781511515845292840192908401906001016103c8565b505050838103828501528085516103fd81846104ab565b91508192508381028201848801865b8381101561043657858303855261042483835161036f565b9487019492509086019060010161040c565b50909998505050505050505050565b600060208252610458602083018461036f565b9392505050565b6000808335601e19843603018112610475578283fd5b83018035915067ffffffffffffffff82111561048f578283fd5b6020019150368190038213156104a457600080fd5b9250929050565b90815260200190565b60005b838110156104cf5781810151838201526020016104b7565b838111156104de576000848401525b5050505056fea26469706673582212207a5bb32a4b7970034fc71f7675ee6384b5dd6849236fb70ffdcd6953d94175be64736f6c634300060c0033",
  "bytecodeSha1": "2b04d209b47435b9012d1823971a2f2145949f63",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "BaseBoringBatchable",
  "coverageMap": {
    "branches": {
      "63": {
        "BaseBoringBatchable._getRevertMsg": {
          "10": [
            652,
            675,
            false
          ]
        },
        "BaseBoringBatchable.batch": {
          "8": [
            2143,
            2150,
            true
          ],
          "9": [
            2155,
            2167,
            true
          ]
        }
      }
    },
    "statements": {
      "63": {
        "BaseBoringBatchable._getRevertMsg": {
          "6": [
            677,
            715
          ],
          "7": [
            839,
            879
          ]
        },
        "BaseBoringBatchable.batch": {
          "0": [
            1899,
            1935
          ],
          "1": [
            1945,
            1980
          ],
          "2": [
            2135,
            2191
          ],
          "3": [
            2205,
            2227
          ],
          "4": [
            2241,
            2260
          ],
          "5": [
            2028,
            2031
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "60806040526004361061001e5760003560e01c8063d2423b5114610023575b600080fd5b610036610031366004610250565b61004d565b6040516100449291906103ab565b60405180910390f35b6060808367ffffffffffffffff8111801561006757600080fd5b50604051908082528060200260200182016040528015610091578160200160208202803683370190505b5091508367ffffffffffffffff811180156100ab57600080fd5b506040519080825280602002602001820160405280156100df57816020015b60608152602001906001900390816100ca5790505b50905060005b848110156101df5760006060308888858181106100fe57fe5b9050602002810190610110919061045f565b60405161011e92919061039b565b600060405180830381855af49150503d8060008114610159576040519150601f19603f3d011682016040523d82523d6000602084013e61015e565b606091505b5091509150818061016d575085155b610176826101e8565b9061019d5760405162461bcd60e51b81526004016101949190610445565b60405180910390fd5b50818584815181106101ab57fe5b602002602001019015159081151581525050808484815181106101ca57fe5b602090810291909101015250506001016100e5565b50935093915050565b606060448251101561022e575060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015261024b565b6004820191508180602001905181019061024891906102d4565b90505b919050565b600080600060408486031215610264578283fd5b833567ffffffffffffffff8082111561027b578485fd5b818601915086601f83011261028e578485fd5b81358181111561029c578586fd5b87602080830285010111156102af578586fd5b6020928301955093505084013580151581146102c9578182fd5b809150509250925092565b6000602082840312156102e5578081fd5b815167ffffffffffffffff808211156102fc578283fd5b818401915084601f83011261030f578283fd5b81518181111561031d578384fd5b604051601f8201601f19168101602001838111828210171561033d578586fd5b604052818152838201602001871015610354578485fd5b6103658260208301602087016104b4565b9695505050505050565b600081518084526103878160208601602086016104b4565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b604080825283519082018190526000906020906060840190828701845b828110156103e65781511515845292840192908401906001016103c8565b505050838103828501528085516103fd81846104ab565b91508192508381028201848801865b8381101561043657858303855261042483835161036f565b9487019492509086019060010161040c565b50909998505050505050505050565b600060208252610458602083018461036f565b9392505050565b6000808335601e19843603018112610475578283fd5b83018035915067ffffffffffffffff82111561048f578283fd5b6020019150368190038213156104a457600080fd5b9250929050565b90815260200190565b60005b838110156104cf5781810151838201526020016104b7565b838111156104de576000848401525b5050505056fea26469706673582212207a5bb32a4b7970034fc71f7675ee6384b5dd6849236fb70ffdcd6953d94175be64736f6c634300060c0033",
  "deployedSourceMap": "218:2061:63:-:0;;;;;;;;;;;;;;;;;;;;;1756:521;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;1840:23;;1922:5;1911:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1911:24:63;-1:-1:-1;1899:36:63;-1:-1:-1;1967:5:63;1955:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1945:35;;1995:9;1990:281;2010:16;;;1990:281;;;2048:12;2062:19;2093:4;2112:5;;2118:1;2112:8;;;;;;;;;;;;;;;;;;:::i;:::-;2085:36;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2047:74;;;;2143:7;:24;;;;2155:12;2154:13;2143:24;2169:21;2183:6;2169:13;:21::i;:::-;2135:56;;;;;-1:-1:-1;;;2135:56:63;;;;;;;;:::i;:::-;;;;;;;;;;2220:7;2205:9;2215:1;2205:12;;;;;;;;;;;;;:22;;;;;;;;;;;2254:6;2241:7;2249:1;2241:10;;;;;;;;;;;;;;;;;:19;-1:-1:-1;;2028:3:63;;1990:281;;;;1756:521;;;;;;:::o;440:487::-;512:13;673:2;652:11;:18;:23;648:67;;;-1:-1:-1;677:38:63;;;;;;;;;;;;;;;;;;;648:67;815:4;802:11;798:22;783:37;;857:11;846:33;;;;;;;;;;;;:::i;:::-;839:40;;440:487;;;;:::o;976:538:-1:-;;;;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;-1:-1;;1146:12;1108:2;1204:17;1191:31;1242:18;;1234:6;1231:30;1228:2;;;-1:-1;;1264:12;1228:2;1376:6;1365:9;1361:22;;;162:3;155:4;147:6;143:17;139:27;129:2;;-1:-1;;170:12;129:2;213:6;200:20;1242:18;232:6;229:30;226:2;;;-1:-1;;262:12;226:2;357:3;306:4;;341:6;337:17;298:6;323:32;;320:41;317:2;;;-1:-1;;364:12;317:2;306:4;294:17;;;;-1:-1;1284:109;-1:-1;;1466:22;;456:20;9459:13;;9452:21;10077:32;;10067:2;;-1:-1;;10113:12;10067:2;1438:60;;;;1102:412;;;;;:::o;1521:362::-;;1646:2;1634:9;1625:7;1621:23;1617:32;1614:2;;;-1:-1;;1652:12;1614:2;1703:17;1697:24;1741:18;;1733:6;1730:30;1727:2;;;-1:-1;;1763:12;1727:2;1850:6;1839:9;1835:22;;;637:3;630:4;622:6;618:17;614:27;604:2;;-1:-1;;645:12;604:2;685:6;679:13;1741:18;7225:6;7222:30;7219:2;;;-1:-1;;7255:12;7219:2;6888;6882:9;7328;7309:17;;-1:-1;;7305:33;6914:17;;1646:2;6914:17;6974:34;;;7010:22;;;6971:62;6968:2;;;-1:-1;;7036:12;6968:2;6888;7055:22;778:21;;;878:16;;;1646:2;878:16;875:25;-1:-1;872:2;;;-1:-1;;903:12;872:2;923:39;955:6;1646:2;854:5;850:16;1646:2;820:6;816:17;923:39;:::i;:::-;1783:84;1608:275;-1:-1;;;;;;1608:275::o;4354:323::-;;4486:5;7840:12;8655:6;8650:3;8643:19;4569:52;4614:6;8692:4;8687:3;8683:14;8692:4;4595:5;4591:16;4569:52;:::i;:::-;7328:9;9984:14;-1:-1;;9980:28;4633:39;;;;8692:4;4633:39;;4434:243;-1:-1;;4434:243::o;5038:291::-;;9567:6;9562:3;9557;9544:30;9605:16;;9598:27;;;9605:16;5182:147;-1:-1;5182:147::o;5336:653::-;5603:2;5617:47;;;7840:12;;5588:18;;;8643:19;;;5336:653;;8692:4;;8683:14;;;;7530;;;5336:653;2676:251;2701:6;2698:1;2695:13;2676:251;;;2762:13;;9459;9452:21;3967:34;;2032:14;;;;8377;;;;2723:1;2716:9;2676:251;;;2680:14;;;5828:9;5822:4;5818:20;8692:4;5802:9;5798:18;5791:48;5853:126;3204:5;7840:12;3223:95;3311:6;3306:3;3223:95;:::i;:::-;3216:102;;;;;8692:4;3375:6;3371:17;3366:3;3362:27;8692:4;3469:5;7530:14;-1:-1;3508:357;3533:6;3530:1;3527:13;3508:357;;;3595:9;3589:4;3585:20;3580:3;3573:33;2180:64;2240:3;3640:6;3634:13;2180:64;:::i;:::-;3844:14;;;;3654:90;-1:-1;8377:14;;;;2723:1;3548:9;3508:357;;;-1:-1;5845:134;;5574:415;-1:-1;;;;;;;;;5574:415::o;5996:310::-;;6143:2;6164:17;6157:47;6218:78;6143:2;6132:9;6128:18;6282:6;6218:78;:::i;:::-;6210:86;6114:192;-1:-1;;;6114:192::o;6313:506::-;;;6448:11;6435:25;6499:48;;6523:8;6507:14;6503:29;6499:48;6479:18;6475:73;6465:2;;-1:-1;;6552:12;6465:2;6579:33;;6633:18;;;-1:-1;6671:18;6660:30;;6657:2;;;-1:-1;;6693:12;6657:2;6538:4;6721:13;;-1:-1;6507:14;6753:38;;;6743:49;;6740:2;;;6805:1;;6795:12;6740:2;6403:416;;;;;:::o;8528:175::-;8643:19;;;8692:4;8683:14;;8636:67::o;9640:268::-;9705:1;9712:101;9726:6;9723:1;9720:13;9712:101;;;9793:11;;;9787:18;9774:11;;;9767:39;9748:2;9741:10;9712:101;;;9828:6;9825:1;9822:13;9819:2;;;9705:1;9884:6;9879:3;9875:16;9868:27;9819:2;;9689:219;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "batch(bytes[],bool)": {
        "notice": "Allows batched call to self (this contract).",
        "params": {
          "calls": "An array of inputs for each call.",
          "revertOnFail": "If True then reverts after a failed call and stops doing further calls."
        },
        "returns": {
          "results": "An array with the returned data of each function call, mapped one-to-one to `calls`.",
          "successes": "An array indicating the success of a call, mapped one-to-one to `calls`."
        }
      }
    },
    "version": 1
  },
  "offset": [
    218,
    2279
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD2423B51 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x31 CALLDATASIZE PUSH1 0x4 PUSH2 0x250 JUMP JUMPDEST PUSH2 0x4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44 SWAP3 SWAP2 SWAP1 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 DUP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x91 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDF JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xCA JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 PUSH1 0x60 ADDRESS DUP9 DUP9 DUP6 DUP2 DUP2 LT PUSH2 0xFE JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x45F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP3 SWAP2 SWAP1 PUSH2 0x39B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x159 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 PUSH2 0x16D JUMPI POP DUP6 ISZERO JUMPDEST PUSH2 0x176 DUP3 PUSH2 0x1E8 JUMP JUMPDEST SWAP1 PUSH2 0x19D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x445 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP2 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1AB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1CA JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP POP PUSH1 0x1 ADD PUSH2 0xE5 JUMP JUMPDEST POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x44 DUP3 MLOAD LT ISZERO PUSH2 0x22E JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x5472616E73616374696F6E2072657665727465642073696C656E746C79000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x24B JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x2D4 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x264 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x27B JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28E JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x29C JUMPI DUP6 DUP7 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x2AF JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP6 POP SWAP4 POP POP DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2C9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E5 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2FC JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x30F JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x31D JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD DUP4 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x33D JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x354 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x365 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x4B4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x387 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3E6 JUMPI DUP2 MLOAD ISZERO ISZERO DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3C8 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE DUP1 DUP6 MLOAD PUSH2 0x3FD DUP2 DUP5 PUSH2 0x4AB JUMP JUMPDEST SWAP2 POP DUP2 SWAP3 POP DUP4 DUP2 MUL DUP3 ADD DUP5 DUP9 ADD DUP7 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x436 JUMPI DUP6 DUP4 SUB DUP6 MSTORE PUSH2 0x424 DUP4 DUP4 MLOAD PUSH2 0x36F JUMP JUMPDEST SWAP5 DUP8 ADD SWAP5 SWAP3 POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x40C JUMP JUMPDEST POP SWAP1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x458 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x36F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x475 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x48F JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4CF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4B7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x5BB32A4B7970034FC71F7675EE6384B5DD6849236FB70FFDCD6953 0xD9 COINBASE PUSH22 0xBE64736F6C634300060C003300000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        218,
        2279
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        218,
        2279
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        218,
        2279
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "5": {
      "fn": null,
      "offset": [
        218,
        2279
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        218,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "8": {
      "fn": null,
      "offset": [
        218,
        2279
      ],
      "op": "LT",
      "path": "63"
    },
    "9": {
      "fn": null,
      "offset": [
        218,
        2279
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1E"
    },
    "12": {
      "fn": null,
      "offset": [
        218,
        2279
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "13": {
      "fn": null,
      "offset": [
        218,
        2279
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        218,
        2279
      ],
      "op": "CALLDATALOAD",
      "path": "63"
    },
    "16": {
      "fn": null,
      "offset": [
        218,
        2279
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        218,
        2279
      ],
      "op": "SHR",
      "path": "63"
    },
    "19": {
      "fn": null,
      "offset": [
        218,
        2279
      ],
      "op": "DUP1",
      "path": "63"
    },
    "20": {
      "fn": null,
      "offset": [
        218,
        2279
      ],
      "op": "PUSH4",
      "path": "63",
      "value": "0xD2423B51"
    },
    "25": {
      "fn": null,
      "offset": [
        218,
        2279
      ],
      "op": "EQ",
      "path": "63"
    },
    "26": {
      "fn": null,
      "offset": [
        218,
        2279
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x23"
    },
    "29": {
      "fn": null,
      "offset": [
        218,
        2279
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "30": {
      "fn": null,
      "offset": [
        218,
        2279
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "31": {
      "fn": null,
      "offset": [
        218,
        2279
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "33": {
      "fn": null,
      "offset": [
        218,
        2279
      ],
      "op": "DUP1",
      "path": "63"
    },
    "34": {
      "first_revert": true,
      "fn": null,
      "offset": [
        218,
        2279
      ],
      "op": "REVERT",
      "path": "63"
    },
    "35": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "36": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x36"
    },
    "39": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x31"
    },
    "42": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "43": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "45": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x250"
    },
    "48": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMP",
      "path": "63"
    },
    "49": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "50": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x4D"
    },
    "53": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMP",
      "path": "63"
    },
    "54": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "55": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "57": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "58": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x44"
    },
    "61": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "62": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "63": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "64": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x3AB"
    },
    "67": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMP",
      "path": "63"
    },
    "68": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "69": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "71": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "72": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "DUP1",
      "path": "63"
    },
    "73": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "74": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SUB",
      "path": "63"
    },
    "75": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "76": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "RETURN",
      "path": "63"
    },
    "77": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "78": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1840,
        1863
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x60"
    },
    "80": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1840,
        1863
      ],
      "op": "DUP1",
      "path": "63"
    },
    "81": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1922,
        1927
      ],
      "op": "DUP4",
      "path": "63",
      "statement": 0
    },
    "82": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH8",
      "path": "63",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "91": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP2",
      "path": "63"
    },
    "92": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "GT",
      "path": "63"
    },
    "93": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP1",
      "path": "63"
    },
    "94": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "95": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x67"
    },
    "98": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "99": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "101": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP1",
      "path": "63"
    },
    "102": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "REVERT",
      "path": "63"
    },
    "103": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "104": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "POP",
      "path": "63"
    },
    "105": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "107": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "108": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "109": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP1",
      "path": "63"
    },
    "110": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP3",
      "path": "63"
    },
    "111": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "112": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP1",
      "path": "63"
    },
    "113": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "115": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "MUL",
      "path": "63"
    },
    "116": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "118": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "ADD",
      "path": "63"
    },
    "119": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP3",
      "path": "63"
    },
    "120": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "ADD",
      "path": "63"
    },
    "121": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "123": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "124": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP1",
      "path": "63"
    },
    "125": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "126": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x91"
    },
    "129": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "130": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP2",
      "path": "63"
    },
    "131": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "133": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "ADD",
      "path": "63"
    },
    "134": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "136": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP3",
      "path": "63"
    },
    "137": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "MUL",
      "path": "63"
    },
    "138": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP1",
      "path": "63"
    },
    "139": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "CALLDATASIZE",
      "path": "63"
    },
    "140": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "DUP4",
      "path": "63"
    },
    "141": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "CALLDATACOPY",
      "path": "63"
    },
    "142": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "ADD",
      "path": "63"
    },
    "143": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "144": {
      "op": "POP"
    },
    "145": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1911,
        1935
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "146": {
      "op": "POP"
    },
    "147": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1899,
        1935
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "148": {
      "op": "POP"
    },
    "149": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1967,
        1972
      ],
      "op": "DUP4",
      "path": "63",
      "statement": 1
    },
    "150": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH8",
      "path": "63",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "159": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP2",
      "path": "63"
    },
    "160": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "GT",
      "path": "63"
    },
    "161": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP1",
      "path": "63"
    },
    "162": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "163": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xAB"
    },
    "166": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "167": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "169": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP1",
      "path": "63"
    },
    "170": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "REVERT",
      "path": "63"
    },
    "171": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "172": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "POP",
      "path": "63"
    },
    "173": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "175": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "176": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "177": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP1",
      "path": "63"
    },
    "178": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP3",
      "path": "63"
    },
    "179": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "180": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP1",
      "path": "63"
    },
    "181": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "183": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "MUL",
      "path": "63"
    },
    "184": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "186": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "ADD",
      "path": "63"
    },
    "187": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP3",
      "path": "63"
    },
    "188": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "ADD",
      "path": "63"
    },
    "189": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "191": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "192": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP1",
      "path": "63"
    },
    "193": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "194": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xDF"
    },
    "197": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "198": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP2",
      "path": "63"
    },
    "199": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "201": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "ADD",
      "path": "63"
    },
    "202": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "203": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x60"
    },
    "205": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP2",
      "path": "63"
    },
    "206": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "207": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "209": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "ADD",
      "path": "63"
    },
    "210": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "211": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1"
    },
    "213": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "214": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "SUB",
      "path": "63"
    },
    "215": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "216": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "DUP2",
      "path": "63"
    },
    "217": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xCA"
    },
    "220": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "221": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "222": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "POP",
      "path": "63"
    },
    "223": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "224": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1955,
        1980
      ],
      "op": "POP",
      "path": "63"
    },
    "225": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1945,
        1980
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "226": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1945,
        1980
      ],
      "op": "POP",
      "path": "63"
    },
    "227": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1995,
        2004
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "229": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "230": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2010,
        2026
      ],
      "op": "DUP5",
      "path": "63"
    },
    "231": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2010,
        2026
      ],
      "op": "DUP2",
      "path": "63"
    },
    "232": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2010,
        2026
      ],
      "op": "LT",
      "path": "63"
    },
    "233": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "234": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1DF"
    },
    "237": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "238": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2048,
        2060
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "240": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2062,
        2081
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x60"
    },
    "242": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2093,
        2097
      ],
      "op": "ADDRESS",
      "path": "63"
    },
    "243": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2117
      ],
      "op": "DUP9",
      "path": "63"
    },
    "244": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2117
      ],
      "op": "DUP9",
      "path": "63"
    },
    "245": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2118,
        2119
      ],
      "op": "DUP6",
      "path": "63"
    },
    "246": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "DUP2",
      "path": "63"
    },
    "247": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "DUP2",
      "path": "63"
    },
    "248": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "LT",
      "path": "63"
    },
    "249": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xFE"
    },
    "252": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "253": {
      "dev": "Index out of range",
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "INVALID",
      "path": "63"
    },
    "254": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "255": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "256": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "POP",
      "path": "63"
    },
    "257": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "259": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "MUL",
      "path": "63"
    },
    "260": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "DUP2",
      "path": "63"
    },
    "261": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "ADD",
      "path": "63"
    },
    "262": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "263": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x110"
    },
    "266": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "267": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "268": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x45F"
    },
    "271": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        2112,
        2120
      ],
      "op": "JUMP",
      "path": "63"
    },
    "272": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2112,
        2120
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "273": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "275": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "276": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x11E"
    },
    "279": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "SWAP3",
      "path": "63"
    },
    "280": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "281": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "282": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x39B"
    },
    "285": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        2085,
        2121
      ],
      "op": "JUMP",
      "path": "63"
    },
    "286": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "287": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "289": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "291": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "292": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP1",
      "path": "63"
    },
    "293": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP4",
      "path": "63"
    },
    "294": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "SUB",
      "path": "63"
    },
    "295": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP2",
      "path": "63"
    },
    "296": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP6",
      "path": "63"
    },
    "297": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "GAS",
      "path": "63"
    },
    "298": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DELEGATECALL",
      "path": "63"
    },
    "299": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "300": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "POP",
      "path": "63"
    },
    "301": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "POP",
      "path": "63"
    },
    "302": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "303": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP1",
      "path": "63"
    },
    "304": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "306": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP2",
      "path": "63"
    },
    "307": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "EQ",
      "path": "63"
    },
    "308": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x159"
    },
    "311": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "312": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "314": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "315": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "316": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "POP",
      "path": "63"
    },
    "317": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1F"
    },
    "319": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "NOT",
      "path": "63"
    },
    "320": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x3F"
    },
    "322": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "323": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "ADD",
      "path": "63"
    },
    "324": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "AND",
      "path": "63"
    },
    "325": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP3",
      "path": "63"
    },
    "326": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "ADD",
      "path": "63"
    },
    "327": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "329": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "330": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "331": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP3",
      "path": "63"
    },
    "332": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "333": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "RETURNDATASIZE",
      "path": "63"
    },
    "334": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x0"
    },
    "336": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "338": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "DUP5",
      "path": "63"
    },
    "339": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "ADD",
      "path": "63"
    },
    "340": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "RETURNDATACOPY",
      "path": "63"
    },
    "341": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x15E"
    },
    "344": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "JUMP",
      "path": "63"
    },
    "345": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "346": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x60"
    },
    "348": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "349": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "POP",
      "path": "63"
    },
    "350": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "351": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2085,
        2121
      ],
      "op": "POP",
      "path": "63"
    },
    "352": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2047,
        2121
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "353": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2047,
        2121
      ],
      "op": "POP",
      "path": "63"
    },
    "354": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2047,
        2121
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "355": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2047,
        2121
      ],
      "op": "POP",
      "path": "63"
    },
    "356": {
      "branch": 8,
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2143,
        2150
      ],
      "op": "DUP2",
      "path": "63",
      "statement": 2
    },
    "357": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2143,
        2167
      ],
      "op": "DUP1",
      "path": "63"
    },
    "358": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2143,
        2167
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x16D"
    },
    "361": {
      "branch": 8,
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2143,
        2167
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "362": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2143,
        2167
      ],
      "op": "POP",
      "path": "63"
    },
    "363": {
      "branch": 9,
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2155,
        2167
      ],
      "op": "DUP6",
      "path": "63"
    },
    "364": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2154,
        2167
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "365": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2143,
        2167
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "366": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2169,
        2190
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x176"
    },
    "369": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2183,
        2189
      ],
      "op": "DUP3",
      "path": "63"
    },
    "370": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2169,
        2182
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1E8"
    },
    "373": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        2169,
        2190
      ],
      "op": "JUMP",
      "path": "63"
    },
    "374": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2169,
        2190
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "375": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "376": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x19D"
    },
    "379": {
      "branch": 9,
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "380": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "382": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "383": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "387": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "389": {
      "op": "SHL"
    },
    "390": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "DUP2",
      "path": "63"
    },
    "391": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "392": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "394": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "ADD",
      "path": "63"
    },
    "395": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x194"
    },
    "398": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "399": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "400": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x445"
    },
    "403": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "i",
      "offset": [
        2135,
        2191
      ],
      "op": "JUMP",
      "path": "63"
    },
    "404": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "405": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x40"
    },
    "407": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "408": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "DUP1",
      "path": "63"
    },
    "409": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "410": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "SUB",
      "path": "63"
    },
    "411": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "412": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "REVERT",
      "path": "63"
    },
    "413": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "414": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2135,
        2191
      ],
      "op": "POP",
      "path": "63"
    },
    "415": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2220,
        2227
      ],
      "op": "DUP2",
      "path": "63",
      "statement": 3
    },
    "416": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2214
      ],
      "op": "DUP6",
      "path": "63"
    },
    "417": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2215,
        2216
      ],
      "op": "DUP5",
      "path": "63"
    },
    "418": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "DUP2",
      "path": "63"
    },
    "419": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "420": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "DUP2",
      "path": "63"
    },
    "421": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "LT",
      "path": "63"
    },
    "422": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1AB"
    },
    "425": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "426": {
      "dev": "Index out of range",
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "INVALID",
      "path": "63"
    },
    "427": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "428": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "430": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "MUL",
      "path": "63"
    },
    "431": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "433": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "ADD",
      "path": "63"
    },
    "434": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2217
      ],
      "op": "ADD",
      "path": "63"
    },
    "435": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "436": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "437": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "438": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "439": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "DUP2",
      "path": "63"
    },
    "440": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "441": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "442": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "DUP2",
      "path": "63"
    },
    "443": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "444": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "POP",
      "path": "63"
    },
    "445": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2205,
        2227
      ],
      "op": "POP",
      "path": "63"
    },
    "446": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2254,
        2260
      ],
      "op": "DUP1",
      "path": "63",
      "statement": 4
    },
    "447": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2248
      ],
      "op": "DUP5",
      "path": "63"
    },
    "448": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2249,
        2250
      ],
      "op": "DUP5",
      "path": "63"
    },
    "449": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "DUP2",
      "path": "63"
    },
    "450": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "451": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "DUP2",
      "path": "63"
    },
    "452": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "LT",
      "path": "63"
    },
    "453": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x1CA"
    },
    "456": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "457": {
      "dev": "Index out of range",
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "INVALID",
      "path": "63"
    },
    "458": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "459": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "461": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "462": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "DUP2",
      "path": "63"
    },
    "463": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "MUL",
      "path": "63"
    },
    "464": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "465": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "466": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "467": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "ADD",
      "path": "63"
    },
    "468": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2251
      ],
      "op": "ADD",
      "path": "63"
    },
    "469": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2241,
        2260
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "470": {
      "op": "POP"
    },
    "471": {
      "op": "POP"
    },
    "472": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2028,
        2031
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 5,
      "value": "0x1"
    },
    "474": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        2028,
        2031
      ],
      "op": "ADD",
      "path": "63"
    },
    "475": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0xE5"
    },
    "478": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "JUMP",
      "path": "63"
    },
    "479": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "480": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1990,
        2271
      ],
      "op": "POP",
      "path": "63"
    },
    "481": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP4",
      "path": "63"
    },
    "482": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "POP",
      "path": "63"
    },
    "483": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP4",
      "path": "63"
    },
    "484": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "485": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "POP",
      "path": "63"
    },
    "486": {
      "fn": "BaseBoringBatchable.batch",
      "offset": [
        1756,
        2277
      ],
      "op": "POP",
      "path": "63"
    },
    "487": {
      "fn": "BaseBoringBatchable.batch",
      "jump": "o",
      "offset": [
        1756,
        2277
      ],
      "op": "JUMP",
      "path": "63"
    },
    "488": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        440,
        927
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "489": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        512,
        525
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x60"
    },
    "491": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        673,
        675
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x44"
    },
    "493": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        652,
        663
      ],
      "op": "DUP3",
      "path": "63"
    },
    "494": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        652,
        670
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "495": {
      "branch": 10,
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        652,
        675
      ],
      "op": "LT",
      "path": "63"
    },
    "496": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        648,
        715
      ],
      "op": "ISZERO",
      "path": "63"
    },
    "497": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        648,
        715
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x22E"
    },
    "500": {
      "branch": 10,
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        648,
        715
      ],
      "op": "JUMPI",
      "path": "63"
    },
    "501": {
      "op": "POP"
    },
    "502": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "PUSH1",
      "path": "63",
      "statement": 6,
      "value": "0x40"
    },
    "504": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "DUP1",
      "path": "63"
    },
    "505": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "506": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "DUP1",
      "path": "63"
    },
    "507": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "DUP3",
      "path": "63"
    },
    "508": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "ADD",
      "path": "63"
    },
    "509": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "510": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "511": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "512": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x1D"
    },
    "514": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "DUP2",
      "path": "63"
    },
    "515": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "516": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "PUSH32",
      "path": "63",
      "value": "0x5472616E73616374696F6E2072657665727465642073696C656E746C79000000"
    },
    "549": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "551": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "DUP3",
      "path": "63"
    },
    "552": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "ADD",
      "path": "63"
    },
    "553": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "MSTORE",
      "path": "63"
    },
    "554": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x24B"
    },
    "557": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        677,
        715
      ],
      "op": "JUMP",
      "path": "63"
    },
    "558": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        648,
        715
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "559": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        815,
        819
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x4"
    },
    "561": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        802,
        813
      ],
      "op": "DUP3",
      "path": "63"
    },
    "562": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        798,
        820
      ],
      "op": "ADD",
      "path": "63"
    },
    "563": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        783,
        820
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "564": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        783,
        820
      ],
      "op": "POP",
      "path": "63"
    },
    "565": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        857,
        868
      ],
      "op": "DUP2",
      "path": "63",
      "statement": 7
    },
    "566": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "DUP1",
      "path": "63"
    },
    "567": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x20"
    },
    "569": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "ADD",
      "path": "63"
    },
    "570": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "571": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "MLOAD",
      "path": "63"
    },
    "572": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "DUP2",
      "path": "63"
    },
    "573": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "ADD",
      "path": "63"
    },
    "574": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "575": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x248"
    },
    "578": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "579": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "580": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "PUSH2",
      "path": "63",
      "value": "0x2D4"
    },
    "583": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "jump": "i",
      "offset": [
        846,
        879
      ],
      "op": "JUMP",
      "path": "63"
    },
    "584": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        846,
        879
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "585": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        839,
        879
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "586": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        839,
        879
      ],
      "op": "POP",
      "path": "63"
    },
    "587": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        440,
        927
      ],
      "op": "JUMPDEST",
      "path": "63"
    },
    "588": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        440,
        927
      ],
      "op": "SWAP2",
      "path": "63"
    },
    "589": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        440,
        927
      ],
      "op": "SWAP1",
      "path": "63"
    },
    "590": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "offset": [
        440,
        927
      ],
      "op": "POP",
      "path": "63"
    },
    "591": {
      "fn": "BaseBoringBatchable._getRevertMsg",
      "jump": "o",
      "offset": [
        440,
        927
      ],
      "op": "JUMP",
      "path": "63"
    },
    "592": {
      "op": "JUMPDEST"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "595": {
      "op": "DUP1"
    },
    "596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "600": {
      "op": "DUP5"
    },
    "601": {
      "op": "DUP7"
    },
    "602": {
      "op": "SUB"
    },
    "603": {
      "op": "SLT"
    },
    "604": {
      "op": "ISZERO"
    },
    "605": {
      "op": "PUSH2",
      "value": "0x264"
    },
    "608": {
      "op": "JUMPI"
    },
    "609": {
      "op": "DUP3"
    },
    "610": {
      "op": "DUP4"
    },
    "611": {
      "op": "REVERT"
    },
    "612": {
      "op": "JUMPDEST"
    },
    "613": {
      "op": "DUP4"
    },
    "614": {
      "op": "CALLDATALOAD"
    },
    "615": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "624": {
      "op": "DUP1"
    },
    "625": {
      "op": "DUP3"
    },
    "626": {
      "op": "GT"
    },
    "627": {
      "op": "ISZERO"
    },
    "628": {
      "op": "PUSH2",
      "value": "0x27B"
    },
    "631": {
      "op": "JUMPI"
    },
    "632": {
      "op": "DUP5"
    },
    "633": {
      "op": "DUP6"
    },
    "634": {
      "op": "REVERT"
    },
    "635": {
      "op": "JUMPDEST"
    },
    "636": {
      "op": "DUP2"
    },
    "637": {
      "op": "DUP7"
    },
    "638": {
      "op": "ADD"
    },
    "639": {
      "op": "SWAP2"
    },
    "640": {
      "op": "POP"
    },
    "641": {
      "op": "DUP7"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "644": {
      "op": "DUP4"
    },
    "645": {
      "op": "ADD"
    },
    "646": {
      "op": "SLT"
    },
    "647": {
      "op": "PUSH2",
      "value": "0x28E"
    },
    "650": {
      "op": "JUMPI"
    },
    "651": {
      "op": "DUP5"
    },
    "652": {
      "op": "DUP6"
    },
    "653": {
      "op": "REVERT"
    },
    "654": {
      "op": "JUMPDEST"
    },
    "655": {
      "op": "DUP2"
    },
    "656": {
      "op": "CALLDATALOAD"
    },
    "657": {
      "op": "DUP2"
    },
    "658": {
      "op": "DUP2"
    },
    "659": {
      "op": "GT"
    },
    "660": {
      "op": "ISZERO"
    },
    "661": {
      "op": "PUSH2",
      "value": "0x29C"
    },
    "664": {
      "op": "JUMPI"
    },
    "665": {
      "op": "DUP6"
    },
    "666": {
      "op": "DUP7"
    },
    "667": {
      "op": "REVERT"
    },
    "668": {
      "op": "JUMPDEST"
    },
    "669": {
      "op": "DUP8"
    },
    "670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "672": {
      "op": "DUP1"
    },
    "673": {
      "op": "DUP4"
    },
    "674": {
      "op": "MUL"
    },
    "675": {
      "op": "DUP6"
    },
    "676": {
      "op": "ADD"
    },
    "677": {
      "op": "ADD"
    },
    "678": {
      "op": "GT"
    },
    "679": {
      "op": "ISZERO"
    },
    "680": {
      "op": "PUSH2",
      "value": "0x2AF"
    },
    "683": {
      "op": "JUMPI"
    },
    "684": {
      "op": "DUP6"
    },
    "685": {
      "op": "DUP7"
    },
    "686": {
      "op": "REVERT"
    },
    "687": {
      "op": "JUMPDEST"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "690": {
      "op": "SWAP3"
    },
    "691": {
      "op": "DUP4"
    },
    "692": {
      "op": "ADD"
    },
    "693": {
      "op": "SWAP6"
    },
    "694": {
      "op": "POP"
    },
    "695": {
      "op": "SWAP4"
    },
    "696": {
      "op": "POP"
    },
    "697": {
      "op": "POP"
    },
    "698": {
      "op": "DUP5"
    },
    "699": {
      "op": "ADD"
    },
    "700": {
      "op": "CALLDATALOAD"
    },
    "701": {
      "op": "DUP1"
    },
    "702": {
      "op": "ISZERO"
    },
    "703": {
      "op": "ISZERO"
    },
    "704": {
      "op": "DUP2"
    },
    "705": {
      "op": "EQ"
    },
    "706": {
      "op": "PUSH2",
      "value": "0x2C9"
    },
    "709": {
      "op": "JUMPI"
    },
    "710": {
      "op": "DUP2"
    },
    "711": {
      "op": "DUP3"
    },
    "712": {
      "op": "REVERT"
    },
    "713": {
      "op": "JUMPDEST"
    },
    "714": {
      "op": "DUP1"
    },
    "715": {
      "op": "SWAP2"
    },
    "716": {
      "op": "POP"
    },
    "717": {
      "op": "POP"
    },
    "718": {
      "op": "SWAP3"
    },
    "719": {
      "op": "POP"
    },
    "720": {
      "op": "SWAP3"
    },
    "721": {
      "op": "POP"
    },
    "722": {
      "op": "SWAP3"
    },
    "723": {
      "op": "JUMP"
    },
    "724": {
      "op": "JUMPDEST"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "729": {
      "op": "DUP3"
    },
    "730": {
      "op": "DUP5"
    },
    "731": {
      "op": "SUB"
    },
    "732": {
      "op": "SLT"
    },
    "733": {
      "op": "ISZERO"
    },
    "734": {
      "op": "PUSH2",
      "value": "0x2E5"
    },
    "737": {
      "op": "JUMPI"
    },
    "738": {
      "op": "DUP1"
    },
    "739": {
      "op": "DUP2"
    },
    "740": {
      "op": "REVERT"
    },
    "741": {
      "op": "JUMPDEST"
    },
    "742": {
      "op": "DUP2"
    },
    "743": {
      "op": "MLOAD"
    },
    "744": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "753": {
      "op": "DUP1"
    },
    "754": {
      "op": "DUP3"
    },
    "755": {
      "op": "GT"
    },
    "756": {
      "op": "ISZERO"
    },
    "757": {
      "op": "PUSH2",
      "value": "0x2FC"
    },
    "760": {
      "op": "JUMPI"
    },
    "761": {
      "op": "DUP3"
    },
    "762": {
      "op": "DUP4"
    },
    "763": {
      "op": "REVERT"
    },
    "764": {
      "op": "JUMPDEST"
    },
    "765": {
      "op": "DUP2"
    },
    "766": {
      "op": "DUP5"
    },
    "767": {
      "op": "ADD"
    },
    "768": {
      "op": "SWAP2"
    },
    "769": {
      "op": "POP"
    },
    "770": {
      "op": "DUP5"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "773": {
      "op": "DUP4"
    },
    "774": {
      "op": "ADD"
    },
    "775": {
      "op": "SLT"
    },
    "776": {
      "op": "PUSH2",
      "value": "0x30F"
    },
    "779": {
      "op": "JUMPI"
    },
    "780": {
      "op": "DUP3"
    },
    "781": {
      "op": "DUP4"
    },
    "782": {
      "op": "REVERT"
    },
    "783": {
      "op": "JUMPDEST"
    },
    "784": {
      "op": "DUP2"
    },
    "785": {
      "op": "MLOAD"
    },
    "786": {
      "op": "DUP2"
    },
    "787": {
      "op": "DUP2"
    },
    "788": {
      "op": "GT"
    },
    "789": {
      "op": "ISZERO"
    },
    "790": {
      "op": "PUSH2",
      "value": "0x31D"
    },
    "793": {
      "op": "JUMPI"
    },
    "794": {
      "op": "DUP4"
    },
    "795": {
      "op": "DUP5"
    },
    "796": {
      "op": "REVERT"
    },
    "797": {
      "op": "JUMPDEST"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "800": {
      "op": "MLOAD"
    },
    "801": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "803": {
      "op": "DUP3"
    },
    "804": {
      "op": "ADD"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "807": {
      "op": "NOT"
    },
    "808": {
      "op": "AND"
    },
    "809": {
      "op": "DUP2"
    },
    "810": {
      "op": "ADD"
    },
    "811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "813": {
      "op": "ADD"
    },
    "814": {
      "op": "DUP4"
    },
    "815": {
      "op": "DUP2"
    },
    "816": {
      "op": "GT"
    },
    "817": {
      "op": "DUP3"
    },
    "818": {
      "op": "DUP3"
    },
    "819": {
      "op": "LT"
    },
    "820": {
      "op": "OR"
    },
    "821": {
      "op": "ISZERO"
    },
    "822": {
      "op": "PUSH2",
      "value": "0x33D"
    },
    "825": {
      "op": "JUMPI"
    },
    "826": {
      "op": "DUP6"
    },
    "827": {
      "op": "DUP7"
    },
    "828": {
      "op": "REVERT"
    },
    "829": {
      "op": "JUMPDEST"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "832": {
      "op": "MSTORE"
    },
    "833": {
      "op": "DUP2"
    },
    "834": {
      "op": "DUP2"
    },
    "835": {
      "op": "MSTORE"
    },
    "836": {
      "op": "DUP4"
    },
    "837": {
      "op": "DUP3"
    },
    "838": {
      "op": "ADD"
    },
    "839": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "841": {
      "op": "ADD"
    },
    "842": {
      "op": "DUP8"
    },
    "843": {
      "op": "LT"
    },
    "844": {
      "op": "ISZERO"
    },
    "845": {
      "op": "PUSH2",
      "value": "0x354"
    },
    "848": {
      "op": "JUMPI"
    },
    "849": {
      "op": "DUP5"
    },
    "850": {
      "op": "DUP6"
    },
    "851": {
      "op": "REVERT"
    },
    "852": {
      "op": "JUMPDEST"
    },
    "853": {
      "op": "PUSH2",
      "value": "0x365"
    },
    "856": {
      "op": "DUP3"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "859": {
      "op": "DUP4"
    },
    "860": {
      "op": "ADD"
    },
    "861": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "863": {
      "op": "DUP8"
    },
    "864": {
      "op": "ADD"
    },
    "865": {
      "op": "PUSH2",
      "value": "0x4B4"
    },
    "868": {
      "op": "JUMP"
    },
    "869": {
      "op": "JUMPDEST"
    },
    "870": {
      "op": "SWAP7"
    },
    "871": {
      "op": "SWAP6"
    },
    "872": {
      "op": "POP"
    },
    "873": {
      "op": "POP"
    },
    "874": {
      "op": "POP"
    },
    "875": {
      "op": "POP"
    },
    "876": {
      "op": "POP"
    },
    "877": {
      "op": "POP"
    },
    "878": {
      "op": "JUMP"
    },
    "879": {
      "op": "JUMPDEST"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "882": {
      "op": "DUP2"
    },
    "883": {
      "op": "MLOAD"
    },
    "884": {
      "op": "DUP1"
    },
    "885": {
      "op": "DUP5"
    },
    "886": {
      "op": "MSTORE"
    },
    "887": {
      "op": "PUSH2",
      "value": "0x387"
    },
    "890": {
      "op": "DUP2"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "893": {
      "op": "DUP7"
    },
    "894": {
      "op": "ADD"
    },
    "895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "897": {
      "op": "DUP7"
    },
    "898": {
      "op": "ADD"
    },
    "899": {
      "op": "PUSH2",
      "value": "0x4B4"
    },
    "902": {
      "op": "JUMP"
    },
    "903": {
      "op": "JUMPDEST"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "906": {
      "op": "ADD"
    },
    "907": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "909": {
      "op": "NOT"
    },
    "910": {
      "op": "AND"
    },
    "911": {
      "op": "SWAP3"
    },
    "912": {
      "op": "SWAP1"
    },
    "913": {
      "op": "SWAP3"
    },
    "914": {
      "op": "ADD"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "917": {
      "op": "ADD"
    },
    "918": {
      "op": "SWAP3"
    },
    "919": {
      "op": "SWAP2"
    },
    "920": {
      "op": "POP"
    },
    "921": {
      "op": "POP"
    },
    "922": {
      "op": "JUMP"
    },
    "923": {
      "op": "JUMPDEST"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "926": {
      "op": "DUP3"
    },
    "927": {
      "op": "DUP5"
    },
    "928": {
      "op": "DUP4"
    },
    "929": {
      "op": "CALLDATACOPY"
    },
    "930": {
      "op": "SWAP2"
    },
    "931": {
      "op": "ADD"
    },
    "932": {
      "op": "SWAP1"
    },
    "933": {
      "op": "DUP2"
    },
    "934": {
      "op": "MSTORE"
    },
    "935": {
      "op": "SWAP2"
    },
    "936": {
      "op": "SWAP1"
    },
    "937": {
      "op": "POP"
    },
    "938": {
      "op": "JUMP"
    },
    "939": {
      "op": "JUMPDEST"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "942": {
      "op": "DUP1"
    },
    "943": {
      "op": "DUP3"
    },
    "944": {
      "op": "MSTORE"
    },
    "945": {
      "op": "DUP4"
    },
    "946": {
      "op": "MLOAD"
    },
    "947": {
      "op": "SWAP1"
    },
    "948": {
      "op": "DUP3"
    },
    "949": {
      "op": "ADD"
    },
    "950": {
      "op": "DUP2"
    },
    "951": {
      "op": "SWAP1"
    },
    "952": {
      "op": "MSTORE"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "955": {
      "op": "SWAP1"
    },
    "956": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "958": {
      "op": "SWAP1"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "961": {
      "op": "DUP5"
    },
    "962": {
      "op": "ADD"
    },
    "963": {
      "op": "SWAP1"
    },
    "964": {
      "op": "DUP3"
    },
    "965": {
      "op": "DUP8"
    },
    "966": {
      "op": "ADD"
    },
    "967": {
      "op": "DUP5"
    },
    "968": {
      "op": "JUMPDEST"
    },
    "969": {
      "op": "DUP3"
    },
    "970": {
      "op": "DUP2"
    },
    "971": {
      "op": "LT"
    },
    "972": {
      "op": "ISZERO"
    },
    "973": {
      "op": "PUSH2",
      "value": "0x3E6"
    },
    "976": {
      "op": "JUMPI"
    },
    "977": {
      "op": "DUP2"
    },
    "978": {
      "op": "MLOAD"
    },
    "979": {
      "op": "ISZERO"
    },
    "980": {
      "op": "ISZERO"
    },
    "981": {
      "op": "DUP5"
    },
    "982": {
      "op": "MSTORE"
    },
    "983": {
      "op": "SWAP3"
    },
    "984": {
      "op": "DUP5"
    },
    "985": {
      "op": "ADD"
    },
    "986": {
      "op": "SWAP3"
    },
    "987": {
      "op": "SWAP1"
    },
    "988": {
      "op": "DUP5"
    },
    "989": {
      "op": "ADD"
    },
    "990": {
      "op": "SWAP1"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "993": {
      "op": "ADD"
    },
    "994": {
      "op": "PUSH2",
      "value": "0x3C8"
    },
    "997": {
      "op": "JUMP"
    },
    "998": {
      "op": "JUMPDEST"
    },
    "999": {
      "op": "POP"
    },
    "1000": {
      "op": "POP"
    },
    "1001": {
      "op": "POP"
    },
    "1002": {
      "op": "DUP4"
    },
    "1003": {
      "op": "DUP2"
    },
    "1004": {
      "op": "SUB"
    },
    "1005": {
      "op": "DUP3"
    },
    "1006": {
      "op": "DUP6"
    },
    "1007": {
      "op": "ADD"
    },
    "1008": {
      "op": "MSTORE"
    },
    "1009": {
      "op": "DUP1"
    },
    "1010": {
      "op": "DUP6"
    },
    "1011": {
      "op": "MLOAD"
    },
    "1012": {
      "op": "PUSH2",
      "value": "0x3FD"
    },
    "1015": {
      "op": "DUP2"
    },
    "1016": {
      "op": "DUP5"
    },
    "1017": {
      "op": "PUSH2",
      "value": "0x4AB"
    },
    "1020": {
      "op": "JUMP"
    },
    "1021": {
      "op": "JUMPDEST"
    },
    "1022": {
      "op": "SWAP2"
    },
    "1023": {
      "op": "POP"
    },
    "1024": {
      "op": "DUP2"
    },
    "1025": {
      "op": "SWAP3"
    },
    "1026": {
      "op": "POP"
    },
    "1027": {
      "op": "DUP4"
    },
    "1028": {
      "op": "DUP2"
    },
    "1029": {
      "op": "MUL"
    },
    "1030": {
      "op": "DUP3"
    },
    "1031": {
      "op": "ADD"
    },
    "1032": {
      "op": "DUP5"
    },
    "1033": {
      "op": "DUP9"
    },
    "1034": {
      "op": "ADD"
    },
    "1035": {
      "op": "DUP7"
    },
    "1036": {
      "op": "JUMPDEST"
    },
    "1037": {
      "op": "DUP4"
    },
    "1038": {
      "op": "DUP2"
    },
    "1039": {
      "op": "LT"
    },
    "1040": {
      "op": "ISZERO"
    },
    "1041": {
      "op": "PUSH2",
      "value": "0x436"
    },
    "1044": {
      "op": "JUMPI"
    },
    "1045": {
      "op": "DUP6"
    },
    "1046": {
      "op": "DUP4"
    },
    "1047": {
      "op": "SUB"
    },
    "1048": {
      "op": "DUP6"
    },
    "1049": {
      "op": "MSTORE"
    },
    "1050": {
      "op": "PUSH2",
      "value": "0x424"
    },
    "1053": {
      "op": "DUP4"
    },
    "1054": {
      "op": "DUP4"
    },
    "1055": {
      "op": "MLOAD"
    },
    "1056": {
      "op": "PUSH2",
      "value": "0x36F"
    },
    "1059": {
      "op": "JUMP"
    },
    "1060": {
      "op": "JUMPDEST"
    },
    "1061": {
      "op": "SWAP5"
    },
    "1062": {
      "op": "DUP8"
    },
    "1063": {
      "op": "ADD"
    },
    "1064": {
      "op": "SWAP5"
    },
    "1065": {
      "op": "SWAP3"
    },
    "1066": {
      "op": "POP"
    },
    "1067": {
      "op": "SWAP1"
    },
    "1068": {
      "op": "DUP7"
    },
    "1069": {
      "op": "ADD"
    },
    "1070": {
      "op": "SWAP1"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1073": {
      "op": "ADD"
    },
    "1074": {
      "op": "PUSH2",
      "value": "0x40C"
    },
    "1077": {
      "op": "JUMP"
    },
    "1078": {
      "op": "JUMPDEST"
    },
    "1079": {
      "op": "POP"
    },
    "1080": {
      "op": "SWAP1"
    },
    "1081": {
      "op": "SWAP10"
    },
    "1082": {
      "op": "SWAP9"
    },
    "1083": {
      "op": "POP"
    },
    "1084": {
      "op": "POP"
    },
    "1085": {
      "op": "POP"
    },
    "1086": {
      "op": "POP"
    },
    "1087": {
      "op": "POP"
    },
    "1088": {
      "op": "POP"
    },
    "1089": {
      "op": "POP"
    },
    "1090": {
      "op": "POP"
    },
    "1091": {
      "op": "POP"
    },
    "1092": {
      "op": "JUMP"
    },
    "1093": {
      "op": "JUMPDEST"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1098": {
      "op": "DUP3"
    },
    "1099": {
      "op": "MSTORE"
    },
    "1100": {
      "op": "PUSH2",
      "value": "0x458"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1105": {
      "op": "DUP4"
    },
    "1106": {
      "op": "ADD"
    },
    "1107": {
      "op": "DUP5"
    },
    "1108": {
      "op": "PUSH2",
      "value": "0x36F"
    },
    "1111": {
      "op": "JUMP"
    },
    "1112": {
      "op": "JUMPDEST"
    },
    "1113": {
      "op": "SWAP4"
    },
    "1114": {
      "op": "SWAP3"
    },
    "1115": {
      "op": "POP"
    },
    "1116": {
      "op": "POP"
    },
    "1117": {
      "op": "POP"
    },
    "1118": {
      "op": "JUMP"
    },
    "1119": {
      "op": "JUMPDEST"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1122": {
      "op": "DUP1"
    },
    "1123": {
      "op": "DUP4"
    },
    "1124": {
      "op": "CALLDATALOAD"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "1127": {
      "op": "NOT"
    },
    "1128": {
      "op": "DUP5"
    },
    "1129": {
      "op": "CALLDATASIZE"
    },
    "1130": {
      "op": "SUB"
    },
    "1131": {
      "op": "ADD"
    },
    "1132": {
      "op": "DUP2"
    },
    "1133": {
      "op": "SLT"
    },
    "1134": {
      "op": "PUSH2",
      "value": "0x475"
    },
    "1137": {
      "op": "JUMPI"
    },
    "1138": {
      "op": "DUP3"
    },
    "1139": {
      "op": "DUP4"
    },
    "1140": {
      "op": "REVERT"
    },
    "1141": {
      "op": "JUMPDEST"
    },
    "1142": {
      "op": "DUP4"
    },
    "1143": {
      "op": "ADD"
    },
    "1144": {
      "op": "DUP1"
    },
    "1145": {
      "op": "CALLDATALOAD"
    },
    "1146": {
      "op": "SWAP2"
    },
    "1147": {
      "op": "POP"
    },
    "1148": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1157": {
      "op": "DUP3"
    },
    "1158": {
      "op": "GT"
    },
    "1159": {
      "op": "ISZERO"
    },
    "1160": {
      "op": "PUSH2",
      "value": "0x48F"
    },
    "1163": {
      "op": "JUMPI"
    },
    "1164": {
      "op": "DUP3"
    },
    "1165": {
      "op": "DUP4"
    },
    "1166": {
      "op": "REVERT"
    },
    "1167": {
      "op": "JUMPDEST"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1170": {
      "op": "ADD"
    },
    "1171": {
      "op": "SWAP2"
    },
    "1172": {
      "op": "POP"
    },
    "1173": {
      "op": "CALLDATASIZE"
    },
    "1174": {
      "op": "DUP2"
    },
    "1175": {
      "op": "SWAP1"
    },
    "1176": {
      "op": "SUB"
    },
    "1177": {
      "op": "DUP3"
    },
    "1178": {
      "op": "SGT"
    },
    "1179": {
      "op": "ISZERO"
    },
    "1180": {
      "op": "PUSH2",
      "value": "0x4A4"
    },
    "1183": {
      "op": "JUMPI"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1186": {
      "op": "DUP1"
    },
    "1187": {
      "op": "REVERT"
    },
    "1188": {
      "op": "JUMPDEST"
    },
    "1189": {
      "op": "SWAP3"
    },
    "1190": {
      "op": "POP"
    },
    "1191": {
      "op": "SWAP3"
    },
    "1192": {
      "op": "SWAP1"
    },
    "1193": {
      "op": "POP"
    },
    "1194": {
      "op": "JUMP"
    },
    "1195": {
      "op": "JUMPDEST"
    },
    "1196": {
      "op": "SWAP1"
    },
    "1197": {
      "op": "DUP2"
    },
    "1198": {
      "op": "MSTORE"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1201": {
      "op": "ADD"
    },
    "1202": {
      "op": "SWAP1"
    },
    "1203": {
      "op": "JUMP"
    },
    "1204": {
      "op": "JUMPDEST"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1207": {
      "op": "JUMPDEST"
    },
    "1208": {
      "op": "DUP4"
    },
    "1209": {
      "op": "DUP2"
    },
    "1210": {
      "op": "LT"
    },
    "1211": {
      "op": "ISZERO"
    },
    "1212": {
      "op": "PUSH2",
      "value": "0x4CF"
    },
    "1215": {
      "op": "JUMPI"
    },
    "1216": {
      "op": "DUP2"
    },
    "1217": {
      "op": "DUP2"
    },
    "1218": {
      "op": "ADD"
    },
    "1219": {
      "op": "MLOAD"
    },
    "1220": {
      "op": "DUP4"
    },
    "1221": {
      "op": "DUP3"
    },
    "1222": {
      "op": "ADD"
    },
    "1223": {
      "op": "MSTORE"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1226": {
      "op": "ADD"
    },
    "1227": {
      "op": "PUSH2",
      "value": "0x4B7"
    },
    "1230": {
      "op": "JUMP"
    },
    "1231": {
      "op": "JUMPDEST"
    },
    "1232": {
      "op": "DUP4"
    },
    "1233": {
      "op": "DUP2"
    },
    "1234": {
      "op": "GT"
    },
    "1235": {
      "op": "ISZERO"
    },
    "1236": {
      "op": "PUSH2",
      "value": "0x4DE"
    },
    "1239": {
      "op": "JUMPI"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1242": {
      "op": "DUP5"
    },
    "1243": {
      "op": "DUP5"
    },
    "1244": {
      "op": "ADD"
    },
    "1245": {
      "op": "MSTORE"
    },
    "1246": {
      "op": "JUMPDEST"
    },
    "1247": {
      "op": "POP"
    },
    "1248": {
      "op": "POP"
    },
    "1249": {
      "op": "POP"
    },
    "1250": {
      "op": "POP"
    },
    "1251": {
      "op": "JUMP"
    }
  },
  "sha1": "51cd1e8a8e346871227bee8f9491a9981ca9e55d",
  "source": "\npragma solidity 0.6.12;\npragma experimental ABIEncoderV2;\n\n// solhint-disable avoid-low-level-calls\n// solhint-disable no-inline-assembly\n\n// Audit on 5-Jan-2021 by Keno and BoringCrypto\n\nimport \"./BoringERC20.sol\";\n\ncontract BaseBoringBatchable {\n    /// @dev Helper function to extract a useful revert message from a failed call.\n    /// If the returned data is malformed or not correctly abi encoded then this call can fail itself.\n    function _getRevertMsg(bytes memory _returnData) internal pure returns (string memory) {\n        // If the _res length is less than 68, then the transaction failed silently (without a revert message)\n        if (_returnData.length < 68) return \"Transaction reverted silently\";\n\n        assembly {\n            // Slice the sighash.\n            _returnData := add(_returnData, 0x04)\n        }\n        return abi.decode(_returnData, (string)); // All that remains is the revert string\n    }\n\n    /// @notice Allows batched call to self (this contract).\n    /// @param calls An array of inputs for each call.\n    /// @param revertOnFail If True then reverts after a failed call and stops doing further calls.\n    /// @return successes An array indicating the success of a call, mapped one-to-one to `calls`.\n    /// @return results An array with the returned data of each function call, mapped one-to-one to `calls`.\n    // F1: External is ok here because this is the batch function, adding it to a batch makes no sense\n    // F2: Calls in the batch may be payable, delegatecall operates in the same context, so each call in the batch has access to msg.value\n    // C3: The length of the loop is fully under user control, so can't be exploited\n    // C7: Delegatecall is only used on the same contract, so it's safe\n    function batch(bytes[] calldata calls, bool revertOnFail) external payable returns (bool[] memory successes, bytes[] memory results) {\n        successes = new bool[](calls.length);\n        results = new bytes[](calls.length);\n        for (uint256 i = 0; i < calls.length; i++) {\n            (bool success, bytes memory result) = address(this).delegatecall(calls[i]);\n            require(success || !revertOnFail, _getRevertMsg(result));\n            successes[i] = success;\n            results[i] = result;\n        }\n    }\n}\n\ncontract BoringBatchable is BaseBoringBatchable {\n    /// @notice Call wrapper that performs `ERC20.permit` on `token`.\n    /// Lookup `IERC20.permit`.\n    // F6: Parameters can be used front-run the permit and the user's permit will fail (due to nonce or other revert)\n    //     if part of a batch this could be used to grief once as the second call would not need the permit\n    function permitToken(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public {\n        token.permit(from, to, amount, deadline, v, r, s);\n    }\n}",
  "sourceMap": "218:2061:63:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Utils/BoringBatchable.sol",
  "type": "contract"
}